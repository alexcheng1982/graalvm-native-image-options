[ {
  "type" : "HOSTED",
  "name" : "AOTInline",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated."
}, {
  "type" : "HOSTED",
  "name" : "AOTPriorityInline",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable use of priority inlining during AOT compilation."
}, {
  "type" : "HOSTED",
  "name" : "AOTTrivialInline",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform trivial method inlining in the AOT compiled native image."
}, {
  "type" : "HOSTED",
  "name" : "APIFunctionPrefix",
  "dataType" : "STRING",
  "defaultValue" : "graal_",
  "description" : "Prefix that is added to the names of API functions."
}, {
  "type" : "HOSTED",
  "name" : "AbortOnBenchmarkCounterOverflow",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Abort VM with SIGILL if benchmark counters controlled by the (Generic|Timed|Benchmark)DynamicCounters."
}, {
  "type" : "HOSTED",
  "name" : "AbortOnFieldReachable",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Print a trace and abort the build process if any field matching the specified pattern becomes reachable."
}, {
  "type" : "HOSTED",
  "name" : "AbortOnMethodReachable",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Print a trace and abort the build process if any method matching the specified pattern becomes reachable."
}, {
  "type" : "HOSTED",
  "name" : "AbortOnTypeReachable",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Print a trace and abort the build process if any type matching the specified pattern becomes reachable."
}, {
  "type" : "HOSTED",
  "name" : "AddAllCharsets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Make all hosted charsets available at run time."
}, {
  "type" : "HOSTED",
  "name" : "AddAllFileSystemProviders",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Make all supported providers returned by FileSystemProvider.installedProviders() available at run time."
}, {
  "type" : "HOSTED",
  "name" : "AddExports",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Value <module>/<package><target-module>(,<target-module>)* updates <module> to export <package> to <target-module>, regardless of module declaration. <target-module> can be ALL-UNNAMED to export to all unnamed modules."
}, {
  "type" : "HOSTED",
  "name" : "AddOpens",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Value <module>/<package><target-module>(,<target-module>)* updates <module> to open <package> to <target-module>, regardless of module declaration."
}, {
  "type" : "HOSTED",
  "name" : "AddReads",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Value <module><target-module>(,<target-module>)* updates <module> to read <target-module>, regardless of module declaration. <target-module> can be ALL-UNNAMED to read all unnamed modules."
}, {
  "type" : "HOSTED",
  "name" : "AdditionalHeaderBytes",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Add additional header bytes to each object, for diagnostic purposes."
}, {
  "type" : "HOSTED",
  "name" : "AdditionalSecurityProviders",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of additional security provider fully qualified class names to mark as used.Note that this option is only necessary if you use custom engine classes not available in JCA that are not JCA compliant."
}, {
  "type" : "HOSTED",
  "name" : "AdditionalSecurityServiceTypes",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of additional security service types (fully qualified class names) for automatic registration. Note that these must be JCA compliant."
}, {
  "type" : "HOSTED",
  "name" : "AdoptedPGOEnabled",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "A comma-separated list of file paths containing the adopted profiles. We profile frequently used code (e.g., the Java standard library), and cache collected profiles. Adopted profiles then enable the PGO without the profiling. ."
}, {
  "type" : "HOSTED",
  "name" : "AggregatedMetricsFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which aggregated metrics are dumped at shutdown. A CSV format is used if the file ends with .csv otherwise a more human readable format is used. If not specified, metrics are dumped to the console."
}, {
  "type" : "HOSTED",
  "name" : "AliasArrayTypeFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Model all array type flows using a unique elements type flow abstraction."
}, {
  "type" : "HOSTED",
  "name" : "AlignedHeapChunkSize",
  "dataType" : "LONG",
  "defaultValue" : 524288,
  "description" : "The size of an aligned chunk. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "AllocateInstancePrefetchLines",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Number of cache lines to load after the object address using prefetch instructions."
}, {
  "type" : "HOSTED",
  "name" : "AllocatePrefetchDistance",
  "dataType" : "LONG",
  "defaultValue" : 192,
  "description" : "Sets the size (in bytes) of the prefetch distance for object allocation. Memory about to be written with the value of new objects is prefetched up to this distance starting from the address of the last allocated object. Each Java thread has its own allocation point."
}, {
  "type" : "HOSTED",
  "name" : "AllocatePrefetchInstr",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Sets the prefetch instruction to prefetch ahead of the allocation pointer. Possible values are from 0 to 3. The actual instructions behind the values depend on the platform."
}, {
  "type" : "HOSTED",
  "name" : "AllocatePrefetchLines",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Number of cache lines to load after the array allocation using prefetch instructions."
}, {
  "type" : "HOSTED",
  "name" : "AllocatePrefetchStepSize",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Sets the step size (in bytes) for sequential prefetch instructions."
}, {
  "type" : "HOSTED",
  "name" : "AllocatePrefetchStyle",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Generated code style for prefetch instructions: for 0 or less no prefetch instructions are generated and for 1 or more prefetch instructions are introduced after each allocation."
}, {
  "type" : "HOSTED",
  "name" : "AllocationProfiling",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable runtime profiling of allocation."
}, {
  "type" : "HOSTED",
  "name" : "AllocationSiteSensitiveHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "A context sensitive heap means that each heap allocated object is modeled by using at least the allocation site."
}, {
  "type" : "HOSTED",
  "name" : "AllowDeprecatedAutomaticFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow using deprecated @AutomaticFeature annotation. If set to false, an error is shown instead of a warning."
}, {
  "type" : "HOSTED",
  "name" : "AllowDeprecatedBuilderClassesOnImageClasspath",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Instead of abort, only warn if image builder classes are found on the image class-path."
}, {
  "type" : "HOSTED",
  "name" : "AllowDeprecatedInitializeAllClassesAtBuildTime",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Instead of abort, only warn if --initialize-at-build-time is used."
}, {
  "type" : "HOSTED",
  "name" : "AllowFoldMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow MethodTypeFlow to see @Fold methods."
}, {
  "type" : "HOSTED",
  "name" : "AllowIncompleteClasspath",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Deprecated."
}, {
  "type" : "HOSTED",
  "name" : "AllowJRTFileSystem",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable support for reading Java modules (jimage format) and the jrt:// file system. Requires java.home to be set at runtime."
}, {
  "type" : "HOSTED",
  "name" : "AllowVMInspection",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables features that allow the VM to be inspected during run time."
}, {
  "type" : "HOSTED",
  "name" : "AllowVMInternalThreads",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if VM internal threads (e.g., a dedicated VM operation or reference handling thread) are allowed in this image."
}, {
  "type" : "HOSTED",
  "name" : "AlwaysInlineIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Unconditionally inline intrinsics."
}, {
  "type" : "HOSTED",
  "name" : "AlwaysInlineVTableStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "AnalysisContextSensitivity",
  "dataType" : "STRING",
  "defaultValue" : "insens",
  "description" : "Controls the static analysis context sensitivity. Available values: insens (context insensitive analysis), allocsens (context insensitive analysis, context insensitive heap, allocation site sensitive heap), _1obj (1 object sensitive analysis with a context insensitive heap), _2obj1h (2 object sensitive with a 1 context sensitive heap)."
}, {
  "type" : "HOSTED",
  "name" : "AnalysisSizeCutoff",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "The maximum size of type and method profiles returned by the static analysis. -1 indicates no limitation."
}, {
  "type" : "HOSTED",
  "name" : "ArrayRegionEqualsConstantLimit",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "Array region equality checks will be evaluated at compile time if the receiver is a constant and its length is smaller than this value."
}, {
  "type" : "HOSTED",
  "name" : "AssertInitializationSpecifiedForAllClasses",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Assert class initialization is specified for all classes."
}, {
  "type" : "HOSTED",
  "name" : "AsyncSignalSafeDiagnostics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Only print diagnostic output that is async signal safe."
}, {
  "type" : "HOSTED",
  "name" : "AutomaticUnsafeTransformationLogLevel",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Automatic unsafe field value transformation logging level: Disabled0, Basic1, Info2, Debug3.)."
}, {
  "type" : "HOSTED",
  "name" : "AuxiliaryEngineCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable the auxiliary engine cache features at runtime."
}, {
  "type" : "HOSTED",
  "name" : "BaseTargetSpending",
  "dataType" : "LONG",
  "defaultValue" : 120,
  "description" : "The base target spending used to estimate the inlining threshold; the higher, the likelier it is to inline."
}, {
  "type" : "HOSTED",
  "name" : "BenchmarkCounterPrintingCutoff",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a cutoff to print only most significant counters."
}, {
  "type" : "HOSTED",
  "name" : "BenchmarkCountersDumpDynamic",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dump dynamic counters."
}, {
  "type" : "HOSTED",
  "name" : "BenchmarkCountersDumpStatic",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump static counters."
}, {
  "type" : "HOSTED",
  "name" : "BenchmarkCountersFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which benchmark counters are dumped. A CSV format is used if the file ends with .csv otherwise a more human readable format is used. The fields in the CSV format are: category, group, name, value."
}, {
  "type" : "HOSTED",
  "name" : "BenchmarkDynamicCounters",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Turn on the benchmark counters. The format of this option is:."
}, {
  "type" : "HOSTED",
  "name" : "BlindConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Blind constants in code with a random key."
}, {
  "type" : "HOSTED",
  "name" : "BootstrapInitializeOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not compile anything on bootstrap but just initialize the compiler."
}, {
  "type" : "HOSTED",
  "name" : "BootstrapTimeout",
  "dataType" : "DOUBLE",
  "defaultValue" : 15.0,
  "description" : "Maximum time in minutes to spend bootstrapping (0 to disable this limit)."
}, {
  "type" : "HOSTED",
  "name" : "BootstrapWatchDogCriticalRateRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.25,
  "description" : "Ratio of the maximum compilation rate below which the bootstrap compilation rate must not fall (0 or less disables monitoring)."
}, {
  "type" : "HOSTED",
  "name" : "BreakChainedPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Break chained phis."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputBreakdowns",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Show code and heap breakdowns as part of the build output."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputColorful",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Color build output (enabled by default if colors are supported by terminal)."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputGCWarnings",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print GC warnings as part of build output."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputJSONFile",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Print build output statistics as JSON to the specified file. The output conforms to the JSON schema located at: docs/reference-manual/native-image/assets/build-output-schema-v0.9.2.json."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputLinks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Show links in build output (defaults to the value of BuildOutputColorful)."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputNativeImageOptionsEnvVarValue",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Internal option to forward the value of NATIVE_IMAGE_OPTIONS."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputPrefix",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prefix build output with '<pid>:<image name>'."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputProgress",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report progress in build output (default is adaptive)."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputRecommendations",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Show recommendations as part of the build output."
}, {
  "type" : "HOSTED",
  "name" : "BuildOutputSilent",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Silence build output."
}, {
  "type" : "HOSTED",
  "name" : "BuildReport",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Create a Native Image Build Report."
}, {
  "type" : "HOSTED",
  "name" : "BuildReportSamplerFlamegraph",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Add sampler output in form of a flame graph to Native Image Build Report."
}, {
  "type" : "HOSTED",
  "name" : "CAIAggressiveColdCodeOptimizations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determine if the optimizer should run aggressive optimizations on cold code (rarely executed code during the PGO run)."
}, {
  "type" : "HOSTED",
  "name" : "CAIAggressivelyOptimizeHot",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform more aggressive optimization on compilation units deemed to be hot."
}, {
  "type" : "HOSTED",
  "name" : "CAIApplyProfilesWhileExpanding",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Apply sampling based profiles to candidates for inlining before doing the inlining."
}, {
  "type" : "HOSTED",
  "name" : "CAIColdCodeMaxInvocations",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : "Maximum number of invocations of a non-sampled method beyond which that method will be considered cold. Will result in less optimizations performed on such compilation units."
}, {
  "type" : "HOSTED",
  "name" : "CAIHotBonusWhileExpanding",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Apply a bonus to the priority of hot cutoff nodes during exploration. Set to 0 to disable."
}, {
  "type" : "HOSTED",
  "name" : "CAIHotBonusWhileInlining",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Apply a bonus to the priority of hot nodes during inlining. Set to 0 to disable."
}, {
  "type" : "HOSTED",
  "name" : "CAIHotContextsRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.05,
  "description" : "The minimal percentage of the total time that has to be spent in a method invoked from a calling-context to consider them as hot."
}, {
  "type" : "HOSTED",
  "name" : "CAIPrintCallees",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Whether to print the hot compilation units."
}, {
  "type" : "HOSTED",
  "name" : "CAPCacheDir",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Directory where information generated by the CAnnotation Processor are cached."
}, {
  "type" : "HOSTED",
  "name" : "CCompilerOption",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Provide custom C compiler option used for query code compilation."
}, {
  "type" : "HOSTED",
  "name" : "CCompilerPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Provide custom path to C compiler used for query code compilation and linking."
}, {
  "type" : "HOSTED",
  "name" : "CFI",
  "dataType" : "STRING",
  "defaultValue" : "NONE",
  "description" : "Options for configuring control flow integrity (CFI) enforcement."
}, {
  "type" : "HOSTED",
  "name" : "CLibraryPath",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Search path for C libraries passed to the linker (list of comma-separated directories)."
}, {
  "type" : "HOSTED",
  "name" : "CMoveALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform CMove transformation on every IfNode possible."
}, {
  "type" : "HOSTED",
  "name" : "CPUFeatures",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma separated list of CPU features that will be enabled while building the target executable, irrespective of whether they are supported by the hosted environment. Note that enabling features not present within the target environment may result in application crashes. The specific options available are target platform dependent. See --list-cpu-features for feature list. These features are in addition to -march."
}, {
  "type" : "HOSTED",
  "name" : "CStandard",
  "dataType" : "STRING",
  "defaultValue" : "C89",
  "description" : "C standard to use in header files. Possible values are 'C89', 'C99', and 'C11'."
}, {
  "type" : "HOSTED",
  "name" : "CallGraphCompilerNodeLimit",
  "dataType" : "LONG",
  "defaultValue" : 35000,
  "description" : "Controls the maximum number of compiler nodes that can appear in the call graph."
}, {
  "type" : "HOSTED",
  "name" : "CallGraphSizeLimit",
  "dataType" : "LONG",
  "defaultValue" : 1200,
  "description" : "Controls the maximum size of the call graph before ceasing inlining."
}, {
  "type" : "HOSTED",
  "name" : "CallGraphSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.01,
  "description" : "Reduces the likelihood of exploring call graph subtrees that are large."
}, {
  "type" : "HOSTED",
  "name" : "CanonicalGraphStringsCheckConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exclude virtual nodes when dumping canonical text for graphs."
}, {
  "type" : "HOSTED",
  "name" : "CanonicalGraphStringsExcludeVirtuals",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Exclude virtual nodes when dumping canonical text for graphs."
}, {
  "type" : "HOSTED",
  "name" : "CanonicalGraphStringsRemoveIdentities",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Attempts to remove object identity hashes when dumping canonical text for graphs."
}, {
  "type" : "HOSTED",
  "name" : "CanonicalizerVerifyGVNAllowed",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify if the current graph state allows GVN to be performed."
}, {
  "type" : "HOSTED",
  "name" : "CheckBootModuleDependencies",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Temporary option to disable checking of image builder module dependencies or increasing its verbosity."
}, {
  "type" : "HOSTED",
  "name" : "CheckIsolateThreadAtEntry",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "At CEntryPoints check that the passed IsolateThread is valid."
}, {
  "type" : "HOSTED",
  "name" : "CheckRecurringCallbackOnNativeToJavaTransition",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Test whether a thread's recurring callback is pending on each transition from native code to Java."
}, {
  "type" : "HOSTED",
  "name" : "CheckToolchain",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Check if native-toolchain is known to work with native-image."
}, {
  "type" : "HOSTED",
  "name" : "ClampMLInferredProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Clamp the ML-inferred profiles."
}, {
  "type" : "HOSTED",
  "name" : "Class",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Class containing the default entry point method. Optional if --shared is used."
}, {
  "type" : "HOSTED",
  "name" : "ClassInitialization",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "A comma-separated list of classes appended with their initialization strategy (':build_time', ':rerun', or ':run_time')."
}, {
  "type" : "HOSTED",
  "name" : "ClearMetricsAfterBootstrap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Clear the debug metrics after bootstrap."
}, {
  "type" : "HOSTED",
  "name" : "CodeAlignment",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Alignment of AOT and JIT compiled code in bytes."
}, {
  "type" : "HOSTED",
  "name" : "CodeCacheCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Count accesses to the image and runtime code info table."
}, {
  "type" : "HOSTED",
  "name" : "CodeInfoEncoderCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Statistics about code and deoptimization information."
}, {
  "type" : "HOSTED",
  "name" : "CodeInfoIndexGranularity",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "The granularity of the index for looking up code metadata. Should be a power of 2. Larger values make the index smaller, but access slower."
}, {
  "type" : "HOSTED",
  "name" : "CodeSectionLayoutOptimization",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable code-section layout optimization when writing the native image (optimization valid only with --pgo)."
}, {
  "type" : "HOSTED",
  "name" : "CodeSectionLayoutOptimizationClosestIsBestGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 4000,
  "description" : "When code-section layout optimization is on, specify size of the graph used for closest-is-best algorithm."
}, {
  "type" : "HOSTED",
  "name" : "CodeSectionLayoutOptimizationSizeLimit",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "When code-section layout optimization is on, define if a size limit within closest-is-best algorithm is used."
}, {
  "type" : "HOSTED",
  "name" : "CollectImageBuildStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Collect information during image build about devirtualized invokes and bytecode exceptions."
}, {
  "type" : "HOSTED",
  "name" : "Color",
  "dataType" : "STRING",
  "defaultValue" : "auto",
  "description" : "Color build output ('always', 'never', or 'auto')."
}, {
  "type" : "HOSTED",
  "name" : "CompilationBailoutAsFailure",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Treat compilation bailouts like compilation failures."
}, {
  "type" : "HOSTED",
  "name" : "CompilationCountLimit",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of compilations allowed for any method before the VM exits (a value of 0 means there is no limit)."
}, {
  "type" : "HOSTED",
  "name" : "CompilationExcludePhases",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude certain phases from compilation, either unconditionally or with a method filter. Multiple exclusions can be specified separated by ':'. Phase names are matched as substrings, e.g.: CompilationExcludePhasesPartialEscape:LoopA.*,B.foo excludes PartialEscapePhase from all compilations and any phase containing 'Loop' in its name from compilations of all methods in class A and of method B.foo."
}, {
  "type" : "HOSTED",
  "name" : "CompilationExpirationPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 300.0,
  "description" : "Time limit in seconds before a compilation expires (0 to disable the limit). A non-zero value for this option is doubled if assertions are enabled and quadrupled if DetailedAsserts is true."
}, {
  "type" : "HOSTED",
  "name" : "CompilationFailureAction",
  "dataType" : "STRING",
  "defaultValue" : "Silent",
  "description" : "Specifies the action to take when compilation fails."
}, {
  "type" : "HOSTED",
  "name" : "CompilationNoProgressPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 30.0,
  "description" : "Time limit in seconds before a compilation expires (0 to disable the limit) because no progress was made in the compiler."
}, {
  "type" : "HOSTED",
  "name" : "CompilationNoProgressStartTrackingProgressPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "Delay in seconds before compilation progress detection starts."
}, {
  "type" : "HOSTED",
  "name" : "CompilationWatchDogStartDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Delay in seconds before watch dog monitors a compilation (0 disables monitoring)."
}, {
  "type" : "HOSTED",
  "name" : "CompilationWatchDogVMExitDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of seconds after which a compilation appearing to make no progress causes the VM to exit (0 disables VM exiting)."
}, {
  "type" : "HOSTED",
  "name" : "CompileGraalWithC1Only",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "In tiered mode compile Graal and JVMCI using optimized first tier code."
}, {
  "type" : "HOSTED",
  "name" : "CompilerBackend",
  "dataType" : "STRING",
  "defaultValue" : "lir",
  "description" : "Backend used by the compiler."
}, {
  "type" : "HOSTED",
  "name" : "CompilerConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Names the compiler configuration to use. If omitted, the compiler configuration with the highest auto-selection priority is used. To see the set of available configurations, supply the value 'help' to this option."
}, {
  "type" : "HOSTED",
  "name" : "CompilerNodePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.006,
  "description" : "Controls the likelihood of exploring subtrees that already have a lot of code during inlining."
}, {
  "type" : "HOSTED",
  "name" : "ConditionalElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ConditionalEliminationBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run conditional elimination before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "ConditionalEliminationMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ConfigurationFileDirectories",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Directories directly containing configuration files for dynamic features at runtime."
}, {
  "type" : "HOSTED",
  "name" : "ConfigurationResourceRoots",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resource path above configuration resources for dynamic features at runtime."
}, {
  "type" : "HOSTED",
  "name" : "ConfigureReflectionMetadata",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable runtime instantiation of reflection objects for non-invoked methods."
}, {
  "type" : "HOSTED",
  "name" : "ConsiderVectorizableLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Consider the vectorizability of loop during the duplication of a merge inside a loop.There are rare cases where duplication can destroy vectorization."
}, {
  "type" : "HOSTED",
  "name" : "ContendedPaddingWidth",
  "dataType" : "LONG",
  "defaultValue" : 128,
  "description" : "How many bytes to pad fields and classes marked @Contended with."
}, {
  "type" : "HOSTED",
  "name" : "ContextAwareInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use PGO sampling data to do context aware inlining."
}, {
  "type" : "HOSTED",
  "name" : "CopyLanguageResources",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Automatically copy the necessary language resources to the resources/languages directory next to the produced image.Language resources for each language are specified in the native-image-resources.filelist file located in the language home directory.If there is no native-image-resources.filelist file in the language home directory or the file is empty, then no resources are copied."
}, {
  "type" : "HOSTED",
  "name" : "CopyPrimitiveElementArrays",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Return copies of primitive element arrays when referencing them from native code."
}, {
  "type" : "HOSTED",
  "name" : "CostNewLiveVariable",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "PullThroughPhiOptimization: Abstract cost for the creation of a new live value: new values can have a negativeimpact on register allocation, therefore we penalize it."
}, {
  "type" : "HOSTED",
  "name" : "CostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 32.0,
  "description" : "PullThroughPhiOptimization: Cost/Benefit heuristic for EE floating node duplication: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "CostReductionFactorHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 128.0,
  "description" : "See CostReductionFactor."
}, {
  "type" : "HOSTED",
  "name" : "Count",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which counters are enabled. See the Dump option for the pattern syntax. An empty value enables all counters unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "CountWriteBarriers",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Instrument write barriers with counters. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningBudget",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Code size budget of the strip mining transformation in terms of NodeCostSize."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningBudgetHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See CountedStripMiningBudget."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "The max number of iterations the counted inner loop takes."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningLogCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print counter phi values on each outer and inner loop iteration."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningMinFrequency",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimal frequency to consider a loop for strip mining."
}, {
  "type" : "HOSTED",
  "name" : "CountedStripMiningNodeSizeSmallGraphs",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Code size in NodeSize defining when code size heuristics starts capping strip mining."
}, {
  "type" : "HOSTED",
  "name" : "Counters",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of counters that are enabled irrespective of the value for Count option. An empty value enables all counters unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "CrashAt",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for method(s) that will trigger an exception when compiled. This option exists to test handling compilation crashes gracefully. See the MethodFilter option for the pattern syntax. A ':Bailout' suffix will raise a bailout exception and a ':PermanentBailout' suffix will raise a permanent bailout exception."
}, {
  "type" : "HOSTED",
  "name" : "CreateJvmShim",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Create a `jvm` shim for native libraries that link against that library."
}, {
  "type" : "HOSTED",
  "name" : "CutoffCodeSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0E-5,
  "description" : "Controls the likelihood of further exploring subtrees with a lot of code during inlining."
}, {
  "type" : "HOSTED",
  "name" : "DashboardAll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "In the dashboard dump, include all available information about the native image (this takes precedence over more specific flags)."
}, {
  "type" : "HOSTED",
  "name" : "DashboardBgv",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Set dashboard to use BGV format for dump."
}, {
  "type" : "HOSTED",
  "name" : "DashboardCode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "In the dashboard dump, include the breakdown of the code size across different packages."
}, {
  "type" : "HOSTED",
  "name" : "DashboardDump",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable dashboard dumps to the specified file."
}, {
  "type" : "HOSTED",
  "name" : "DashboardHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "In the dashboard dump, include the breakdown of the object sizes in the heap across different classes."
}, {
  "type" : "HOSTED",
  "name" : "DashboardJson",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Set dashboard to use JSON format for dump."
}, {
  "type" : "HOSTED",
  "name" : "DashboardPointsTo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "In the dashboard dump, include the information about the points-to analysis."
}, {
  "type" : "HOSTED",
  "name" : "DashboardPretty",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Set dashboard to use pretty print in JSON format."
}, {
  "type" : "HOSTED",
  "name" : "DeadlockWatchdogExitOnTimeout",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Exit the image builder VM after printing call stacks."
}, {
  "type" : "HOSTED",
  "name" : "DeadlockWatchdogInterval",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "The interval in minutes between watchdog checks (0 disables the watchdog)."
}, {
  "type" : "HOSTED",
  "name" : "DebugCodeInfoMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 2147483647,
  "description" : "Specify maximum inlining depth to consider when building DebugCodeInfo."
}, {
  "type" : "HOSTED",
  "name" : "DebugCodeInfoUseSourceMappings",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not use SourceMappings for generating DebugCodeInfo (i.e. only use Infopoints)."
}, {
  "type" : "HOSTED",
  "name" : "DebugInfoSourceCacheRoot",
  "dataType" : "STRING",
  "defaultValue" : "sources",
  "description" : "Directory under which to create source file cache for Application or GraalVM classes."
}, {
  "type" : "HOSTED",
  "name" : "DebugInfoSourceSearchPath",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Search path for source files for application or GraalVM classes (list of comma-separated directories or jar files)."
}, {
  "type" : "HOSTED",
  "name" : "DebugPeelingSynonyms",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Debug simulation synonyms during simulation-based loop peeling."
}, {
  "type" : "HOSTED",
  "name" : "DebugStubsAndSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable debug output for stub code generation and snippet preparation."
}, {
  "type" : "HOSTED",
  "name" : "DefaultCharset",
  "dataType" : "STRING",
  "defaultValue" : "UTF-8",
  "description" : "Default charset of the image, by the default it is the same as the default charset of the image builder."
}, {
  "type" : "HOSTED",
  "name" : "DefaultLocale",
  "dataType" : "STRING",
  "defaultValue" : "en-US",
  "description" : "Default locale of the image, by the default it is the same as the default locale of the image builder."
}, {
  "type" : "HOSTED",
  "name" : "DefaultLoopFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 100.0,
  "description" : "Default frequency for loops with unknown local frequency."
}, {
  "type" : "HOSTED",
  "name" : "DefaultUnswitchFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.7,
  "description" : "Default unswitching factor for control split node with unkown profile data."
}, {
  "type" : "HOSTED",
  "name" : "DeleteLocalSymbols",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use linker option to remove all local symbols from image."
}, {
  "type" : "HOSTED",
  "name" : "DeoptALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "DeoptAfterOSR",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deoptimize OSR compiled code when the OSR entry loop is finished if there is no mature profile available for the rest of the method."
}, {
  "type" : "HOSTED",
  "name" : "DeoptimizeAll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Compiles all methods as deoptimization targets for testing."
}, {
  "type" : "HOSTED",
  "name" : "DeoptsToDisableOptimisticOptimization",
  "dataType" : "LONG",
  "defaultValue" : 40,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "DetailedAsserts",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable expensive assertions if normal assertions (i.e. -ea or -esa) are enabled."
}, {
  "type" : "HOSTED",
  "name" : "DetectInvertedLoopsAsCounted",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "DetectUserDirectoriesInImageHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When set to true, the image generator verifies that the image heap does not contain a home directory as a substring."
}, {
  "type" : "HOSTED",
  "name" : "DevirtualizeHotCallees",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Devirtualizes callees that are hot."
}, {
  "type" : "HOSTED",
  "name" : "DiagnoseDumpLevel",
  "dataType" : "STRING",
  "defaultValue" : ":3",
  "description" : "Specify the dump level if CompilationFailureAction#Diagnose is used.See CompilationFailureAction for details. file:doc-files/CompilationFailureActionHelp.txt."
}, {
  "type" : "HOSTED",
  "name" : "DiagnosticBufferSize",
  "dataType" : "LONG",
  "defaultValue" : 30,
  "description" : "Specifies the number of entries that diagnostic buffers have."
}, {
  "type" : "HOSTED",
  "name" : "DiagnosticsDir",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Sets the dir where diagnostic information is dumped."
}, {
  "type" : "HOSTED",
  "name" : "DiagnosticsMode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables the diagnostic mode."
}, {
  "type" : "HOSTED",
  "name" : "DisableIntercept",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Disable intercepting exceptions in debug scopes."
}, {
  "type" : "HOSTED",
  "name" : "DisableIntrinsics",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Disable intrinsics matching the given method filter (see MethodFilter option for details). For example, 'DisableIntrinsicsString.equals' disables intrinsics for any method named 'equals' in a class whose simple name is 'String'. You can append ':verbose' at the end of the filter value to print out disabled intrinsics as they are encountered during compilation (e.g., 'String.equals:verbose')."
}, {
  "type" : "HOSTED",
  "name" : "DisableTypeIdResultVerification",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "For internal purposes only. Disables type id result verification even when running with assertions enabled."
}, {
  "type" : "HOSTED",
  "name" : "DisableURLProtocols",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "List of comma separated URL protocols that must never be included."
}, {
  "type" : "HOSTED",
  "name" : "DominatorUsageTreeMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "Dump",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Filter pattern for specifying scopes in which dumping is enabled."
}, {
  "type" : "HOSTED",
  "name" : "DumpAfterEveryBCI",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump the current graph after every bci to IGV."
}, {
  "type" : "HOSTED",
  "name" : "DumpAfterEveryLowering",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump lowering after every node to igv."
}, {
  "type" : "HOSTED",
  "name" : "DumpDetailedNodeTypeStats",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Gather statistics on local variables and their lifetimes relative to FrameStates."
}, {
  "type" : "HOSTED",
  "name" : "DumpEndVersusExitLoopFrequencies",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Debug flag to dump loop frequency differences computed based on loop end or exit nodes.If the frequencies diverge a lot, this may indicate missing profiles on control flowinside the loop body."
}, {
  "type" : "HOSTED",
  "name" : "DumpFoldedReflectionElements",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump folded reflection elements."
}, {
  "type" : "HOSTED",
  "name" : "DumpHeap",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Dump the heap at a specific time during image building.The option accepts a list of comma separated phases, any of: during-analysis, after-analysis, before-compilation."
}, {
  "type" : "HOSTED",
  "name" : "DumpOnError",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Send compiler IR to dump handlers on error."
}, {
  "type" : "HOSTED",
  "name" : "DumpOnPhaseChange",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Dump a before and after graph if the named phase changes the graph.%nThe argument is substring matched against the simple name of the phase class."
}, {
  "type" : "HOSTED",
  "name" : "DumpOutlinedSBGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump all graphs for outlined String, StringBuilder, and StringBuffer aggregations."
}, {
  "type" : "HOSTED",
  "name" : "DumpPath",
  "dataType" : "STRING",
  "defaultValue" : "graal_dumps",
  "description" : "The directory where various Graal dump files are written."
}, {
  "type" : "HOSTED",
  "name" : "DumpRuntimeCompilationOnSignal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dumps all runtime compiled methods on SIGUSR2."
}, {
  "type" : "HOSTED",
  "name" : "DumpTargetInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Show native-toolchain information and image-build settings."
}, {
  "type" : "HOSTED",
  "name" : "DumpThreadStacksOnSignal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dumps all thread stacktraces on SIGQUIT/SIGBREAK."
}, {
  "type" : "HOSTED",
  "name" : "DumpingErrorsAreFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Treat any exceptions during dumping as fatal."
}, {
  "type" : "HOSTED",
  "name" : "DuplicateALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform Duplications as long as there is any sane improvement."
}, {
  "type" : "HOSTED",
  "name" : "DuplicateMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable or Disable the Hot method duplication phase."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationBudgetFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.25,
  "description" : "Percentage in node cost graph size for the duplication budget. Computed relative to the methods code size."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationBudgetFactorHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See DuplicationBudgetFactor."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationBudgetFactorLate",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "Percentage in node cost graph size for the late duplication budget. Computed relative to the methods code size."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationCostReductionFactor",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Cost/Benefit heuristic for EE simulation-based code duplication: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationCostReductionFactorHotCode",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "See DuplicationCostReductionFactor."
}, {
  "type" : "HOSTED",
  "name" : "DuplicationMinBranchFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.66,
  "description" : "Ignore low frequency branches during duplication."
}, {
  "type" : "HOSTED",
  "name" : "DynamicCountersPrintGroupSeparator",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use grouping separators for number printing."
}, {
  "type" : "HOSTED",
  "name" : "DynamicProxyConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "One or several (comma-separated) paths to JSON files that specify lists of interfaces that define Java proxy classes."
}, {
  "type" : "HOSTED",
  "name" : "DynamicProxyConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing program elements to be made available for reflection (see ProxyConfigurationFiles)."
}, {
  "type" : "HOSTED",
  "name" : "DynamicProxyTracing",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable trace logging for dynamic proxy."
}, {
  "type" : "HOSTED",
  "name" : "EEPeelAlot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "EagerSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Eagerly construct extra snippet info."
}, {
  "type" : "HOSTED",
  "name" : "EarlyCodeEmissionOrder",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable early code emission order computation instead of late code emission order computation."
}, {
  "type" : "HOSTED",
  "name" : "EarlyExpandCheckCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve code generation by making checkcast operations better optimizable early in the compilation pipeline."
}, {
  "type" : "HOSTED",
  "name" : "EarlyGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform early global value numbering."
}, {
  "type" : "HOSTED",
  "name" : "EarlyLICM",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform early loop invariant code motion."
}, {
  "type" : "HOSTED",
  "name" : "EmitStringSubstitutions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Emit substitutions for String methods."
}, {
  "type" : "HOSTED",
  "name" : "EnableAllSecurityServices",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Add all security service classes to the generated image."
}, {
  "type" : "HOSTED",
  "name" : "EnableLoggingFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable the feature that provides support for logging."
}, {
  "type" : "HOSTED",
  "name" : "EnableMonitoringFeatures",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Enable monitoring features that allow the VM to be inspected at run time. Comma-separated list can contain 'heapdump', 'jfr', 'jvmstat', 'jmxserver' (experimental), 'jmxclient' (experimental), 'threaddump', or 'all' (deprecated behavior: defaults to 'all' if no argument is provided). For example: '--enable-monitoringheapdump,jfr'."
}, {
  "type" : "HOSTED",
  "name" : "EnablePLTGOT",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables support for dynamic method address resolution. Should never be enabled directly."
}, {
  "type" : "HOSTED",
  "name" : "EnableSecurityServicesFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable automatic registration of security services."
}, {
  "type" : "HOSTED",
  "name" : "EnableURLProtocols",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "List of comma separated URL protocols to enable."
}, {
  "type" : "HOSTED",
  "name" : "EnableWildcardExpansion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable wildcard expansion in command line arguments on Windows."
}, {
  "type" : "HOSTED",
  "name" : "EnforceMaxRuntimeCompileMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enforce checking of maximum number of methods allowed for runtime compilation. Useful for checking in the gate that the number of methods does not go up without a good reason."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseCloneReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to eliminate array clone operations by handling clone operations in early read elimination."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseEAIterations",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : "Enterprise PEA Iterations."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseEarlyGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform an extended version of early global value numbering on a graph.Considers only graphs without floating guards."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseEarlyInversionGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enterprise Loop Inversion for GVN."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseExactIVOpt",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve counted loop detection by specially handling math exact operations with code duplication."
}, {
  "type" : "HOSTED",
  "name" : "EnterprisePartialUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE version of partial loop unrolling that considers more loop shapes for unrolling."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseRCELogRangeCheckValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Log all range check sub values to stdout."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseRangeCheckElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform range check elimination for java long type range checks."
}, {
  "type" : "HOSTED",
  "name" : "EnterpriseReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run more read eliminations early in the compilation pipeline."
}, {
  "type" : "HOSTED",
  "name" : "EntryPointNamePrefix",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Prefix that is added to the names of entry point methods."
}, {
  "type" : "HOSTED",
  "name" : "ErrorFile",
  "dataType" : "STRING",
  "defaultValue" : "svm_err_b_%t_pid%p.md",
  "description" : "If an error occurs, save a build error report to this file [default: svm_err_b_%t_pid%p.md] (%p replaced with pid, %t with timestamp).)."
}, {
  "type" : "HOSTED",
  "name" : "EscapeAnalysisBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run partial escape analysis on compiler graphs before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "EscapeAnalysisIterations",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "EscapeAnalysisLoopCutoff",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "EscapeAnalyzeOnly",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ExactFullUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 800,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ExactPartialUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 200,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ExcludeFunctionFromDuplication",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude compilations that MethodFilter.match this string from the duplication optimization."
}, {
  "type" : "HOSTED",
  "name" : "ExcludeResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Regexp to match names of resources to be excluded from the image."
}, {
  "type" : "HOSTED",
  "name" : "ExitAfterAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exit after analysis."
}, {
  "type" : "HOSTED",
  "name" : "ExitAfterCAPCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exit image generation after C Annotation Processor Cache creation."
}, {
  "type" : "HOSTED",
  "name" : "ExitAfterQueryCodeGeneration",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Output query code for target platform without executing it."
}, {
  "type" : "HOSTED",
  "name" : "ExitAfterRelocatableImageWrite",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exit after writing relocatable file."
}, {
  "type" : "HOSTED",
  "name" : "ExpandAllProximityBonus",
  "dataType" : "DOUBLE",
  "defaultValue" : 6.0,
  "description" : "The decrease in call graph expansion pressure when there are few call nodes left to explore."
}, {
  "type" : "HOSTED",
  "name" : "ExpandAllProximityBonusInertia",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "The inertia at which the expand-all proximity bonus decreases with the number of yet unexpanded nodes."
}, {
  "type" : "HOSTED",
  "name" : "ExpansionInertiaBaseValue",
  "dataType" : "LONG",
  "defaultValue" : 550,
  "description" : "The slowness at which the expansion pressure grows with code size; the higher it is, the slower the pressure growth."
}, {
  "type" : "HOSTED",
  "name" : "ExpansionInertiaInvokeBonus",
  "dataType" : "LONG",
  "defaultValue" : 14,
  "description" : "The extra slowness at which the expansion pressure grows with the code size, for each extra invoke node."
}, {
  "type" : "HOSTED",
  "name" : "ExpansionInertiaMax",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "The max slowness at which the expansion pressure grows with the code size."
}, {
  "type" : "HOSTED",
  "name" : "ExtendedAsserts",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable extended asserts which slow down analysis."
}, {
  "type" : "HOSTED",
  "name" : "FailedLoopExplosionIsFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not bail out but throw an exception on failed loop explosion."
}, {
  "type" : "HOSTED",
  "name" : "FallbackExecutorClasspath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Internal option used to specify Classpath for FallbackExecutor."
}, {
  "type" : "HOSTED",
  "name" : "FallbackExecutorJavaArg",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Internal option used to specify java arguments for FallbackExecutor."
}, {
  "type" : "HOSTED",
  "name" : "FallbackExecutorMainClass",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Internal option used to specify MainClass for FallbackExecutor."
}, {
  "type" : "HOSTED",
  "name" : "FallbackExecutorSystemProperty",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Internal option used to specify system properties for FallbackExecutor."
}, {
  "type" : "HOSTED",
  "name" : "FallbackThreshold",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : "Define when fallback-image generation should be used."
}, {
  "type" : "HOSTED",
  "name" : "Features",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "A comma-separated list of fully qualified Feature implementation classes."
}, {
  "type" : "HOSTED",
  "name" : "FloatingDivNodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to float non-constant division operations to expose global value numbering of divisions."
}, {
  "type" : "HOSTED",
  "name" : "FoldSecurityManagerGetter",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Fold SecurityManager getter."
}, {
  "type" : "HOSTED",
  "name" : "ForceAdversarialLayout",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Place N-byte constants in the data section such that they are misaligned with respect to N*2. For example, place 4 byte constants at offset 4, 12 or 20, etc. This layout is used to detect instructions that load constants with alignment smaller than the fetch size. For instance, an XORPS instruction that does a 16-byte fetch of a 4-byte float not aligned to 16 bytes will cause a segfault."
}, {
  "type" : "HOSTED",
  "name" : "ForceExplicitReachabilityFence",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force an explicit compiler node for Reference.reachabilityFence, instead of relying on FrameState liveness."
}, {
  "type" : "HOSTED",
  "name" : "ForceGuardHoistingLoopDuplicationWithoutPGO",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Consider methods for guard hoisting loop duplication even if not using PGO."
}, {
  "type" : "HOSTED",
  "name" : "ForceNoROSectionRelocations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use only a writable native image heap (requires ld.gold linker)."
}, {
  "type" : "HOSTED",
  "name" : "ForceUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force partial unrolling of loops if at all possible."
}, {
  "type" : "HOSTED",
  "name" : "ForeignAPISupport",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Support for calls via the Java Foreign Function and Memory API."
}, {
  "type" : "HOSTED",
  "name" : "ForeignConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Files describing stubs allowing foreign calls."
}, {
  "type" : "HOSTED",
  "name" : "ForeignResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing stubs allowing foreign calls."
}, {
  "type" : "HOSTED",
  "name" : "FrameStateLivenessStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Gather statistics on local variables and their lifetimes relative to FrameStates."
}, {
  "type" : "HOSTED",
  "name" : "FullUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollAsPEACleanup",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform full unrolling as a Partial Escape Analysis Cleanup."
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollCodeSizeBudgetFactorForLargeGraphs",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Maximum factor by which full unrolling can increase code size for large graphs. The FullUnrollSmallGraphThreshold option determines which graphs are small."
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollCodeSizeBudgetFactorForSmallGraphs",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "Maximum factor by which full unrolling can increase code size for small graphs. The FullUnrollSmallGraphThreshold option determines which graphs are small."
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollConstantCompareBoost",
  "dataType" : "LONG",
  "defaultValue" : 15,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollMaxApplication",
  "dataType" : "LONG",
  "defaultValue" : 60,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 600,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 700,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "FullUnrollSmallGraphThreshold",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "The threshold in terms of NodeSize for a graph to be considered small for the purpose of full unrolling. Applied in conjunction with the FullUnrollCodeSizeBudgetFactorForSmallGraphs and FullUnrollCodeSizeBudgetFactorForLargeGraphs options."
}, {
  "type" : "HOSTED",
  "name" : "G1DebugLevel",
  "dataType" : "STRING",
  "defaultValue" : "product",
  "description" : "Specifies the debug level of the linked G1 GC [product, fastdebug, or debug]."
}, {
  "type" : "HOSTED",
  "name" : "G1HeapRegionSize",
  "dataType" : "LONG",
  "defaultValue" : 1048576,
  "description" : "Size of the G1 regions in bytes. Supported values are 1, 2, 4, 8, 16, 32, 64, 128, 256, or 512M."
}, {
  "type" : "HOSTED",
  "name" : "GCCardSizeInBytes",
  "dataType" : "LONG",
  "defaultValue" : 512,
  "description" : "Card table entry size (in bytes) for the G1 GC."
}, {
  "type" : "HOSTED",
  "name" : "GCDebugStartCycle",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Start tracing compiled GC barriers after N garbage collections (disabled if N < 0)."
}, {
  "type" : "HOSTED",
  "name" : "GatherSafepointStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Gather statistics about each safepoint."
}, {
  "type" : "HOSTED",
  "name" : "GenJavaCodeFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Generate Java code before high tier lowering for methods that MethodFilter.match this string."
}, {
  "type" : "HOSTED",
  "name" : "GenJavaCodeSaveDirectory",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path for saving generated Java code. If the value is omitted the debug dump path will be used."
}, {
  "type" : "HOSTED",
  "name" : "GenJavaCodeWithComments",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Generate comments alongside variable declarations."
}, {
  "type" : "HOSTED",
  "name" : "GenLoopSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "GenerateBuildArtifactsFile",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Create a build-artifacts.json file in the build directory. The output conforms to the JSON schema located at: docs/reference-manual/native-image/assets/build-artifacts-schema-v0.9.0.json."
}, {
  "type" : "HOSTED",
  "name" : "GenerateDebugInfo",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Insert debug info into the generated native image or library."
}, {
  "type" : "HOSTED",
  "name" : "GenericDynamicCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Turn on the benchmark counters, and displays the results on VM shutdown."
}, {
  "type" : "HOSTED",
  "name" : "GraalArithmeticStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use Graal arithmetic stubs instead of HotSpot stubs where possible."
}, {
  "type" : "HOSTED",
  "name" : "GraalCompileOnly",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "A filter applied to a method the VM has selected for compilation by Graal. A method not matching the filter is redirected to a lower tier compiler. The filter format is the same as for the MethodFilter option."
}, {
  "type" : "HOSTED",
  "name" : "GraalOS",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Compile the application for GraalOS."
}, {
  "type" : "HOSTED",
  "name" : "GraphCompressionThreshold",
  "dataType" : "LONG",
  "defaultValue" : 70,
  "description" : "Graal graph compression is performed when percent of live nodes falls below this value."
}, {
  "type" : "HOSTED",
  "name" : "GreyToBlackObjRefDemographics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Develop demographics of the object references visited. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "GuaranteeSubstrateTypesLinked",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Ensure all created SubstrateTypes are linked."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Duplicate certain loops and eliminate their guards."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationHoistFraction",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "Duplicate only loops where at least this fraction of guards can be hoisted."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationMaxSize",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Duplicate only loops up to this estimated size."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationMaxSizeHotCode",
  "dataType" : "LONG",
  "defaultValue" : 2048,
  "description" : "See GuardHoistingLoopDuplicationMaxSize."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationMinBodyIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Duplicate only loops with at least this many expected iterations of the loop body."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationMinBodyIterationsHotCode",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "See GuardHoistingLoopDuplicationMinBodyIterations."
}, {
  "type" : "HOSTED",
  "name" : "GuardHoistingLoopDuplicationMinHotness",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Duplicate only loops in methods executed at least this number of times."
}, {
  "type" : "HOSTED",
  "name" : "GuardMaxCondExitProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.8,
  "description" : "Maximum execution probability of a branch that contains the ControlSinkNode."
}, {
  "type" : "HOSTED",
  "name" : "GuardMinCondEstimatedAssembly",
  "dataType" : "DOUBLE",
  "defaultValue" : 50.0,
  "description" : "Minimum estimated assembly size of a branch that triggers the exit guard."
}, {
  "type" : "HOSTED",
  "name" : "GuardMinLoopProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.2,
  "description" : "Minimum loop body execution probability."
}, {
  "type" : "HOSTED",
  "name" : "GuardPriorities",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "HeapChunkHeaderPadding",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of bytes at the beginning of each heap chunk that are not used for payload data, i.e., can be freely used as metadata by the heap chunk provider. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "HeapDumpDefaultFilenamePrefix",
  "dataType" : "STRING",
  "defaultValue" : "svm-heapdump-",
  "description" : "A prefix that is used for heap dump filenames if no heap dump filename was specified explicitly."
}, {
  "type" : "HOSTED",
  "name" : "HeapVerifierVerbosity",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Control heap verifier verbosity level: 0 - quiet, 1 - info, 2 - warning, 3 - all."
}, {
  "type" : "HOSTED",
  "name" : "HighTierInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "HighTierPartialUnrolling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE partial unrolling in high tier."
}, {
  "type" : "HOSTED",
  "name" : "HotCodeMinSelfTime",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "Minimal self time for a compilation unit to be considered hot globally."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationBaseTargetSpending",
  "dataType" : "LONG",
  "defaultValue" : 300,
  "description" : "BaseTargetSpending value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationCompilerNodePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "CompilerNodePenaltyCoefficient value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationCutoffCodeSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "CutoffCodeSizePenaltyCoefficient value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationExpansionInertiaBaseValue",
  "dataType" : "LONG",
  "defaultValue" : 550,
  "description" : "ExpansionInertiaBaseValue value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationLargeChildrenCountPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "LargeChildrenCountPenaltyCoefficient value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationMaxPolymorphicDispatches",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : "MaxPolymorphicDispatches value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationMinPolymorphicDispatchProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.09,
  "description" : "MinPolymorphicDispatchProbability value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationRelativeBenefitInliningCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0E-4,
  "description" : "RelativeBenefitInliningCoefficient value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationSmallRootIrPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "SmallRootIrPenaltyCoefficient value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationTypicalGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 4320,
  "description" : "TypicalGraphSize value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotCompilationTypicalGraphSizeInvokeBonus",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "TypicalGraphSizeInvokeBonus value for the hot compilations."
}, {
  "type" : "HOSTED",
  "name" : "HotSpotDeoptExplicitExceptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Testing only option that forces deopts for exception throws."
}, {
  "type" : "HOSTED",
  "name" : "HotSpotPostOnExceptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Testing only option that forces deopts for exception throws."
}, {
  "type" : "HOSTED",
  "name" : "HotSpotPrintInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print inlining optimizations."
}, {
  "type" : "HOSTED",
  "name" : "HybridStaticContext",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable hybrid context for static methods, i.e. uses invocation site as context for static methods."
}, {
  "type" : "HOSTED",
  "name" : "IPEACutoffMaterializationWeight",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "Weight of a materialization triggered by an Invoke corresponding to a CutoffNode in the CallTree for IPEA."
}, {
  "type" : "HOSTED",
  "name" : "IPEAFrequency",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : "Indicates how often to run IPEA analysis."
}, {
  "type" : "HOSTED",
  "name" : "IPEAMaterializationBoostConstant",
  "dataType" : "LONG",
  "defaultValue" : 12,
  "description" : "Boost for Parent Nodes based on reduction of materializations."
}, {
  "type" : "HOSTED",
  "name" : "IPEAMaxForce",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Indicates how often to force IPEA analysis when otherwise inlining would not continue."
}, {
  "type" : "HOSTED",
  "name" : "IPEAStatisticsHistogramBuckets",
  "dataType" : "LONG",
  "defaultValue" : 12,
  "description" : "Track IPEA statistics in substratePriorityInliner."
}, {
  "type" : "HOSTED",
  "name" : "IPEAVirtualEscapeBoostSingle",
  "dataType" : "LONG",
  "defaultValue" : 12,
  "description" : "Boost for CutoffNode for single escaping object."
}, {
  "type" : "HOSTED",
  "name" : "IgnoreBadDuplications",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore duplications with a bad benefit cost relation."
}, {
  "type" : "HOSTED",
  "name" : "IgnoreDeoptUsages",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "IgnoreMaxHeapSizeWhileInVMOperation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Ignore the maximum heap size while a VM operation is executed."
}, {
  "type" : "HOSTED",
  "name" : "ImageBuildID",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Image Build ID is a 128-bit UUID string generated randomly, once per bundle or digest of input args when bundles are not used."
}, {
  "type" : "HOSTED",
  "name" : "ImageHeapCardMarking",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables card marking for image heap objects, which arranges them in chunks. Automatically enabled when supported. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "ImageObjectTreeExpandRoots",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Override the default suppression of specified roots. See: StaticAnalysisReports.md."
}, {
  "type" : "HOSTED",
  "name" : "ImageObjectTreeExpandTypes",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Override the default suppression of specified types. See: StaticAnalysisReports.md."
}, {
  "type" : "HOSTED",
  "name" : "ImageObjectTreeSuppressRoots",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Suppress the expansion of specified roots. See: StaticAnalysisReports.md."
}, {
  "type" : "HOSTED",
  "name" : "ImageObjectTreeSuppressTypes",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Suppress the expansion of specified types. See: StaticAnalysisReports.md."
}, {
  "type" : "HOSTED",
  "name" : "ImageSymbolsPrefix",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Common prefix used by method symbols in image."
}, {
  "type" : "HOSTED",
  "name" : "IncludeAllFromModule",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Include all classes, methods, and fields from given modules."
}, {
  "type" : "HOSTED",
  "name" : "IncludeAllFromPath",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Include all classes, methods, fields, and resources from given paths."
}, {
  "type" : "HOSTED",
  "name" : "IncludeAllLocales",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Make all hosted locales available at run time."
}, {
  "type" : "HOSTED",
  "name" : "IncludeAllTimeZones",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When true, all time zones will be pre-initialized in the image."
}, {
  "type" : "HOSTED",
  "name" : "IncludeDebugHelperMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if debugging-specific helper methods are embedded into the image. Those methods can be called directly from the debugger to obtain or print additional information."
}, {
  "type" : "HOSTED",
  "name" : "IncludeLocales",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma separated list of locales to be included into the image. The default locale is included in the list automatically if not present."
}, {
  "type" : "HOSTED",
  "name" : "IncludeMethodData",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Include a list of methods included in the image for runtime inspection."
}, {
  "type" : "HOSTED",
  "name" : "IncludeNodeSourcePositions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track NodeSourcePositions during runtime-compilation."
}, {
  "type" : "HOSTED",
  "name" : "IncludeResourceBundles",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma separated list of bundles to be included into the image."
}, {
  "type" : "HOSTED",
  "name" : "IncludeResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Regexp to match names of resources to be included in the image."
}, {
  "type" : "HOSTED",
  "name" : "IncludeSBOM",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Embed a Software Bill of Materials (SBOM) in the executable or shared library for passive inspection. A comma-separated list can contain 'cyclonedx', 'strict' (defaults to 'cyclonedx' if no argument is provided), or 'export' to save the SBOM to the native executable's output directory. The optional 'strict' flag aborts the build if any class cannot be matched to a library in the SBOM. For example: '--enable-sbomcyclonedx,strict'."
}, {
  "type" : "HOSTED",
  "name" : "IncludeTimeZones",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "The time zones, in addition to the default zone of the host, that will be pre-initialized in the image."
}, {
  "type" : "HOSTED",
  "name" : "InfeasiblePathCorrelation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "InfeasiblePathCorrelationWindowSize",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Limit of the number of dominating if nodes to consider in infeasible path correlation to avoid compile time explosion."
}, {
  "type" : "HOSTED",
  "name" : "InitialCollectionPolicy",
  "dataType" : "STRING",
  "defaultValue" : "Adaptive",
  "description" : "The garbage collection policy, either Adaptive (default) or BySpaceAndTime. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "InjectedCompilationDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of seconds by which to slow down each compilation. The compilations slowed down can be restricted with MethodFilter. This option exists to test the compilation watchdog."
}, {
  "type" : "HOSTED",
  "name" : "Inline",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable inlining."
}, {
  "type" : "HOSTED",
  "name" : "InlineAllBonus",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "The bonus applied to call nodes that can be fully inlined."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisAllowedDepth",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Maximum call depth for method inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisAllowedInlinings",
  "dataType" : "LONG",
  "defaultValue" : 10000,
  "description" : "Maximum number of methods inlined for method inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisAllowedInvokes",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Maximum number of invokes for method inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisAllowedNodes",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Maximum number of computation nodes for method inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisMethodHandleAllowedDepth",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum call depth for method handle internals inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisMethodHandleAllowedInlinings",
  "dataType" : "LONG",
  "defaultValue" : 10000,
  "description" : "Maximum number of methods inlined for method handle internals before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisMethodHandleAllowedInvokes",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum number of invokes for method handle internals inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineBeforeAnalysisMethodHandleAllowedNodes",
  "dataType" : "LONG",
  "defaultValue" : 10000,
  "description" : "Maximum number of computation nodes for method handle internals inlined before static analysis."
}, {
  "type" : "HOSTED",
  "name" : "InlineDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inlines trivial methods during bytecode parsing."
}, {
  "type" : "HOSTED",
  "name" : "InlineDuringParsingMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Maximum depth when inlining during bytecode parsing."
}, {
  "type" : "HOSTED",
  "name" : "InlineEverything",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "InlineGraalStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Embed all the emitted code for Graal-generated stubs."
}, {
  "type" : "HOSTED",
  "name" : "InlineMegamorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with megamorphic type profile (i.e., not all types could be recorded)."
}, {
  "type" : "HOSTED",
  "name" : "InlineMonomorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with monomorphic type profile."
}, {
  "type" : "HOSTED",
  "name" : "InlinePartialIntrinsicExitDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inlines partial intrinsic exits during bytecode parsing when possible. A partial intrinsic exit is a call within an intrinsic to the method being intrinsified and denotes semantics of the original method that the intrinsic does not support."
}, {
  "type" : "HOSTED",
  "name" : "InlinePolymorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with polymorphic type profile."
}, {
  "type" : "HOSTED",
  "name" : "InlineVTableStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "InlinedCompilerNodeLimit",
  "dataType" : "LONG",
  "defaultValue" : 20000,
  "description" : "Controls the maximum number of compiler nodes that can be inlined into the compiled method."
}, {
  "type" : "HOSTED",
  "name" : "InliningCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.02,
  "description" : "The coefficient used to compute the inlining threshold; the higher, the more to inline."
}, {
  "type" : "HOSTED",
  "name" : "InliningDepthError",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum inlining depth during partial evaluation before reporting an infinite recursion."
}, {
  "type" : "HOSTED",
  "name" : "InsertPreMainPostOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not unroll the main loop, only create pre-main-post."
}, {
  "type" : "HOSTED",
  "name" : "InspectGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Inspect analysis graphs."
}, {
  "type" : "HOSTED",
  "name" : "InspectServerContentPath",
  "dataType" : "STRING",
  "defaultValue" : "inspect",
  "description" : "Path to the contents of the Inspect web server."
}, {
  "type" : "HOSTED",
  "name" : "InstallExitHandlers",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Provide java.lang.Terminator exit handlers."
}, {
  "type" : "HOSTED",
  "name" : "InterceptBailout",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Intercept also bailout exceptions."
}, {
  "type" : "HOSTED",
  "name" : "InternalSymbolsAreGlobal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Compatibility option to make symbols used for the image heap global. Using global symbols is problematic for shared libraries because the loader implicitly changes the value when the symbol is already defined in the executable loading the library. Setting this option to true preserves the broken behavior of old Native Image versions."
}, {
  "type" : "HOSTED",
  "name" : "InternalThreadStackSize",
  "dataType" : "LONG",
  "defaultValue" : 2097152,
  "description" : "The size of each internal thread stack, in bytes."
}, {
  "type" : "HOSTED",
  "name" : "Intrinsify",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use compiler intrinsifications."
}, {
  "type" : "HOSTED",
  "name" : "IntrinsifyStringFormat",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Intrinsify String.format with constant format strings."
}, {
  "type" : "HOSTED",
  "name" : "InversionMinLocalFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency for a loop to be considered for inversion."
}, {
  "type" : "HOSTED",
  "name" : "InversionMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Minimal relative frequency for a loop to be considered for inversion."
}, {
  "type" : "HOSTED",
  "name" : "InvertMultiEndLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "InvertNonLeafLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "InvertVectorizableLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "IsolatedLoopHeaderAlignment",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "Alignment in bytes for loop header blocks that have no fall through paths."
}, {
  "type" : "HOSTED",
  "name" : "IterativePeelingLimit",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Allow iterative peeling of loops up to this many times (each time the peeling phase runs)."
}, {
  "type" : "HOSTED",
  "name" : "IterativePeelingOuterFrequencyBonusThreshold",
  "dataType" : "DOUBLE",
  "defaultValue" : 4.0,
  "description" : "Allow iterative peeling of loops with an outer frequency bonus above this value."
}, {
  "type" : "HOSTED",
  "name" : "JNI",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable Java Native Interface (JNI) support."
}, {
  "type" : "HOSTED",
  "name" : "JNIConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Files describing program elements to be made accessible via JNI (for syntax, see ReflectionConfigurationFiles)."
}, {
  "type" : "HOSTED",
  "name" : "JNIConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing program elements to be made accessible via JNI (see JNIConfigurationFiles)."
}, {
  "type" : "HOSTED",
  "name" : "JNIEnhancedErrorCodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "JNI functions will return more specific error codes."
}, {
  "type" : "HOSTED",
  "name" : "JNIExportSymbols",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Export Invocation API symbols."
}, {
  "type" : "HOSTED",
  "name" : "JNIVerboseLookupErrors",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report information about known JNI elements when lookup fails."
}, {
  "type" : "HOSTED",
  "name" : "JfrBasedExecutionSampler",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use JFR-based execution sampler."
}, {
  "type" : "HOSTED",
  "name" : "LIRDynMoveProfileMethod",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dynamic move profiling per method."
}, {
  "type" : "HOSTED",
  "name" : "LIRInstructionVerifierPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path to jar file containing LIR instruction verifier."
}, {
  "type" : "HOSTED",
  "name" : "LIROptConstantLoadOptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable constant load optimization."
}, {
  "type" : "HOSTED",
  "name" : "LIROptControlFlowOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LIROptEdgeMoveOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LIROptLSRAEliminateSpillMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable spill move elimination."
}, {
  "type" : "HOSTED",
  "name" : "LIROptLSRAOptimizeSpillPosition",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable spill position optimization."
}, {
  "type" : "HOSTED",
  "name" : "LIROptLSStackSlotAllocator",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use linear scan stack slot allocation."
}, {
  "type" : "HOSTED",
  "name" : "LIROptNullCheckOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LIROptRedundantMoveElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LIROptStackMoveOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LIROptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable LIR level optimizations."
}, {
  "type" : "HOSTED",
  "name" : "LIRProfileMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables profiling of methods."
}, {
  "type" : "HOSTED",
  "name" : "LIRProfileMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables profiling of move types on LIR level. Move types are for example stores (register to stack), constant loads (constant to register) or copies (register to register)."
}, {
  "type" : "HOSTED",
  "name" : "LSRAOptSplitOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "LSRA optimization: Only split but do not reassign."
}, {
  "type" : "HOSTED",
  "name" : "LSRAOptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable LSRA optimization."
}, {
  "type" : "HOSTED",
  "name" : "LargeArrayThreshold",
  "dataType" : "LONG",
  "defaultValue" : 131072,
  "description" : "The size at or above which an array will be allocated in its own unaligned chunk. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "LargeChildrenCountPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.005,
  "description" : "Reduces the likelihood of exploring call graphs that have a lot of children below the root."
}, {
  "type" : "HOSTED",
  "name" : "LimitInlinedInvokes",
  "dataType" : "DOUBLE",
  "defaultValue" : 5.0,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LimitObjectArrayLength",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable a limit for the number of objects recorded for each type of a type state before disabling heap sensitivity for that type. The analysis must be heap sensitive."
}, {
  "type" : "HOSTED",
  "name" : "LinkAtBuildTime",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Require types to be fully defined at image build-time. If used without args, all classes in scope of the option are required to be fully defined."
}, {
  "type" : "HOSTED",
  "name" : "LinkAtBuildTimePaths",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Require all types in given class or module-path entries to be fully defined at image build-time."
}, {
  "type" : "HOSTED",
  "name" : "LinkerRPath",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Path passed to the linker as the -rpath (list of comma-separated directories)."
}, {
  "type" : "HOSTED",
  "name" : "ListCPUFeatures",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Show CPU features specific to the target platform and exit."
}, {
  "type" : "HOSTED",
  "name" : "ListMetrics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Lists on the console at VM shutdown the metric names available to the Timers, Counters and MemUseTrackers options. Note that this only lists the metrics that were initialized during the VM execution and so will not include metrics for compiler code that is not executed."
}, {
  "type" : "HOSTED",
  "name" : "ListModules",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "List observable modules and exit."
}, {
  "type" : "HOSTED",
  "name" : "LoadExceptionObjectInVM",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use a VM runtime call to load and clear the exception object from the thread at the start of a compiled exception handler."
}, {
  "type" : "HOSTED",
  "name" : "LoadProfiles",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Load per compilation profile information."
}, {
  "type" : "HOSTED",
  "name" : "LocalizationCompressBundles",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Regular expressions matching which bundles should be compressed."
}, {
  "type" : "HOSTED",
  "name" : "LocalizationCompressInParallel",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Compress the bundles in parallel."
}, {
  "type" : "HOSTED",
  "name" : "LocalizationOptimizedMode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Optimize the resource bundle lookup using a simple map."
}, {
  "type" : "HOSTED",
  "name" : "LocalizationSubstituteLoadLookup",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Store the resource bundle content more efficiently in the fallback mode."
}, {
  "type" : "HOSTED",
  "name" : "LocalsPerCounter",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Number of cpu locals per counter. It has to be a power of 2."
}, {
  "type" : "HOSTED",
  "name" : "Log",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which logging is enabled. See the Dump option for the pattern syntax."
}, {
  "type" : "HOSTED",
  "name" : "LogFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which logging is sent. A %p in the name will be replaced with a string identifying the process, usually the process id and %t will be replaced by System.currentTimeMillis(). If the current runtime is in an isolate, then %i will be replaced by '<isolate id>' otherwise %i is removed. An %I is the same as %i except that the replacement is '<isolate id>@<isolate address>'. Using %o as filename sends logging to System.out whereas %e sends logging to System.err."
}, {
  "type" : "HOSTED",
  "name" : "LogVerbose",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable more verbose log output when available."
}, {
  "type" : "HOSTED",
  "name" : "LoopBoundOptimizationPhase",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve counted loop detection by finding more precise loop bounds."
}, {
  "type" : "HOSTED",
  "name" : "LoopExitVsLoopEndFrequencyDiff",
  "dataType" : "DOUBLE",
  "defaultValue" : 1000.0,
  "description" : "Scaling factor of frequency difference computed based on loop ends or exits."
}, {
  "type" : "HOSTED",
  "name" : "LoopHeaderAlignment",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Alignment in bytes for loop header blocks."
}, {
  "type" : "HOSTED",
  "name" : "LoopInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LoopMaxUnswitch",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LoopPeeling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LoopPredication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Hoists array bounds checks out of simple loops. This is ignored if SpeculativeGuardMovement is enabled."
}, {
  "type" : "HOSTED",
  "name" : "LoopPredicationMainPath",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Restricts LoopPredication to only focus on array bounds checks that dominate the back edge of a loop."
}, {
  "type" : "HOSTED",
  "name" : "LoopRotation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable Loop Rotation to let the compiler detect more loops as counted."
}, {
  "type" : "HOSTED",
  "name" : "LoopRotationAssertCountedAfter",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LoopRotationToxicNodeSetMaxNodecost",
  "dataType" : "LONG",
  "defaultValue" : 512,
  "description" : "Maximum size in NodeSize of the code to be duplicated during rotation."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchFrequencyBoost",
  "dataType" : "DOUBLE",
  "defaultValue" : 20.0,
  "description" : "Number of nodes allowed for a loop unswitching per loop frequency. The number of nodes allowed for the unswitching is proportional to the relative frequency of the loop by this constant."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchFrequencyMaxFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.95,
  "description" : "Maximun value for the frequency factor of an invariant."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchFrequencyMinFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.05,
  "description" : "Minimum value for the frequency factor of an invariant."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchMaxIncrease",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Maximum loop unswitching code size increase in nodes."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchMinSplitFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Lower bound for the minimun frequency of an invariant condition to be unswitched."
}, {
  "type" : "HOSTED",
  "name" : "LoopUnswitchTrivial",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Number of nodes allowed for a loop unswitching regardless of the loop frequency."
}, {
  "type" : "HOSTED",
  "name" : "LoopVectorizationKeepPostLoop",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Keep the original loop as the post-loop during loop vectorization."
}, {
  "type" : "HOSTED",
  "name" : "LoopVectorizationMaxBodyNodes",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "The maximal number of fixed body nodes to consider in loop vectorization."
}, {
  "type" : "HOSTED",
  "name" : "MLGraphFeaturesExtraction",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Extract graph ML features to support the profile inference in the GraalVM Native Image."
}, {
  "type" : "HOSTED",
  "name" : "MLProfileInference",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Employ static profiler to infer profiles in the GraalVM Native Image."
}, {
  "type" : "HOSTED",
  "name" : "MLProfileInferenceGuards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Employ guards to tune the ML-inferred profiles."
}, {
  "type" : "HOSTED",
  "name" : "MatchExpressions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow backend to match complex expressions."
}, {
  "type" : "HOSTED",
  "name" : "MaxCallingContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum length of the methods context chains."
}, {
  "type" : "HOSTED",
  "name" : "MaxCallingContextWidth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of contexts to record for a method. It only affects the analysis when the max and min calling context depth are different."
}, {
  "type" : "HOSTED",
  "name" : "MaxCompilationProblemsPerAction",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "The maximum number of compilation failures to handle with the action specified by CompilationFailureAction before changing to a less verbose action. This does not apply to the ExitVM action."
}, {
  "type" : "HOSTED",
  "name" : "MaxConstantObjectsPerType",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of constant objects recorded for each type before merging the constants into one unique constant object per type. If the value is 0 there is no limit."
}, {
  "type" : "HOSTED",
  "name" : "MaxDuplicationAnchor",
  "dataType" : "LONG",
  "defaultValue" : 2147483647,
  "description" : "Maximum duplication anchor number."
}, {
  "type" : "HOSTED",
  "name" : "MaxDuplicationFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Max amount of extra effort to expend handling irreducible loops. A value < 1 disables support for irreducible loops."
}, {
  "type" : "HOSTED",
  "name" : "MaxGraphSizeNodeCost",
  "dataType" : "LONG",
  "defaultValue" : 100000,
  "description" : "Maximum node cost graph size for duplication. If a graph is bigger duplication will stop."
}, {
  "type" : "HOSTED",
  "name" : "MaxHeapContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum length of the context used to model a heap object in addition to the allocation site; used only when ContextSensitiveHeap is enabled."
}, {
  "type" : "HOSTED",
  "name" : "MaxHeapContextWidth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of contexts to record for a heap object. It only affects the analysis when the max and min calling context depth are different."
}, {
  "type" : "HOSTED",
  "name" : "MaxInvokesInTrivialMethod",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Maximum number of invokes in a method so that it is considered trivial (for testing only)."
}, {
  "type" : "HOSTED",
  "name" : "MaxMispredictionCostIncreaseFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Abstract measure of the cost of branch misprediction. Higher values make generation of conditional moves more likely."
}, {
  "type" : "HOSTED",
  "name" : "MaxNodesAfterTrivialInlining",
  "dataType" : "LONG",
  "defaultValue" : 2147483647,
  "description" : "The maximum number of nodes in a graph allowed after trivial inlining."
}, {
  "type" : "HOSTED",
  "name" : "MaxNodesInTrivialLeafMethod",
  "dataType" : "LONG",
  "defaultValue" : 40,
  "description" : "Maximum number of nodes in a method so that it is considered trivial, if it does not have any invokes."
}, {
  "type" : "HOSTED",
  "name" : "MaxNodesInTrivialMethod",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Maximum number of nodes in a method so that it is considered trivial."
}, {
  "type" : "HOSTED",
  "name" : "MaxObjectSetSize",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "The maximum number of objects recorded for each type of a type state before disabling heap sensitivity for that type. The analysis must be heap sensitive. It has a minimum value of 1."
}, {
  "type" : "HOSTED",
  "name" : "MaxPolymorphicDispatches",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "The maximum number of dispatches in guarded polymorphic inlining."
}, {
  "type" : "HOSTED",
  "name" : "MaxPriorityInliningPeelingIterations",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Max number of precise inlining peeling iterations."
}, {
  "type" : "HOSTED",
  "name" : "MaxReachableTypes",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Maximum number of types allowed in the image. Used for tests where small number of types is necessary."
}, {
  "type" : "HOSTED",
  "name" : "MaxRounds",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum number of expand/inline rounds during a single run of the phase."
}, {
  "type" : "HOSTED",
  "name" : "MaxRuntimeCodeOffsetInstructions",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of instructions to randomly offset the entry of runtime installed methods. Use this option for less predictable entry points."
}, {
  "type" : "HOSTED",
  "name" : "MaxRuntimeCompileMethods",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Maximum number of methods allowed for runtime compilation."
}, {
  "type" : "HOSTED",
  "name" : "MaxSimulationIterations",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Maximum simulation-duplication iterations of the duplication optimization per invocation."
}, {
  "type" : "HOSTED",
  "name" : "MaxSimulationIterationsHotCode",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "See MaxSimulationIterations."
}, {
  "type" : "HOSTED",
  "name" : "MaxSplitsPerNode",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "MaxSurvivorSpaces",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Maximum number of survivor spaces. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "MaxTemplatesPerSnippet",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "MaxThinLockRecursion",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Maximum recursive locking depth for thin locks."
}, {
  "type" : "HOSTED",
  "name" : "MaxUnrolledObjectZeroingStores",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "Define the maximum number of stores for which the loop that zeroes out objects is unrolled."
}, {
  "type" : "HOSTED",
  "name" : "MaxUnswitchSuccessors",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Maximum number of split successors before aborting unswitching."
}, {
  "type" : "HOSTED",
  "name" : "MaxValueNodesPartialEscapeSelectiveInlining",
  "dataType" : "LONG",
  "defaultValue" : 35000,
  "description" : "Controls the maximum number of value nodes that can appear in the final graph."
}, {
  "type" : "HOSTED",
  "name" : "MaxVectorAlignmentUnroll",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Maximum number of unrolled alignment instructions."
}, {
  "type" : "HOSTED",
  "name" : "MaxVectorUnroll",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Maximum length of linear-code vector operations."
}, {
  "type" : "HOSTED",
  "name" : "MaximumDesiredSize",
  "dataType" : "LONG",
  "defaultValue" : 20000,
  "description" : "Maximum desired size of the compiler graph in nodes."
}, {
  "type" : "HOSTED",
  "name" : "MaximumEscapeAnalysisArrayLength",
  "dataType" : "LONG",
  "defaultValue" : 128,
  "description" : "The maximum length of an array that will be escape analyzed."
}, {
  "type" : "HOSTED",
  "name" : "MaximumInliningSize",
  "dataType" : "LONG",
  "defaultValue" : 300,
  "description" : "Inlining is explored up to this number of nodes in the graph for each call site."
}, {
  "type" : "HOSTED",
  "name" : "MaximumLoopExplosionCount",
  "dataType" : "LONG",
  "defaultValue" : 10000,
  "description" : "Max number of loop explosions per method."
}, {
  "type" : "HOSTED",
  "name" : "MaximumRecursiveInlining",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : "Maximum level of recursive inlining."
}, {
  "type" : "HOSTED",
  "name" : "MaximumTransitiveEnabledPullFactor",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "PullThroughPhiOptimization: Maximum number of algorithm iterations per optimization invocation."
}, {
  "type" : "HOSTED",
  "name" : "MegamorphicInliningMinMethodProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.33,
  "description" : "Minimum probability for methods to be inlined for megamorphic type profiles."
}, {
  "type" : "HOSTED",
  "name" : "MemUseTrackers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of memory usage trackers that are enabled irrespective of the value for TrackMemUse option. An empty value enables all memory usage trackers unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "Method",
  "dataType" : "STRING",
  "defaultValue" : "main",
  "description" : "Name of the main entry point method. Optional if --shared is used."
}, {
  "type" : "HOSTED",
  "name" : "MethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for matching methods. The syntax for a pattern is:."
}, {
  "type" : "HOSTED",
  "name" : "MethodFilterRootOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Only check MethodFilter against the root method in the context if true, otherwise check all methods."
}, {
  "type" : "HOSTED",
  "name" : "MethodInlineBailoutLimit",
  "dataType" : "LONG",
  "defaultValue" : 5000,
  "description" : "Per-compilation method inlining exploration limit before giving up (use 0 to disable)."
}, {
  "type" : "HOSTED",
  "name" : "MetricsFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which metrics are dumped per compilation."
}, {
  "type" : "HOSTED",
  "name" : "MicroArchitecture",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Generate instructions for a specific machine type. Defaults to 'x86-64-v3' on AMD64 and 'armv8-a' on AArch64. Use -marchcompatibility for best compatibility, or -marchnative for best performance if the native executable is deployed on the same machine or on a machine with the same CPU features. To list all available machine types, use -marchlist."
}, {
  "type" : "HOSTED",
  "name" : "MidTierInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "MidTierPartialUnrolling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE partial unrolling in mid tier."
}, {
  "type" : "HOSTED",
  "name" : "MinBlockFrequencyPull",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.66,
  "description" : "PullThroughPhiOptimization: Ignore low frequency branches during duplication."
}, {
  "type" : "HOSTED",
  "name" : "MinCallingContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The minimum length of the methods context chains."
}, {
  "type" : "HOSTED",
  "name" : "MinDuplicationAnchor",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Skip n duplication anchors."
}, {
  "type" : "HOSTED",
  "name" : "MinHeapContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The minimum length of the context used to model a heap object in addition to the allocation site; used only when ContextSensitiveHeap is enabled."
}, {
  "type" : "HOSTED",
  "name" : "MinPolymorphicDispatchProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "The minimum probability for using a dispatch in guarded polymorphic inlining."
}, {
  "type" : "HOSTED",
  "name" : "MinifyInvertedPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Break chained phis."
}, {
  "type" : "HOSTED",
  "name" : "MinimalBulkZeroingSize",
  "dataType" : "LONG",
  "defaultValue" : 2048,
  "description" : "If applicable, use bulk zeroing instructions when the zeroing size in bytes exceeds this threshold."
}, {
  "type" : "HOSTED",
  "name" : "MinimalGraphNodeSizeCheckSize",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Minimal size in NodeSize to check the graph size increases of phases."
}, {
  "type" : "HOSTED",
  "name" : "MinimalRegions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to reduce duplication code size to the minimal amount of code."
}, {
  "type" : "HOSTED",
  "name" : "MinimumBlindedConstantSize",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimum size (in bytes) of constants to blind."
}, {
  "type" : "HOSTED",
  "name" : "MinimumPeelFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.35,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "MissingRegistrationReportingMode",
  "dataType" : "STRING",
  "defaultValue" : "Throw",
  "description" : "Select the mode in which the missing reflection registrations will be reported."
}, {
  "type" : "HOSTED",
  "name" : "Module",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Module containing the class that contains the main entry point. Optional if --shared is used."
}, {
  "type" : "HOSTED",
  "name" : "MoveGuardsUpwards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Move guard nodes to earlier places in the dominator tree if all successors of basic block share a common guard condition."
}, {
  "type" : "HOSTED",
  "name" : "MultiExitCostFactor",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "Cost/Benefit heuristic for EE unrolling: If a loop has multiple exits, cost is increased by this value for every none-sinking loop exit."
}, {
  "type" : "HOSTED",
  "name" : "MultiExitCostFactorSink",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Cost/Benefit heuristic for EE unrolling: If a loop has multiple exits, cost is increased by this value for every sinking loop exit."
}, {
  "type" : "HOSTED",
  "name" : "MultiThreaded",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable support for threads and and thread-local variables (disable for single-threaded implementation)."
}, {
  "type" : "HOSTED",
  "name" : "NDCV",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Run level for NoDeadCodeVerifyHandler (0 off, 1 info, 2 verbose, 3 fatal)."
}, {
  "type" : "HOSTED",
  "name" : "Name",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Name of the output file to be generated."
}, {
  "type" : "HOSTED",
  "name" : "NativeArchitecture",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Uses the native architecture, i.e., the architecture of a machine that builds an image."
}, {
  "type" : "HOSTED",
  "name" : "NativeLinkerOption",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Pass the provided raw option that will be appended to the linker command to produce the final binary. The possible options are platform specific and passed through without any validation."
}, {
  "type" : "HOSTED",
  "name" : "NeverInline",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Pattern for disabling inlining of methods during image generation."
}, {
  "type" : "HOSTED",
  "name" : "NewCAPCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Create a C Annotation Processor Cache. Will erase any previous cache at that same location."
}, {
  "type" : "HOSTED",
  "name" : "NoDirectRelocationsInText",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Force no direct relocations to be present in the text section of the generated image."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMinedBenefitBoost",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Benefit boost for strip mined non counted loops."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningBudget",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Code size budget of the non-counted strip mining transformation in terms of NodeCostSize."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningBudgetHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See NonCountedStripMiningBudget."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningForceStripAll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force non-counted strip mining for all loops (also counted ones), test flag only."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningIgnoreSmallLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore small loops from strip mining, the iv overhead can cause slowdowns."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "The max number of iterations the counted inner loop takes. If -1, the frequency of the loop will be used to derive an inner frequency."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningMaximumInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 8192,
  "description" : "If NonCountedStripMiningInnerLoopTrips -1: Maximum loop trips for strip mined non-counted loops."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningMinFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 16.0,
  "description" : "Minimal loop frequency to consider a non-counted loop for strip mining."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningMinimumInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 512,
  "description" : "If NonCountedStripMiningInnerLoopTrips -1: Minimum loop trips for strip mined non-counted loops."
}, {
  "type" : "HOSTED",
  "name" : "NonCountedStripMiningReuseIVs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to reuse pre-existing induction variables inside non-counted loops for the strip-mined loop's exit check."
}, {
  "type" : "HOSTED",
  "name" : "NumberOfAnalysisThreads",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "HOSTED",
  "name" : "NumberOfThreads",
  "dataType" : "LONG",
  "defaultValue" : 12,
  "description" : "The maximum number of threads to use concurrently during native image generation."
}, {
  "type" : "HOSTED",
  "name" : "ObjdumpExecutables",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated list of candidate GNU objdump executables. If not specified, disassembling via GNU objdump is disabled. Otherwise, the first existing executable in the list is used."
}, {
  "type" : "HOSTED",
  "name" : "ObjectInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprectated, has no effect."
}, {
  "type" : "HOSTED",
  "name" : "ObjectInliningConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Deprectated, has no effect."
}, {
  "type" : "HOSTED",
  "name" : "ObjectInliningConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Deprectated, has no effect."
}, {
  "type" : "HOSTED",
  "name" : "OmitHotExceptionStacktrace",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OmitInlinedMethodDebugLineInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Omit generation of DebugLineInfo originating from inlined methods."
}, {
  "type" : "HOSTED",
  "name" : "OptAssumptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptBulkAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptCompressedFrameStateValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptConditionalMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize simple if branches with conditional moves."
}, {
  "type" : "HOSTED",
  "name" : "OptConvertDeoptsToGuards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptDeDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptDeoptimizationGrouping",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptDevirtualizeInvokesOptimistically",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptEarlyReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptEliminateGuards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptExactArithmetic",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptFloatingReads",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptGuardRangeGrouping",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptImplicitNullChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptInlineImageHeapConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize address operations that involve image heap constants."
}, {
  "type" : "HOSTED",
  "name" : "OptLockElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptLoopPhiStamps",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inject stamps on induction variables."
}, {
  "type" : "HOSTED",
  "name" : "OptMethodDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Duplicate methods to form hot part and cold part areas."
}, {
  "type" : "HOSTED",
  "name" : "OptPropagateEquality",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Propagate equality into dominated nodes."
}, {
  "type" : "HOSTED",
  "name" : "OptPullThroughPhi",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptScheduleOutOfLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptStaticFinalFieldFolding",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize static final fields that get a constant assigned in the class initializer."
}, {
  "type" : "HOSTED",
  "name" : "OptStringConcat",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize StringBuilder construction."
}, {
  "type" : "HOSTED",
  "name" : "OptStringConcatDump",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump graphs to help debug operation."
}, {
  "type" : "HOSTED",
  "name" : "OptStringConcatDumpUnhandled",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump graphs to help debug operation."
}, {
  "type" : "HOSTED",
  "name" : "OptWriteBarrierElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Eliminate redundant write barriers."
}, {
  "type" : "HOSTED",
  "name" : "OptWriteMotion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform write sinking, which moves writes inside loops after them, effectively reducing their frequency."
}, {
  "type" : "HOSTED",
  "name" : "OptimisticAliasingAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "OptimisticAliasingUseSpeculation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use speculation and deoptimization in optimistic aliasing analysis."
}, {
  "type" : "HOSTED",
  "name" : "OptimizationLog",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable the structured optimization log and specify where it is printed."
}, {
  "type" : "HOSTED",
  "name" : "OptimizationLogPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path to the directory where the optimization log is saved if OptimizationLog is set to Directory. Directories are created if they do no exist."
}, {
  "type" : "HOSTED",
  "name" : "Optimize",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Control code optimizations: b - optimize for fastest build time, 0 - no optimizations, 1 - basic optimizations, 2 - advanced optimizations, 3 - all optimizations for best performance."
}, {
  "type" : "HOSTED",
  "name" : "OptimizeLoopAccesses",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable access node optimizations for loops."
}, {
  "type" : "HOSTED",
  "name" : "OptimizeReturnedParameter",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Analysis: Detect methods that return one of their parameters and hardwire the parameter straight to the return."
}, {
  "type" : "HOSTED",
  "name" : "OptimizeVectorAPI",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Expand Vector API operations to optimized machine instructions."
}, {
  "type" : "HOSTED",
  "name" : "OptionalIdentityHashCodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allocate memory for identity hash codes only for those objects that need it."
}, {
  "type" : "HOSTED",
  "name" : "OutlineAllocations",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Outline allocations into factory methods."
}, {
  "type" : "HOSTED",
  "name" : "OutlineIndyStringConcatenations",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Outline string concatenation operations represented by invoke dynamic (indy) calls."
}, {
  "type" : "HOSTED",
  "name" : "OutlineSBMaterializations",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow outlined sequences of (StringBuilder|StringBuffer).append() to be materialized into a (StringBuilder|StringBuilder) instance."
}, {
  "type" : "HOSTED",
  "name" : "OutlineStringBufferAppends",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Attempt to outline sequences of StringBuffer.append() operations."
}, {
  "type" : "HOSTED",
  "name" : "OutlineStringBuilderAppends",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Attempt to outline sequences of StringBuilder.append() operations."
}, {
  "type" : "HOSTED",
  "name" : "OverrideProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow multiple compilations of the same method by overriding existing profiles."
}, {
  "type" : "HOSTED",
  "name" : "PGOAdoptedProfilesNormalizationValue",
  "dataType" : "LONG",
  "defaultValue" : 100000000000000,
  "description" : "The value that will be used to normalize adopted profiles."
}, {
  "type" : "HOSTED",
  "name" : "PGOContextSensitivityEnabled",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enables context sensitivity in PGO."
}, {
  "type" : "HOSTED",
  "name" : "PGOEnableProfileNormalization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable/disable normalization of profiles."
}, {
  "type" : "HOSTED",
  "name" : "PGOEnabled",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "A comma-separated list of files from which to read the data collected for profile-guided optimization of AOT compiled code (reads from default.iprof if nothing is specified). Each file must contain a single PGOProfiles object, serialized in JSON format, optionally compressed by gzip. ."
}, {
  "type" : "HOSTED",
  "name" : "PGOIgnoreVersionCheck",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prevent PGO run from failing if the profile version is not correct, and apply profiles on a best-effort basis."
}, {
  "type" : "HOSTED",
  "name" : "PGOPrintDroppedCallingContexts",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print a list of all calling-contexts that are dropped during a PGO run."
}, {
  "type" : "HOSTED",
  "name" : "PGOPrintUnmatchedPercentage",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the percentage of how many entries from the profile file(s) did not match the target application."
}, {
  "type" : "HOSTED",
  "name" : "PGOProfilesNormalizationValue",
  "dataType" : "LONG",
  "defaultValue" : 1000000000000000,
  "description" : "The value that will be used to normalize collected profiles."
}, {
  "type" : "HOSTED",
  "name" : "PageSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Define PageSize of a machine that runs the image. The default 0 ( same as host machine page size)."
}, {
  "type" : "HOSTED",
  "name" : "ParseOnce",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "HOSTED",
  "name" : "ParseOnceJIT",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "HOSTED",
  "name" : "ParseRuntimeOptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Parse and consume standard options and system properties from the command line arguments when the VM is created."
}, {
  "type" : "HOSTED",
  "name" : "ParsingContextMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "Limit the parsing context depth. Default value is arbitrary set at 100."
}, {
  "type" : "HOSTED",
  "name" : "PartialEscapeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "PartialRedundancyElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable partial redundancy elimination."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollCostReductionFactorHighTier",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Cost/Benefit heuristic for EE unrolling in high tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollCostReductionFactorHotCodeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "See PartialUnrollCostReductionFactorMidTier."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollCostReductionFactorMidTier",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "Cost/Benefit heuristic for EE unrolling in mid tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMaxIterationsHighTier",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Maximum number of iterations to unroll for a high tier main loop."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMaxIterationsMidTier",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Maximum number of iterations to unroll for a mid tier main loop."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMaxSizeHighTier",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "Maximum node cost size of a loop to be considered for high tier unrolling."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMaxSizeHotCodeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "See PartialUnrollMaxSizeMidTier."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMaxSizeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "Maximum node cost size of a loop to be considered for mid tier tier unrolling."
}, {
  "type" : "HOSTED",
  "name" : "PartialUnrollMinFrequency",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimal loop frequency to consider a loop for partial unrolling."
}, {
  "type" : "HOSTED",
  "name" : "Path",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Directory of the image file to be generated."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileCutThreshold",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "The limit on the number of paths at control-flow merges. Decreasing this value reduces the number of paths, but also shortens them."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileDumpFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Dump information for path profile (null or file name). If set to null, then dumping is disabled."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileFrequentThreshold",
  "dataType" : "LONG",
  "defaultValue" : 500,
  "description" : "Maximum acceptable number of paths coming from the inbound of a merge if both of them are frequent."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileGlobalLowFrequencyRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "If some block's relative frequency drops below this number times the maximum relative frequency in the graph, then the block is considered infrequent."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileLocalLowFrequencyRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "If the ratio of the merge's frequency with its inbound's frequency is greater than this threshold, then the inbound is considered infrequent."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileMaxTotalCounters",
  "dataType" : "LONG",
  "defaultValue" : 4000000,
  "description" : "Maximum number of counters to use in path profiling for all instrumented methods."
}, {
  "type" : "HOSTED",
  "name" : "PathProfilePolicy",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable or disable the path-profiling algorithm. If it enables it, it also allows to select which mode to execute."
}, {
  "type" : "HOSTED",
  "name" : "PathProfileRegenerate",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Controls whether the path-regeneration algorithm is executed."
}, {
  "type" : "HOSTED",
  "name" : "PeelALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress test for the loop peeling optimization by applying it aggressively."
}, {
  "type" : "HOSTED",
  "name" : "PeelOnlyLoopWithNodeID",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Peel only the loop with the specific loop begin node ID for debugging purposes."
}, {
  "type" : "HOSTED",
  "name" : "PeelingConsideredMinLoopIterations",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.5,
  "description" : "Minimal loop body iterations necessary to consider peeling."
}, {
  "type" : "HOSTED",
  "name" : "PeelingConsideredMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 4.0,
  "description" : "Minimal relative frequency of loop begin necessary to consider peeling."
}, {
  "type" : "HOSTED",
  "name" : "PeelingHighTierCostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 64.0,
  "description" : "Cost/Benefit heuristic for EE simulation-based loop peeling in high tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "PeelingMidTierCostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 8.0,
  "description" : "Cost/Benefit heuristic for EE simulation-based loop peeling in mid tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "HOSTED",
  "name" : "PenalizeComplexLoopControlFlow",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Increase the cost of duplicating control flow splits inside loops if they are not foldable.The generally tend to complicate control flow and generate worse code in the backend."
}, {
  "type" : "HOSTED",
  "name" : "PerfDataMemoryMappedFile",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if the collected performance data should be written to a memory-mapped file so that it can be accessed by external tools."
}, {
  "type" : "HOSTED",
  "name" : "PhiMinificationMinimalLoopFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency to consider a loop for inverted phi minifaction."
}, {
  "type" : "HOSTED",
  "name" : "PinnedObjectAddressing",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allows the addresses of pinned objects to be passed to other code."
}, {
  "type" : "HOSTED",
  "name" : "PlatformInterfaceCompatibilityMode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable the behavior of old GraalVM versions. When enabled, interfaces not available for the current platform are filtered."
}, {
  "type" : "HOSTED",
  "name" : "PredefinedClassesConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Files describing predefined classes that can be loaded at runtime according to the schema at https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/assets/predefined-classes-config-schema-v1.0.0.json."
}, {
  "type" : "HOSTED",
  "name" : "PredefinedClassesConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing predefined classes that can be loaded at runtime according to the schema at https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/assets/predefined-classes-config-schema-v1.0.0.json."
}, {
  "type" : "HOSTED",
  "name" : "PreferUnsignedComparison",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Rewrite signed comparisons to unsigned ones if the result is equal."
}, {
  "type" : "HOSTED",
  "name" : "PreserveFramePointer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Saves stack base pointer on the stack on method entry."
}, {
  "type" : "HOSTED",
  "name" : "PreventStringValueEscaping",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if aggressive method inlining should be used to prevent escaping of String.value."
}, {
  "type" : "HOSTED",
  "name" : "PrintAOTCompilation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print logging information during compilation."
}, {
  "type" : "HOSTED",
  "name" : "PrintAnalysisCallTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print analysis call tree, a breadth-first tree reduction of the call graph."
}, {
  "type" : "HOSTED",
  "name" : "PrintAnalysisCallTreeType",
  "dataType" : "STRING",
  "defaultValue" : "TXT",
  "description" : "Change the output format of the analysis call tree, available options are TXT and CSV. See: Reports.md."
}, {
  "type" : "HOSTED",
  "name" : "PrintAnalysisStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print analysis results statistics."
}, {
  "type" : "HOSTED",
  "name" : "PrintBBInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables dumping of basic blocks relative PC and frequencies in the dump directory."
}, {
  "type" : "HOSTED",
  "name" : "PrintBackendCFG",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping scheduled HIR, LIR, register allocation and code generation info to the C1Visualizer."
}, {
  "type" : "HOSTED",
  "name" : "PrintBlockMapping",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping CFG built during initial BciBlockMapping."
}, {
  "type" : "HOSTED",
  "name" : "PrintCallEdges",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print call edges with other analysis results statistics."
}, {
  "type" : "HOSTED",
  "name" : "PrintCanonicalGraphStringFlavor",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Choose format used when dumping canonical text for graphs: 0 gives a scheduled graph (better for spotting changes involving the schedule) while 1 gives a CFG containing expressions rooted at fixed nodes (better for spotting small structure differences)."
}, {
  "type" : "HOSTED",
  "name" : "PrintCanonicalGraphStrings",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping canonical text from for graphs."
}, {
  "type" : "HOSTED",
  "name" : "PrintClassInitialization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prints class initialization info for all classes detected by analysis."
}, {
  "type" : "HOSTED",
  "name" : "PrintCompilation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print an informational line to the console for each completed compilation."
}, {
  "type" : "HOSTED",
  "name" : "PrintFeatures",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print a list of active features."
}, {
  "type" : "HOSTED",
  "name" : "PrintFlags",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Show available options based on comma-separated option-types (allowed categories: User, Expert, Debug)."
}, {
  "type" : "HOSTED",
  "name" : "PrintFlagsWithExtraHelp",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Print extra help, if available, based on comma-separated option names. Pass * to show all options that contain extra help."
}, {
  "type" : "HOSTED",
  "name" : "PrintGOT",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prints the contents of the GOT."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraph",
  "dataType" : "STRING",
  "defaultValue" : "File",
  "description" : "Where IdealGraphVisualizer graph dumps triggered by Dump or DumpOnError should be written."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraphFile",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Setting to true sets PrintGraphfile, setting to false sets PrintGraphnetwork."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraphHost",
  "dataType" : "STRING",
  "defaultValue" : "127.0.0.1",
  "description" : "Host part of the address to which graphs are dumped."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraphPort",
  "dataType" : "LONG",
  "defaultValue" : 4445,
  "description" : "Port part of the address to which graphs are dumped in binary format."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraphStateDiff",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prints the difference in the graph state caused by each phase of the suite."
}, {
  "type" : "HOSTED",
  "name" : "PrintGraphWithSchedule",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Schedule graphs as they are dumped."
}, {
  "type" : "HOSTED",
  "name" : "PrintHeapHistogram",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print class statistics of native image heap."
}, {
  "type" : "HOSTED",
  "name" : "PrintIRWithLIR",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print HIR along side LIR as the latter is generated."
}, {
  "type" : "HOSTED",
  "name" : "PrintImageElementSizes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the sizes of the elements of the built image."
}, {
  "type" : "HOSTED",
  "name" : "PrintImageHeapConnectedComponents",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "A native-image run with the flag `"
}, {
  "type" : "HOSTED",
  "name" : "+PrintImageHeapConnectedComponents`",
  "dataType" : "STRING",
  "defaultValue" : "-",
  "description" : "will create reports that can help us debug which objects got into the native image heap and why. A component represents a set of objects in the image heap."
}, {
  "type" : "HOSTED",
  "name" : "PrintImageHeapPartitionSizes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the sizes of the native image heap as the image is built."
}, {
  "type" : "HOSTED",
  "name" : "PrintImageObjectTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print image object hierarchy."
}, {
  "type" : "HOSTED",
  "name" : "PrintIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the registered intrinsics in a format compatible with DisableIntrinsics."
}, {
  "type" : "HOSTED",
  "name" : "PrintJNIMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print JNI methods added to generated image."
}, {
  "type" : "HOSTED",
  "name" : "PrintLIRWithAssembly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Include the LIR as comments with the final assembly."
}, {
  "type" : "HOSTED",
  "name" : "PrintLoweringScheduleToTTY",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print schedule result pre lowering to TTY."
}, {
  "type" : "HOSTED",
  "name" : "PrintMethodHistogram",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print statistics of methods in native image heap."
}, {
  "type" : "HOSTED",
  "name" : "PrintOutlinedSBMethodMetrics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print histogram and metrics about the OutlinedSBMethods created."
}, {
  "type" : "HOSTED",
  "name" : "PrintPointsToStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report analysis statistics."
}, {
  "type" : "HOSTED",
  "name" : "PrintProfileLoading",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print to stdout when a profile is loaded."
}, {
  "type" : "HOSTED",
  "name" : "PrintProfilingInformation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print profiling information when parsing a method's bytecode."
}, {
  "type" : "HOSTED",
  "name" : "PrintRestrictHeapAccessPath",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print path for @RestrictHeapAccess warnings."
}, {
  "type" : "HOSTED",
  "name" : "PrintRestrictHeapAccessWarnings",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print warnings for @RestrictHeapAccess annotations."
}, {
  "type" : "HOSTED",
  "name" : "PrintRuntimeCompilationCallTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print call tree of methods reachable for runtime compilation."
}, {
  "type" : "HOSTED",
  "name" : "PrintRuntimeCompileMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print methods available for runtime compilation."
}, {
  "type" : "HOSTED",
  "name" : "PrintSBOutliningCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print counters collected while attempting to outline sequences of StringBuffer and StringBuilder operations."
}, {
  "type" : "HOSTED",
  "name" : "PrintSynchronizedAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print types used for Java synchronization."
}, {
  "type" : "HOSTED",
  "name" : "PrintUninterruptibleCalleeDOTGraph",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print (to stderr) a DOT graph of the @Uninterruptible annotations."
}, {
  "type" : "HOSTED",
  "name" : "PrintUniverse",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print information about classes, methods, and fields that are present in the native image."
}, {
  "type" : "HOSTED",
  "name" : "PrintUnmodifiedGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dump a graph even if it has not changed since it was last dumped. Change detection is based on adding and deleting nodes or changing inputs."
}, {
  "type" : "HOSTED",
  "name" : "PriorityForceInline",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Unconditionally inline all methods matching the pattern using the priority-based inliner. See the MethodFilter option for a description of the pattern syntax."
}, {
  "type" : "HOSTED",
  "name" : "PriorityInliningPolicy",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "The policy to use, must be empty for automatic resolution."
}, {
  "type" : "HOSTED",
  "name" : "PriorityInliningTuningPolicy",
  "dataType" : "STRING",
  "defaultValue" : "DomainSpecific",
  "description" : "Comma-separated list of analysis policies for exploring the methods in the call graph and for inlining, empty for no policy."
}, {
  "type" : "HOSTED",
  "name" : "PriorityNeverInline",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Never inline methods matching the pattern using the priority-based inliner. See the MethodFilter option for a description of the pattern syntax."
}, {
  "type" : "HOSTED",
  "name" : "ProfileAllocations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable profiling of allocation sites."
}, {
  "type" : "HOSTED",
  "name" : "ProfileAllocationsContext",
  "dataType" : "STRING",
  "defaultValue" : "AllocatingMethod",
  "description" : "Control the naming and granularity of the counters when using ProfileAllocations."
}, {
  "type" : "HOSTED",
  "name" : "ProfileAnalysisOperations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the progress of the static analysis."
}, {
  "type" : "HOSTED",
  "name" : "ProfileCompiledMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ProfileConstantObjects",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the creation of constant objects."
}, {
  "type" : "HOSTED",
  "name" : "ProfileDeoptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print logging information during object file writing."
}, {
  "type" : "HOSTED",
  "name" : "ProfileLockElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ProfileMethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Restrict saving or loading of profiles based on this filter. See the MethodFilter option for the pattern syntax."
}, {
  "type" : "HOSTED",
  "name" : "ProfileMonitors",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable profiling of monitor operations."
}, {
  "type" : "HOSTED",
  "name" : "ProfileOptBulkAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ProfileSelfTime",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Excludes time spent in invoked methods; measures total time including subcalls when turned off."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingEnablePathProfiling",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Replace profiling counters with path-profiling counters."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingEnableProfileDumpHooks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dump the PGO profiles on shutdown."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingEnabled",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Instrument AOT compiled code to collect data for profile-guided optimization into default.iprof file."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingPackagePrefixes",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "A comma-separated list of package prefixes for which the PGO profiles are collected."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingPathProfilingVerify",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Collect profiling counters, and verify that they match the path-profile counters."
}, {
  "type" : "HOSTED",
  "name" : "ProfilingRDPID",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use RDTSCP or RDPID if available to compute the index in the counter array. Setting this option to false ensures Knuth hashing is used instead."
}, {
  "type" : "HOSTED",
  "name" : "PropagateEqualityDepth",
  "dataType" : "LONG",
  "defaultValue" : 6,
  "description" : "Maximum depth of dependency when propagating equals property."
}, {
  "type" : "HOSTED",
  "name" : "ProtectionKeys",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable support for Memory Protection Keys."
}, {
  "type" : "HOSTED",
  "name" : "PruneLargeDominatorUsageTrees",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "PullThroughPhiCodeSizeIncrease",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "PullThroughPhiOptimization: Percentage in node cost graph size for the floating node duplication budget. Computed relative to the method's graph size."
}, {
  "type" : "HOSTED",
  "name" : "PullThroughPhiCodeSizeIncreaseHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See PullThroughPhiCodeSizeIncrease."
}, {
  "type" : "HOSTED",
  "name" : "QueryCodeDir",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Directory where query code for target platform should be output."
}, {
  "type" : "HOSTED",
  "name" : "RawConditionalElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ReadEliminationMaxLoopVisits",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ReadProxySchedulingStrategy",
  "dataType" : "STRING",
  "defaultValue" : "LATEST_OUT_OF_LOOPS",
  "description" : "Chose the scheduling strategy for inserting the read proxies."
}, {
  "type" : "HOSTED",
  "name" : "ReassociateExpressions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Re-associate loop invariants and constants."
}, {
  "type" : "HOSTED",
  "name" : "ReduceDCE",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Disable optional dead code eliminations."
}, {
  "type" : "HOSTED",
  "name" : "ReflectionConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "One or several (comma-separated) paths to JSON files that specify which program elements should be made available via reflection."
}, {
  "type" : "HOSTED",
  "name" : "ReflectionConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing program elements to be made available for reflection (see ReflectionConfigurationFiles)."
}, {
  "type" : "HOSTED",
  "name" : "ReflectionPluginTracing",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable trace logging for reflection plugins."
}, {
  "type" : "HOSTED",
  "name" : "RegisterPressure",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated list of registers that register allocation is limited to."
}, {
  "type" : "HOSTED",
  "name" : "RelativeBenefitInliningCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "The coefficient used to compute the inlining threshold; the higher, the hard to inline."
}, {
  "type" : "HOSTED",
  "name" : "RelaxTypeFlowStateConstraints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow a type flow state to contain types not compatible with its declared type."
}, {
  "type" : "HOSTED",
  "name" : "RemoveLoopSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Remove safepoints on counted loop ends."
}, {
  "type" : "HOSTED",
  "name" : "RemoveNeverExecutedCode",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "RemoveSaturatedTypeFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable the type flow saturation analysis performance optimization."
}, {
  "type" : "HOSTED",
  "name" : "RemoveUnneededDeoptSupport",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Remove Deopt(Entries,Anchors,Proxies) determined to be unneeded after the runtime compiled graphs have been finalized."
}, {
  "type" : "HOSTED",
  "name" : "RemoveUnusedSymbols",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use linker option to prevent unreferenced symbols in image."
}, {
  "type" : "HOSTED",
  "name" : "ReplaceInputsWithConstantsBasedOnStamps",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "ReportAnalysisForbiddenType",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Report error if <typename>[:<UsageKind>{,<UsageKind>}] is discovered during analysis (valid values for UsageKind: InHeap, Allocated, Reachable)."
}, {
  "type" : "HOSTED",
  "name" : "ReportExceptionStackTraces",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Show exception stack traces for exceptions during image building.)."
}, {
  "type" : "HOSTED",
  "name" : "ReportPerformedSubstitutions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report performed substitutions."
}, {
  "type" : "HOSTED",
  "name" : "ReportUnsafeOffsetWarnings",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print unsafe operation offset warnings."
}, {
  "type" : "HOSTED",
  "name" : "ReportUnsupportedElementsAtRuntime",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report usage of unsupported methods and fields at run time when they are accessed the first time, instead of as an error during image building."
}, {
  "type" : "HOSTED",
  "name" : "ReservedAuxiliaryImageBytes",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Size in bytes of an address space to reserve for auxiliary images."
}, {
  "type" : "HOSTED",
  "name" : "ResourceConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Files describing Java resources to be included in the image according to the schema at https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/assets/resource-config-schema-v1.0.0.json."
}, {
  "type" : "HOSTED",
  "name" : "ResourceConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing Java resources to be included in the image according to the schema at https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/assets/resource-config-schema-v1.0.0.json."
}, {
  "type" : "HOSTED",
  "name" : "RespectVectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try avoid unrolling vectorizable loops."
}, {
  "type" : "HOSTED",
  "name" : "ReturnAfterAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Return after analysis."
}, {
  "type" : "HOSTED",
  "name" : "ReuseRecursiveDuplicatedMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Do not duplicate recursive methods but rather reuse a previous duplicate."
}, {
  "type" : "HOSTED",
  "name" : "RewriteStripMinedCounterTo32Bit",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Rewrite the counter of a strip mined loop to have a 32bit type."
}, {
  "type" : "HOSTED",
  "name" : "RootSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Reduces likelihood of spending a lot of time inlining when the IR is already large."
}, {
  "type" : "HOSTED",
  "name" : "RootSizePenaltyTypicalGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 3250,
  "description" : "At what size of the root IR graph do we start to consider applying a exploration penalty."
}, {
  "type" : "HOSTED",
  "name" : "RotateNonLeafLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "RotationMinLocalFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency for a loop to be considered for rotation."
}, {
  "type" : "HOSTED",
  "name" : "RotationMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Minimal relative frequency for a loop to be considered for rotation."
}, {
  "type" : "HOSTED",
  "name" : "RunMainInNewThread",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Initializes and runs main entry point in a new native thread."
}, {
  "type" : "HOSTED",
  "name" : "RunReachabilityHandlersConcurrently",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run reachability handlers concurrently during analysis."
}, {
  "type" : "HOSTED",
  "name" : "RuntimeAssertions",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Enable or disable Java assert statements at run time."
}, {
  "type" : "HOSTED",
  "name" : "RuntimeCheckedCPUFeatures",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma separated list of CPU features that will be enabled for runtime checks. The native image may check at run time if such features are supported by the target CPU, and can optimize certain operations based on this information. If a feature is not supported at run time, a less optimized variant will be executed. Because of the presence of multiple code variants, enabling runtime features can result in larger executables. To completely turn off runtime checked CPU features, set this option to the empty string. The specific options available are target platform dependent. See --list-cpu-features for feature list. The default values are: AMD64: 'AVX,AVX2'; AArch64: ''."
}, {
  "type" : "HOSTED",
  "name" : "RuntimeCompilationInlineBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform InlineBeforeAnalysis on runtime compiled methods."
}, {
  "type" : "HOSTED",
  "name" : "RuntimeSystemAssertions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable or disable Java system assertions at run time."
}, {
  "type" : "HOSTED",
  "name" : "SIMDArithmeticReduceMinLength",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Minimum vector length for matching SIMD arithmetic reduce patterns."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationCheckLoadGroupProfitability",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Check for profitability when grouping memory loads to SIMD loads."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationDirectLoadStore",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow SIMDVectorization to vectorize load to store opportunities when there are no matching SIMD operations between load and store."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationSingletons",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable matching of singleton groups to increase corner-case matching."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationVolatileLoads",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow load grouping to include grouping of volatile loads. Note currently this may generate incorrect results."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationVolatileWrites",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow store grouping to include grouping of volatile writes. Note currently this may generate incorrect results."
}, {
  "type" : "HOSTED",
  "name" : "SIMDVectorizationWindowSize",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Set the number of dominating and dominated blocks scanned per block."
}, {
  "type" : "HOSTED",
  "name" : "SafepointCheckInEpilogue",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Check for safepoints in method epilogue."
}, {
  "type" : "HOSTED",
  "name" : "SafepointSamplerStats",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Dump some stats about the safepoint sampler into a file on this path."
}, {
  "type" : "HOSTED",
  "name" : "SamplingCollect",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform profiling by sampling the AOT compiled code to collect data for profile-guided optimization."
}, {
  "type" : "HOSTED",
  "name" : "SaveProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Save per compilation profile information."
}, {
  "type" : "HOSTED",
  "name" : "SaveProfilesPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path for saving compilation profiles. If the value is omitted the debug dump path will be used."
}, {
  "type" : "HOSTED",
  "name" : "ScanObjectsParallel",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Object scanning in parallel."
}, {
  "type" : "HOSTED",
  "name" : "ScheduledDuplicationSimulation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Simulation can either only process fixed nodes or schedule the graph and also process floating nodes."
}, {
  "type" : "HOSTED",
  "name" : "SerializationConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "One or several (comma-separated) paths to JSON files that specify lists of serialization configurations."
}, {
  "type" : "HOSTED",
  "name" : "SerializationConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing program elements to be made available for serialization (see SerializationConfigurationFiles)."
}, {
  "type" : "HOSTED",
  "name" : "SerializationDenyConfigurationFiles",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "One or several (comma-separated) paths to JSON files that specify lists of serialization configurations."
}, {
  "type" : "HOSTED",
  "name" : "SerializationDenyConfigurationResources",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Resources describing program elements that must not be made available for serialization."
}, {
  "type" : "HOSTED",
  "name" : "ServiceLoaderFeatureExcludeServiceProviders",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of service providers that should be excluded."
}, {
  "type" : "HOSTED",
  "name" : "ServiceLoaderFeatureExcludeServices",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of services that should be excluded."
}, {
  "type" : "HOSTED",
  "name" : "SharedLibrary",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Build shared library."
}, {
  "type" : "HOSTED",
  "name" : "ShowConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Writes to the VM log information about the compiler configuration selected."
}, {
  "type" : "HOSTED",
  "name" : "ShowDumpFiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the name of each dump file path as it's created."
}, {
  "type" : "HOSTED",
  "name" : "ShowSubstitutionSourceInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Controls whether the source position information of snippets and method substitutions are exposed to HotSpot. Can be useful when profiling to get more precise position information."
}, {
  "type" : "HOSTED",
  "name" : "SignalHandlerBasedExecutionSampler",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if JFR uses a signal handler for execution sampling."
}, {
  "type" : "HOSTED",
  "name" : "SimulateClassInitializer",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Simulate the effects of class initializer at image build time, to avoid class initialization at run time."
}, {
  "type" : "HOSTED",
  "name" : "SimulateClassInitializerCollectAllReasons",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Configuration for SimulateClassInitializer: Collect all reasons why a class initializer cannot be simulated."
}, {
  "type" : "HOSTED",
  "name" : "SimulateClassInitializerMaxAllocatedBytes",
  "dataType" : "LONG",
  "defaultValue" : 40000,
  "description" : "Configuration for SimulateClassInitializer: Maximum number of bytes allocated in the image heap for each class initializer."
}, {
  "type" : "HOSTED",
  "name" : "SimulateClassInitializerMaxInlineDepth",
  "dataType" : "LONG",
  "defaultValue" : 200,
  "description" : "Configuration for SimulateClassInitializer: Maximum inlining depth during simulation."
}, {
  "type" : "HOSTED",
  "name" : "SimulateClassInitializerMaxLoopIterations",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Configuration for SimulateClassInitializer: Maximum number of loop iterations that are unrolled during simulation."
}, {
  "type" : "HOSTED",
  "name" : "SimulationBasedLoopPeeling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use DBDS algorithm to simulate the impact of peeling on a loop."
}, {
  "type" : "HOSTED",
  "name" : "SimulationPruneUnlikelyBranches",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore low frequency branches during simulation."
}, {
  "type" : "HOSTED",
  "name" : "SizeForIPEAFrequencyDecrease",
  "dataType" : "LONG",
  "defaultValue" : 500,
  "description" : "Size of the IR that forces a reduction in the number of IPEA runs made."
}, {
  "type" : "HOSTED",
  "name" : "SmallCompiledLowLevelGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 330,
  "description" : "If the previous low-level graph size of the method exceeds the threshold, it is not inlined."
}, {
  "type" : "HOSTED",
  "name" : "SmallGraphDuplicationBudgetFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "See 'DuplicationBudgetFactor': for small graphs."
}, {
  "type" : "HOSTED",
  "name" : "SmallGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Node cost graph size for a graph to be considered 'small'."
}, {
  "type" : "HOSTED",
  "name" : "SmallRootIrPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.02,
  "description" : "Reduces the likelihood of exploring call graphs with IR size much larger than the root."
}, {
  "type" : "HOSTED",
  "name" : "SnippetCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable counters for various paths in snippets."
}, {
  "type" : "HOSTED",
  "name" : "SoftRefLRUPolicyMSPerMB",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "This number of milliseconds multiplied by the free heap memory in MByte is the time span for which a soft reference will keep its referent alive after its last access. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "SourceLevelDebug",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Preserve the local variable information for every Java source line to allow line-by-line stepping in the debugger. Allow the lookup of Java-level method information, e.g., in stack traces."
}, {
  "type" : "HOSTED",
  "name" : "SourceLevelDebugFilter",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Constrain debug info generation to the comma-separated list of package prefixes given to this option."
}, {
  "type" : "HOSTED",
  "name" : "SpawnIsolates",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Support multiple isolates."
}, {
  "type" : "HOSTED",
  "name" : "SpectrePHTBarriers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Select a strategy to mitigate speculative bounds check bypass (aka Spectre-PHT or Spectre V1)."
}, {
  "type" : "HOSTED",
  "name" : "SpectrePHTIndexMasking",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Mask indices to scope access to allocation size after bounds check."
}, {
  "type" : "HOSTED",
  "name" : "SpeculativeExecutionBarriers",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stop speculative execution on all branch targets with execution barrier instructions."
}, {
  "type" : "HOSTED",
  "name" : "SpeculativeGuardMovement",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Move loop invariant guards (e.g., array bounds checks) out of loops."
}, {
  "type" : "HOSTED",
  "name" : "SpeculativeStoreCheck",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Speculates that arrays have exact type to optimize store checks."
}, {
  "type" : "HOSTED",
  "name" : "StackOverflowCheckInPrologue",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Check for stack overflow in method prologue."
}, {
  "type" : "HOSTED",
  "name" : "StackRedZoneSize",
  "dataType" : "LONG",
  "defaultValue" : 8192,
  "description" : "Size (in bytes) of the red zone reserved at the end of the stack. This stack space can only be used by critical VM code and C code, e.g., to report fatal errors."
}, {
  "type" : "HOSTED",
  "name" : "StackTrace",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, has no effect."
}, {
  "type" : "HOSTED",
  "name" : "StackYellowZoneSize",
  "dataType" : "LONG",
  "defaultValue" : 32768,
  "description" : "Size (in bytes) of the yellow zone reserved at the end of the stack. This stack space is reserved for VM use and cannot be used by the application."
}, {
  "type" : "HOSTED",
  "name" : "StaticExecutable",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Build statically linked executable (requires static libc and zlib)."
}, {
  "type" : "HOSTED",
  "name" : "StaticExecutableWithDynamicLibC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Builds a statically linked executable with libc dynamically linked."
}, {
  "type" : "HOSTED",
  "name" : "StaticLibStdCpp",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Builds image with libstdc++ statically linked into the image (if needed)."
}, {
  "type" : "HOSTED",
  "name" : "StrengthenGraphWithConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform constant folding in StrengthenGraphs."
}, {
  "type" : "HOSTED",
  "name" : "StressExplicitExceptionCode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code emitting explicit exception throwing code."
}, {
  "type" : "HOSTED",
  "name" : "StressInvokeWithExceptionNode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code emitting invokes with explicit exception edges."
}, {
  "type" : "HOSTED",
  "name" : "StressTestEarlyReads",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code by emitting reads at earliest instead of latest point."
}, {
  "type" : "HOSTED",
  "name" : "StrictConfiguration",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When configuration files do not match their schema, abort the image build instead of emitting a warning."
}, {
  "type" : "HOSTED",
  "name" : "StrictDeoptInsertionChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform checks that guards and deopts aren't introduced in graphs that should handle exceptions explicitly."
}, {
  "type" : "HOSTED",
  "name" : "StrictImageHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable the strict image heap mode that allows all classes to be used at build-time but also requires types of all objects in the heap to be explicitly marked for build-time initialization."
}, {
  "type" : "HOSTED",
  "name" : "StrictProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Throw an error if an attempt is made to overwrite/update a profile loaded from disk."
}, {
  "type" : "HOSTED",
  "name" : "StrictQueryCodeCompilation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use strict checks when performing query code compilation."
}, {
  "type" : "HOSTED",
  "name" : "StringIndexOfConstantLimit",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "String.indexOf invocations will be evaluated at compile time if the receiver is a constant and its length is smaller than this value."
}, {
  "type" : "HOSTED",
  "name" : "StripDebugInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a separate file for debug info."
}, {
  "type" : "HOSTED",
  "name" : "StripMineALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force strip mining of all loops that can be strip mined."
}, {
  "type" : "HOSTED",
  "name" : "StripMineCountedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "StripMineInvertedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Strip mine inverted loops."
}, {
  "type" : "HOSTED",
  "name" : "StripMineNonCountedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "SubstitutionChecksumResult",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Instead of reporting substitution mismatches on the command line, write the result to the specified JSON file."
}, {
  "type" : "HOSTED",
  "name" : "SupportCompileInIsolates",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Support runtime compilation in separate isolates (enable at runtime with option CompileInIsolates)."
}, {
  "type" : "HOSTED",
  "name" : "SupportJsrBytecodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "SupportOSRWithLocks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Support OSR compilations with locks. If DeoptAfterOSR is true we can per definition not have unbalanced enter/exits mappings. If DeoptAfterOSR is false insert artificial monitor enters after the OSRStart to have balanced enter/exits in the graph."
}, {
  "type" : "HOSTED",
  "name" : "SupportPredefinedClasses",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable support for predefining additional classes."
}, {
  "type" : "HOSTED",
  "name" : "SupportRecurringCallback",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Support a per-thread timer that is called at a specific interval."
}, {
  "type" : "HOSTED",
  "name" : "SuppressStderr",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Suppress console error output for unittests."
}, {
  "type" : "HOSTED",
  "name" : "SuppressStdout",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Suppress console normal output for unittests."
}, {
  "type" : "HOSTED",
  "name" : "SystemicCompilationFailureRate",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Compilation failure rate indicating a systemic compilation problem that will issue a warning. The value is made absolute and clamped to produce P, a value between 0 and 100. Systemic failure is detected if the percent of failing compilations in a sliding time window > P. A negative value will cause the VM to exit after issuing the warning. Set to 0 to disable systemic compilation problem detection."
}, {
  "type" : "HOSTED",
  "name" : "TargetPlatform",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Selects native-image compilation target (in <OS>-<architecture> format). Defaults to host's OS-architecture pair."
}, {
  "type" : "HOSTED",
  "name" : "TempDirectory",
  "dataType" : "STRING",
  "defaultValue" : "<path>*",
  "description" : "Directory for temporary files generated during native image generation. If this option is specified, the temporary files are not deleted so that you can inspect them after native image generation."
}, {
  "type" : "HOSTED",
  "name" : "ThrowLinkAtBuildTimeIOExceptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Instead of warning, throw IOExceptions for link-at-build-time resources at build time."
}, {
  "type" : "HOSTED",
  "name" : "ThrowMissingRegistrationErrors",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Throw Native Image-specific errors when trying to access an element that has not been registered."
}, {
  "type" : "HOSTED",
  "name" : "ThrowMissingRegistrationErrorsPaths",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Trigger missing registration errors from all types in the given class or module-path entries."
}, {
  "type" : "HOSTED",
  "name" : "ThrowUnsafeOffsetErrors",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Throw unsafe operation offset errors."
}, {
  "type" : "HOSTED",
  "name" : "Time",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which timing is enabled. See the Dump option for the pattern syntax. An empty value enables all timers unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "TimeStampProfiling",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Profile method execution time."
}, {
  "type" : "HOSTED",
  "name" : "TimedDynamicCounters",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Turn on the benchmark counters, and displays the results every n milliseconds."
}, {
  "type" : "HOSTED",
  "name" : "Timers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of timers that are enabled irrespective of the value for Time option. An empty value enables all timers unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "TraceBytecodeParserLevel",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The trace level for the bytecode parser. A value of 1 enables instruction tracing and any greater value emits a frame state trace just prior to each instruction trace.Instruction tracing output from multiple compiler threads will be interleaved so use of this option make most sense for single threaded compilation. The MethodFilter option can be used to refine tracing to selected methods."
}, {
  "type" : "HOSTED",
  "name" : "TraceClassInitialization",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of fully-qualified class names that class initialization is traced for."
}, {
  "type" : "HOSTED",
  "name" : "TraceDuplicatedMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace duplicated methods."
}, {
  "type" : "HOSTED",
  "name" : "TraceEscapeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "TraceExceptionHandlerStub",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace execution of stub used to handle an exception thrown by a callee."
}, {
  "type" : "HOSTED",
  "name" : "TraceInlineDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Traces inlining performed during bytecode parsing."
}, {
  "type" : "HOSTED",
  "name" : "TraceInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable tracing of inlining decisions."
}, {
  "type" : "HOSTED",
  "name" : "TraceInliningForStubsAndSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable inlining decision tracing in stubs and snippets."
}, {
  "type" : "HOSTED",
  "name" : "TraceLIRGeneratorLevel",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The trace level for the LIR generator."
}, {
  "type" : "HOSTED",
  "name" : "TraceLocalizationFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When enabled, localization feature details are printed."
}, {
  "type" : "HOSTED",
  "name" : "TraceLoggingFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When enabled, logging feature details are printed."
}, {
  "type" : "HOSTED",
  "name" : "TraceMonitorsMethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Trace monitor operations in methods whose fully qualified name contains this substring."
}, {
  "type" : "HOSTED",
  "name" : "TraceMonitorsTypeFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Trace monitor operations on objects whose type contains this substring."
}, {
  "type" : "HOSTED",
  "name" : "TraceNativeToolUsage",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace all native tool invocations as part of image building."
}, {
  "type" : "HOSTED",
  "name" : "TraceObjectInstantiation",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Comma-separated list of fully-qualified class names that object instantiation is traced for."
}, {
  "type" : "HOSTED",
  "name" : "TraceParserPlugins",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Traces use of plugins during bytecode parsing."
}, {
  "type" : "HOSTED",
  "name" : "TraceSecurityServices",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable tracing of security services automatic registration."
}, {
  "type" : "HOSTED",
  "name" : "TraceUnwindStub",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace execution of the stub that routes an exception to a handler in the calling frame."
}, {
  "type" : "HOSTED",
  "name" : "TraceVMOperations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace VMOperation execution."
}, {
  "type" : "HOSTED",
  "name" : "TrackAccessChain",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the callers for methods and accessing methods for fields."
}, {
  "type" : "HOSTED",
  "name" : "TrackGraphSizesInDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable (if Count is enabled) graph size tracking during every duplication iteration."
}, {
  "type" : "HOSTED",
  "name" : "TrackIPEAStatistics",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Track IPEA statistics in substratePriorityInliner."
}, {
  "type" : "HOSTED",
  "name" : "TrackInliningStatistics",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Track inlining statistics (inlining duration, call tree size, compiler node counts, and the number of callsites). One of: none, interactive."
}, {
  "type" : "HOSTED",
  "name" : "TrackInputFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the input for type flows."
}, {
  "type" : "HOSTED",
  "name" : "TrackMemUse",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which memory use tracking is enabled. See the Dump option for the pattern syntax. An empty value enables all memory use trackers unconditionally."
}, {
  "type" : "HOSTED",
  "name" : "TrackNodeInsertion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track source stack trace where a node was inserted into the graph."
}, {
  "type" : "HOSTED",
  "name" : "TrackNodeSourcePosition",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the NodeSourcePosition."
}, {
  "type" : "HOSTED",
  "name" : "TrackPrimitiveValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track primitive values using the infrastructure of points-to analysis."
}, {
  "type" : "HOSTED",
  "name" : "TreatRuntimeCodeInfoReferencesAsWeak",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if references from runtime-compiled code to Java heap objects should be treated as strong or weak."
}, {
  "type" : "HOSTED",
  "name" : "TrivialInliningSize",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Graphs with less than this number of nodes are trivial and therefore always inlined."
}, {
  "type" : "HOSTED",
  "name" : "TrivialLoopSizeLimitForPeeling",
  "dataType" : "DOUBLE",
  "defaultValue" : 512.0,
  "description" : "Loop peeling will consider any loop with a size (in terms of estimated machine instructions) below this value to be a prime candidate for peeling. Larger loops will only be considered for peeling if the simulated benefit of peeling is relatively high. The larger the loop, the greater the expected benefit has to be."
}, {
  "type" : "HOSTED",
  "name" : "TruffleCompilerConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Select a compiler configuration for Truffle compilation (default: use Graal system compiler configuration)."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle host inlining is enabled."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningBaseBudget",
  "dataType" : "LONG",
  "defaultValue" : 5000,
  "description" : "Maximum budget for Truffle host inlining for runtime compiled methods."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningByteCodeInterpreterBudget",
  "dataType" : "LONG",
  "defaultValue" : 100000,
  "description" : "Maximum budget for Truffle host inlining for runtime compiled methods with a BytecodeInterpreterSwitch annotation."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningMaxExplorationDepth",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Determines the maximum call depth for exploration during host inlining."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningMaxSubtreeInvokes",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Maximum number of subtree invokes for a subtree to get inlined until it is considered too complex."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningMinFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "Minimum relative frequency for calls to get inlined. Default 0.001 on HotSpot and no minimum frequency on SVM."
}, {
  "type" : "HOSTED",
  "name" : "TruffleHostInliningPrintExplored",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When logging is activated for this phase enables printing of only explored, but ultimately not inlined call trees."
}, {
  "type" : "HOSTED",
  "name" : "TruffleImmutableFrameFields",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle should mark final frame fields as immutable."
}, {
  "type" : "HOSTED",
  "name" : "TruffleTrustedNonNullCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle trusted non-null casts are enabled."
}, {
  "type" : "HOSTED",
  "name" : "TruffleTrustedTypeCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle trusted type casts are enabled."
}, {
  "type" : "HOSTED",
  "name" : "TrustFinalDefaultFields",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines whether to treat final fields with default values as constant."
}, {
  "type" : "HOSTED",
  "name" : "TryExplodeOverPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "PullThroughPhiOptimization: Enable floating node duplication over multiple phi nodes at once."
}, {
  "type" : "HOSTED",
  "name" : "TryPhiPhiPulls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "PullThroughPhiOptimization: Enable floating node duplication over phis where the target node has different phis as input."
}, {
  "type" : "HOSTED",
  "name" : "TuneInlinerExploration",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "Increases or decreases the time spent exploring inlining opportunities under the assumption that more time results in better peak performance and less time reduces time to reach (a lower) peak performance. The value of the option is clamped between -1 and 1 inclusive. Anything below 0, reduces the exploration time and anything above 0 increases exploration time. Note that this option is only a heuristic and should be tuned for any specific application."
}, {
  "type" : "HOSTED",
  "name" : "TypeCheckMaxHints",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "The maximum number of profiled types that will be used when compiling a profiled type check. Note that TypeCheckMinProfileHitProbability also influences whether profiling info is used in compiled type checks."
}, {
  "type" : "HOSTED",
  "name" : "TypeCheckMinProfileHitProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "If the probability that a type check will hit one the profiled types (up to TypeCheckMaxHints) is below this value, the type check will be compiled without profiling info."
}, {
  "type" : "HOSTED",
  "name" : "TypeFlowPrinterInRadius",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "How many levels of inputs to print. A value of 0 prints only the target flow."
}, {
  "type" : "HOSTED",
  "name" : "TypeFlowPrinterOutRadius",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "How many levels of outputs to print. A value of 0 prints only the target flow."
}, {
  "type" : "HOSTED",
  "name" : "TypeFlowSaturationCutoff",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "The maximum number of types recorded in a type flow. -1 indicates no limitation."
}, {
  "type" : "HOSTED",
  "name" : "TypicalCallGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "Denotes the call graph size that is considered medium size."
}, {
  "type" : "HOSTED",
  "name" : "TypicalGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 3250,
  "description" : "The typical graph size at which inlining pressure must start growing."
}, {
  "type" : "HOSTED",
  "name" : "TypicalGraphSizeInvokeBonus",
  "dataType" : "LONG",
  "defaultValue" : 70,
  "description" : "The increase in estimated typical graph size after inlining, per each extra invoke."
}, {
  "type" : "HOSTED",
  "name" : "TypicalGraphSizeMax",
  "dataType" : "LONG",
  "defaultValue" : 15000,
  "description" : "The maximum in estimated inlined typical graph size."
}, {
  "type" : "HOSTED",
  "name" : "UnlockExperimentalVMOptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable and disable normal processing of flags relating to experimental options."
}, {
  "type" : "HOSTED",
  "name" : "UnresolvedIsError",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "HOSTED",
  "name" : "UnrollEmptyLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Unroll empty loops."
}, {
  "type" : "HOSTED",
  "name" : "UnrollInvertedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll inverted (tail counted) loops."
}, {
  "type" : "HOSTED",
  "name" : "UnrollMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "UnrollMultiEndLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll loops with multiple loop ends."
}, {
  "type" : "HOSTED",
  "name" : "UnrollMultiExitLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll loops with multiple loop exits."
}, {
  "type" : "HOSTED",
  "name" : "UnsafeOffsetWarningsAreFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print unsafe operation offset warnings."
}, {
  "type" : "HOSTED",
  "name" : "UseApplicationCodeSourceLocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Return the application path as the Class.getProtectionDomain().getCodeSource().getLocation() for all classes that have no explicit ProtectionDomain."
}, {
  "type" : "HOSTED",
  "name" : "UseBranchesWithin32ByteBoundary",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force branch instructions to align with 32-bytes boundary, to mitigate the jcc erratum. See https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf for more details. If not set explicitly, the default value will be determined according to the CPU model."
}, {
  "type" : "HOSTED",
  "name" : "UseCAPCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Indicate the C Annotation Processor to use previously cached native information when generating C Type information."
}, {
  "type" : "HOSTED",
  "name" : "UseCalleeSavedRegisters",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use callee saved registers to reduce spilling for low-frequency calls to stubs (if callee saved registers are supported by the architecture)."
}, {
  "type" : "HOSTED",
  "name" : "UseCompilationStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables CompilationStatistics."
}, {
  "type" : "HOSTED",
  "name" : "UseCompressedReferenceShift",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use bit-shifting to enlarge the address range with narrow references."
}, {
  "type" : "HOSTED",
  "name" : "UseCompressedReferences",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use compressed references (32-bit instead of 64-bit references to Java objects)."
}, {
  "type" : "HOSTED",
  "name" : "UseContainerSupport",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable detection and runtime container configuration support."
}, {
  "type" : "HOSTED",
  "name" : "UseDedicatedVMOperationThread",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if VM operations should be executed in a dedicated thread."
}, {
  "type" : "HOSTED",
  "name" : "UseDirectCallTrampolinesALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force many trampolines to be needed for inter-method calls. Normally trampolines are only used when a method destination is outside the range of a pc-relative branch instruction."
}, {
  "type" : "HOSTED",
  "name" : "UseEpsilonGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use a no-op GC."
}, {
  "type" : "HOSTED",
  "name" : "UseExceptionProbability",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "UseExperimentalReachabilityAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use experimental Reachability Analysis instead of points-to."
}, {
  "type" : "HOSTED",
  "name" : "UseG1GC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if the G1 garbage collector should be used."
}, {
  "type" : "HOSTED",
  "name" : "UseGraphCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Turn on graph caching."
}, {
  "type" : "HOSTED",
  "name" : "UseIPEA",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use InterproceduralPartialEscapeAnalysisPhase in priorityInliner."
}, {
  "type" : "HOSTED",
  "name" : "UseImagebuildDebugSections",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Emit debuginfo debug.svm.imagebuild.* sections with detailed image-build options."
}, {
  "type" : "HOSTED",
  "name" : "UseLibC",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Selects the libc implementation to use. Available implementations: glibc, musl, bionic."
}, {
  "type" : "HOSTED",
  "name" : "UseLoopEndFrequencies",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Derive loop frequencies only from backedge frequencies instead of from loop exit frequencies."
}, {
  "type" : "HOSTED",
  "name" : "UseLoopLimitChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "UseMethodChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform method-based checks during inlining."
}, {
  "type" : "HOSTED",
  "name" : "UseMonitorFastPath",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use thin locking fast path in snippets."
}, {
  "type" : "HOSTED",
  "name" : "UseNullRegion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if a null region is present between the heap base and the image heap."
}, {
  "type" : "HOSTED",
  "name" : "UseOldMethodHandleIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force using legacy method handle intrinsics."
}, {
  "type" : "HOSTED",
  "name" : "UsePartialEscapeSelectiveInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use PartialEscapeSelectiveInliningPhase to give PartialEscape phase more opportunities."
}, {
  "type" : "HOSTED",
  "name" : "UsePriorityInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use priority-based inlining."
}, {
  "type" : "HOSTED",
  "name" : "UsePriorityInliningPEA",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Turn on partial escape analysis during inlining."
}, {
  "type" : "HOSTED",
  "name" : "UseReachabilityMethodSummaries",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use method summaries for Reachability Analysis."
}, {
  "type" : "HOSTED",
  "name" : "UseRememberedSet",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if a remembered sets is used, which is necessary for collecting the young and old generation independently."
}, {
  "type" : "HOSTED",
  "name" : "UseSerialGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a serial GC."
}, {
  "type" : "HOSTED",
  "name" : "UseServiceLoaderFeature",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Automatically register services for run-time lookup using ServiceLoader."
}, {
  "type" : "HOSTED",
  "name" : "UseSnippetGraphCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a cache for snippet graphs."
}, {
  "type" : "HOSTED",
  "name" : "UseSnippetTemplateCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a LRU cache for snippet templates."
}, {
  "type" : "HOSTED",
  "name" : "UseStringInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if the string inlining optimization should be used."
}, {
  "type" : "HOSTED",
  "name" : "UseTLAB",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use thread-local object allocation. G1 GC only."
}, {
  "type" : "HOSTED",
  "name" : "UseThinLocking",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use thin locking to optimize monitor operations."
}, {
  "type" : "HOSTED",
  "name" : "UseTrappingNullChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use traps for null checks instead of explicit null-checks."
}, {
  "type" : "HOSTED",
  "name" : "UseTypeCheckHints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "VMContinuations",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Support for continuations which are used by virtual threads. If disabled, virtual threads can be started but each of them is backed by a platform thread."
}, {
  "type" : "HOSTED",
  "name" : "VTunePath",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Path to VTune installation (usually /opt/intel/oneapi/vtune/latest/ or /opt/intel/vtune_amplifier)."
}, {
  "type" : "HOSTED",
  "name" : "VectorFoldMinIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Only generate SIMD loops for vector folds expected to iterate at least this many times."
}, {
  "type" : "HOSTED",
  "name" : "VectorIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorized array copy intrinsics."
}, {
  "type" : "HOSTED",
  "name" : "VectorPolynomialIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable vectorized polynomial intrinsics."
}, {
  "type" : "HOSTED",
  "name" : "VectorUnroll",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Unroll vectorized loops."
}, {
  "type" : "HOSTED",
  "name" : "Vectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorized array initialization."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeConditional",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of conditional code."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeDeopts",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with conditional deopts before writes."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeFoldShaped",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops implementing a higher-order 'fold' function."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeGather",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of vector gather operations."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeHashes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of hashCode patterns."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeIntegerMinMax",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of integer min/max operations."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeMapShaped",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops implementing a higher-order 'map' function."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeNegativeStride",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with negative strides."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeReachabilityFences",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with reachability fences."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeSIMD",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable detection of SIMD patterns."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with safepoints."
}, {
  "type" : "HOSTED",
  "name" : "VectorizeSequence",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of sequence values."
}, {
  "type" : "HOSTED",
  "name" : "Verify",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which logging is enabled. See the Dump option for the pattern syntax."
}, {
  "type" : "HOSTED",
  "name" : "VerifyAfterGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify the heap after doing a garbage collection if VerifyHeap is enabled. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "VerifyBalancedMonitors",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Emit extra code to dynamically check monitor operations are balanced."
}, {
  "type" : "HOSTED",
  "name" : "VerifyBeforeGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify the heap before doing a garbage collection if VerifyHeap is enabled. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "VerifyDeoptimizationEntryPoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify that all possible deoptimization entry points have been properly compiled and registered in the metadata."
}, {
  "type" : "HOSTED",
  "name" : "VerifyDuplicationOperations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "VerifyGraalGraphEdges",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform expensive verification of graph inputs, usages, successors and predecessors."
}, {
  "type" : "HOSTED",
  "name" : "VerifyGraalGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify graphs often during compilation when assertions are turned on."
}, {
  "type" : "HOSTED",
  "name" : "VerifyGraalPhasesSize",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify before - after relation of the relative, computed, code size of a graph."
}, {
  "type" : "HOSTED",
  "name" : "VerifyHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify the heap before and after each collection."
}, {
  "type" : "HOSTED",
  "name" : "VerifyHeapAtReturn",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform platform dependent validation of the Java heap at returns."
}, {
  "type" : "HOSTED",
  "name" : "VerifyKillCFGUnusedNodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify that there are no new unused nodes when performing killCFG."
}, {
  "type" : "HOSTED",
  "name" : "VerifyLoopVectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Run expensive checks to verify the graph after loop vectorization."
}, {
  "type" : "HOSTED",
  "name" : "VerifyNamingConventions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify naming conventions during image construction."
}, {
  "type" : "HOSTED",
  "name" : "VerifyPhases",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "HOSTED",
  "name" : "VerifyReferences",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify all object references if VerifyHeap is enabled. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "VerifyReferencesPointIntoValidChunk",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify that object references point into valid heap chunks if VerifyHeap is enabled. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "VerifyRememberedSet",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify the remembered set if VerifyHeap is enabled. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "VerifySubstitutionChecksum",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Verify substitution checksums in the specified directory."
}, {
  "type" : "HOSTED",
  "name" : "VerifyTypes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify type states computed by the static analysis at run time. This is useful when diagnosing problems in the static analysis, but reduces peak performance significantly."
}, {
  "type" : "HOSTED",
  "name" : "VerifyWriteBarrierElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Add code to verify that eliminated barriers weren't needed."
}, {
  "type" : "HOSTED",
  "name" : "VerifyWriteBarriers",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify write barriers. Serial GC only."
}, {
  "type" : "HOSTED",
  "name" : "Virtualize",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Build the native image for a virtualized environment. The argument is a path to a JSON file that specifies the virtualized environment properties."
}, {
  "type" : "HOSTED",
  "name" : "WarnAboutCodeSignatureMismatch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when a compilation performed with different profiles generates different backend code."
}, {
  "type" : "HOSTED",
  "name" : "WarnAboutGraphSignatureMismatch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when a compilation performed with different profiles generates different frontend IR."
}, {
  "type" : "HOSTED",
  "name" : "WarnAboutMissingReflectionOrJNIMetadataElements",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Warn when reflection and JNI configuration files have elements that could not be found on the classpath or modulepath."
}, {
  "type" : "HOSTED",
  "name" : "WarnAboutNotCachedLoadedAccess",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when requesting profiling info not present in a loaded profile."
}, {
  "type" : "HOSTED",
  "name" : "WarnMissingIntrinsic",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print a warning when a missing intrinsic is seen."
}, {
  "type" : "HOSTED",
  "name" : "WriteSinkingExcludeFields",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude certain fields from write sinking. Fields are specified with the same syntax as method filters, minus the signature part."
}, {
  "type" : "HOSTED",
  "name" : "WriteSubstitutionChecksum",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Write substitution checksums to the specified directory."
}, {
  "type" : "HOSTED",
  "name" : "ZapChunks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Fill unused memory chunks with a sentinel value. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "ZapConsumedHeapChunks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "After use, Fill memory chunks with a sentinel value. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "ZapProducedHeapChunks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Before use, fill memory chunks with a sentinel value. Serial and epsilon GC only."
}, {
  "type" : "HOSTED",
  "name" : "ZapStackOnMethodEntry",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "AbortOnBenchmarkCounterOverflow",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Abort VM with SIGILL if benchmark counters controlled by the (Generic|Timed|Benchmark)DynamicCounters."
}, {
  "type" : "RUNTIME",
  "name" : "ActiveProcessorCount",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Overwrites the available number of processors provided by the OS. Any value < 0 means using the processor count from the OS."
}, {
  "type" : "RUNTIME",
  "name" : "AggregatedMetricsFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which aggregated metrics are dumped at shutdown. A CSV format is used if the file ends with .csv otherwise a more human readable format is used. If not specified, metrics are dumped to the console."
}, {
  "type" : "RUNTIME",
  "name" : "AliasArrayTypeFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Model all array type flows using a unique elements type flow abstraction."
}, {
  "type" : "RUNTIME",
  "name" : "AllocationProfilingThreshold",
  "dataType" : "LONG",
  "defaultValue" : 1048576,
  "description" : "The minimum size in bytes required for printing an allocation profiling entry."
}, {
  "type" : "RUNTIME",
  "name" : "AllocationSiteSensitiveHeap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "A context sensitive heap means that each heap allocated object is modeled by using at least the allocation site."
}, {
  "type" : "RUNTIME",
  "name" : "AlwaysInlineIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Unconditionally inline intrinsics."
}, {
  "type" : "RUNTIME",
  "name" : "AlwaysInlineVTableStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "AlwaysPreTouch",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force all freshly committed pages to be pre-touched. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "AnalysisContextSensitivity",
  "dataType" : "STRING",
  "defaultValue" : "insens",
  "description" : "Controls the static analysis context sensitivity. Available values: insens (context insensitive analysis), allocsens (context insensitive analysis, context insensitive heap, allocation site sensitive heap), _1obj (1 object sensitive analysis with a context insensitive heap), _2obj1h (2 object sensitive with a 1 context sensitive heap)."
}, {
  "type" : "RUNTIME",
  "name" : "AnalysisSizeCutoff",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "The maximum size of type and method profiles returned by the static analysis. -1 indicates no limitation."
}, {
  "type" : "RUNTIME",
  "name" : "ArrayRegionEqualsConstantLimit",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "Array region equality checks will be evaluated at compile time if the receiver is a constant and its length is smaller than this value."
}, {
  "type" : "RUNTIME",
  "name" : "AutomaticReferenceHandling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines if the reference handling is executed automatically or manually."
}, {
  "type" : "RUNTIME",
  "name" : "BaseTargetSpending",
  "dataType" : "LONG",
  "defaultValue" : 120,
  "description" : "The base target spending used to estimate the inlining threshold; the higher, the likelier it is to inline."
}, {
  "type" : "RUNTIME",
  "name" : "BenchmarkCounterPrintingCutoff",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a cutoff to print only most significant counters."
}, {
  "type" : "RUNTIME",
  "name" : "BenchmarkCountersDumpDynamic",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dump dynamic counters."
}, {
  "type" : "RUNTIME",
  "name" : "BenchmarkCountersDumpStatic",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump static counters."
}, {
  "type" : "RUNTIME",
  "name" : "BenchmarkCountersFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which benchmark counters are dumped. A CSV format is used if the file ends with .csv otherwise a more human readable format is used. The fields in the CSV format are: category, group, name, value."
}, {
  "type" : "RUNTIME",
  "name" : "BenchmarkDynamicCounters",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Turn on the benchmark counters. The format of this option is:."
}, {
  "type" : "RUNTIME",
  "name" : "BlindConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Blind constants in code with a random key."
}, {
  "type" : "RUNTIME",
  "name" : "BootstrapInitializeOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not compile anything on bootstrap but just initialize the compiler."
}, {
  "type" : "RUNTIME",
  "name" : "BootstrapTimeout",
  "dataType" : "DOUBLE",
  "defaultValue" : 15.0,
  "description" : "Maximum time in minutes to spend bootstrapping (0 to disable this limit)."
}, {
  "type" : "RUNTIME",
  "name" : "BootstrapWatchDogCriticalRateRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.25,
  "description" : "Ratio of the maximum compilation rate below which the bootstrap compilation rate must not fall (0 or less disables monitoring)."
}, {
  "type" : "RUNTIME",
  "name" : "BreakChainedPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Break chained phis."
}, {
  "type" : "RUNTIME",
  "name" : "CAIAggressivelyOptimizeHot",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform more aggressive optimization on compilation units deemed to be hot."
}, {
  "type" : "RUNTIME",
  "name" : "CAIApplyProfilesWhileExpanding",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Apply sampling based profiles to candidates for inlining before doing the inlining."
}, {
  "type" : "RUNTIME",
  "name" : "CAIHotBonusWhileExpanding",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Apply a bonus to the priority of hot cutoff nodes during exploration. Set to 0 to disable."
}, {
  "type" : "RUNTIME",
  "name" : "CAIHotBonusWhileInlining",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Apply a bonus to the priority of hot nodes during inlining. Set to 0 to disable."
}, {
  "type" : "RUNTIME",
  "name" : "CMoveALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform CMove transformation on every IfNode possible."
}, {
  "type" : "RUNTIME",
  "name" : "CallGraphCompilerNodeLimit",
  "dataType" : "LONG",
  "defaultValue" : 35000,
  "description" : "Controls the maximum number of compiler nodes that can appear in the call graph."
}, {
  "type" : "RUNTIME",
  "name" : "CallGraphSizeLimit",
  "dataType" : "LONG",
  "defaultValue" : 1200,
  "description" : "Controls the maximum size of the call graph before ceasing inlining."
}, {
  "type" : "RUNTIME",
  "name" : "CallGraphSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.01,
  "description" : "Reduces the likelihood of exploring call graph subtrees that are large."
}, {
  "type" : "RUNTIME",
  "name" : "CanonicalGraphStringsCheckConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exclude virtual nodes when dumping canonical text for graphs."
}, {
  "type" : "RUNTIME",
  "name" : "CanonicalGraphStringsExcludeVirtuals",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Exclude virtual nodes when dumping canonical text for graphs."
}, {
  "type" : "RUNTIME",
  "name" : "CanonicalGraphStringsRemoveIdentities",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Attempts to remove object identity hashes when dumping canonical text for graphs."
}, {
  "type" : "RUNTIME",
  "name" : "CanonicalizerVerifyGVNAllowed",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify if the current graph state allows GVN to be performed."
}, {
  "type" : "RUNTIME",
  "name" : "ClearMetricsAfterBootstrap",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Clear the debug metrics after bootstrap."
}, {
  "type" : "RUNTIME",
  "name" : "CollectImageBuildStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Collect information during image build about devirtualized invokes and bytecode exceptions."
}, {
  "type" : "RUNTIME",
  "name" : "CollectYoungGenerationSeparately",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if a full GC collects the young generation separately or together with the old generation. Serial GC only."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationBailoutAsFailure",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Treat compilation bailouts like compilation failures."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationCountLimit",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of compilations allowed for any method before the VM exits (a value of 0 means there is no limit)."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationExcludePhases",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude certain phases from compilation, either unconditionally or with a method filter. Multiple exclusions can be specified separated by ':'. Phase names are matched as substrings, e.g.: CompilationExcludePhasesPartialEscape:LoopA.*,B.foo excludes PartialEscapePhase from all compilations and any phase containing 'Loop' in its name from compilations of all methods in class A and of method B.foo."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationExpirationPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 300.0,
  "description" : "Time limit in seconds before a compilation expires (0 to disable the limit). A non-zero value for this option is doubled if assertions are enabled and quadrupled if DetailedAsserts is true."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationFailureAction",
  "dataType" : "STRING",
  "defaultValue" : "Silent",
  "description" : "Specifies the action to take when compilation fails."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationIsolateAddressSpaceSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Size of the reserved address space of each compilation isolate (0: default for new isolates)."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationNoProgressPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 30.0,
  "description" : "Time limit in seconds before a compilation expires (0 to disable the limit) because no progress was made in the compiler."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationNoProgressStartTrackingProgressPeriod",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "Delay in seconds before compilation progress detection starts."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationWatchDogStartDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Delay in seconds before watch dog monitors a compilation (0 disables monitoring)."
}, {
  "type" : "RUNTIME",
  "name" : "CompilationWatchDogVMExitDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of seconds after which a compilation appearing to make no progress causes the VM to exit (0 disables VM exiting)."
}, {
  "type" : "RUNTIME",
  "name" : "CompileGraalWithC1Only",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "In tiered mode compile Graal and JVMCI using optimized first tier code."
}, {
  "type" : "RUNTIME",
  "name" : "CompileInIsolates",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Activate runtime compilation in separate isolates (enable support during image build with option SupportCompileInIsolates)."
}, {
  "type" : "RUNTIME",
  "name" : "CompileInPerThreadReusedIsolates",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Create one reusable isolate per compilation thread as opposed to one isolate per compilation (enable through CompileInIsolates)."
}, {
  "type" : "RUNTIME",
  "name" : "CompilerConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Names the compiler configuration to use. If omitted, the compiler configuration with the highest auto-selection priority is used. To see the set of available configurations, supply the value 'help' to this option."
}, {
  "type" : "RUNTIME",
  "name" : "CompilerNodePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.006,
  "description" : "Controls the likelihood of exploring subtrees that already have a lot of code during inlining."
}, {
  "type" : "RUNTIME",
  "name" : "ConcGCThreads",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of concurrent GC threads G1 will use."
}, {
  "type" : "RUNTIME",
  "name" : "ConditionalElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ConditionalEliminationBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run conditional elimination before static analysis."
}, {
  "type" : "RUNTIME",
  "name" : "ConditionalEliminationMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ConsiderVectorizableLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Consider the vectorizability of loop during the duplication of a merge inside a loop.There are rare cases where duplication can destroy vectorization."
}, {
  "type" : "RUNTIME",
  "name" : "CostNewLiveVariable",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "PullThroughPhiOptimization: Abstract cost for the creation of a new live value: new values can have a negativeimpact on register allocation, therefore we penalize it."
}, {
  "type" : "RUNTIME",
  "name" : "CostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 32.0,
  "description" : "PullThroughPhiOptimization: Cost/Benefit heuristic for EE floating node duplication: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "CostReductionFactorHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 128.0,
  "description" : "See CostReductionFactor."
}, {
  "type" : "RUNTIME",
  "name" : "Count",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which counters are enabled. See the Dump option for the pattern syntax. An empty value enables all counters unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningBudget",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Code size budget of the strip mining transformation in terms of NodeCostSize."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningBudgetHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See CountedStripMiningBudget."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "The max number of iterations the counted inner loop takes."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningLogCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print counter phi values on each outer and inner loop iteration."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningMinFrequency",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimal frequency to consider a loop for strip mining."
}, {
  "type" : "RUNTIME",
  "name" : "CountedStripMiningNodeSizeSmallGraphs",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Code size in NodeSize defining when code size heuristics starts capping strip mining."
}, {
  "type" : "RUNTIME",
  "name" : "Counters",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of counters that are enabled irrespective of the value for Count option. An empty value enables all counters unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "CrashAt",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for method(s) that will trigger an exception when compiled. This option exists to test handling compilation crashes gracefully. See the MethodFilter option for the pattern syntax. A ':Bailout' suffix will raise a bailout exception and a ':PermanentBailout' suffix will raise a permanent bailout exception."
}, {
  "type" : "RUNTIME",
  "name" : "CutoffCodeSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0E-5,
  "description" : "Controls the likelihood of further exploring subtrees with a lot of code during inlining."
}, {
  "type" : "RUNTIME",
  "name" : "DebugPeelingSynonyms",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Debug simulation synonyms during simulation-based loop peeling."
}, {
  "type" : "RUNTIME",
  "name" : "DebugStubsAndSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable debug output for stub code generation and snippet preparation."
}, {
  "type" : "RUNTIME",
  "name" : "DefaultLoopFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 100.0,
  "description" : "Default frequency for loops with unknown local frequency."
}, {
  "type" : "RUNTIME",
  "name" : "DefaultUnswitchFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.7,
  "description" : "Default unswitching factor for control split node with unkown profile data."
}, {
  "type" : "RUNTIME",
  "name" : "DeoptALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "DeoptAfterOSR",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deoptimize OSR compiled code when the OSR entry loop is finished if there is no mature profile available for the rest of the method."
}, {
  "type" : "RUNTIME",
  "name" : "DeoptsToDisableOptimisticOptimization",
  "dataType" : "LONG",
  "defaultValue" : 40,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "DetailedAsserts",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable expensive assertions if normal assertions (i.e. -ea or -esa) are enabled."
}, {
  "type" : "RUNTIME",
  "name" : "DetectInvertedLoopsAsCounted",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "DevirtualizeHotCallees",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Devirtualizes callees that are hot."
}, {
  "type" : "RUNTIME",
  "name" : "DiagnoseDumpLevel",
  "dataType" : "STRING",
  "defaultValue" : ":3",
  "description" : "Specify the dump level if CompilationFailureAction#Diagnose is used.See CompilationFailureAction for details. file:doc-files/CompilationFailureActionHelp.txt."
}, {
  "type" : "RUNTIME",
  "name" : "DiagnosticDetails",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Specifies how many details are printed for certain diagnostic thunks, e.g.: 'DumpThreads:1,DumpRegisters:2'. A value of 1 will result in the maximum amount of information, higher values will print less information. By default, the most detailed output is enabled for all diagnostic thunks. Wildcards (*) are supported in the name of the diagnostic thunk."
}, {
  "type" : "RUNTIME",
  "name" : "DisableExplicitGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Ignore calls to System.gc()."
}, {
  "type" : "RUNTIME",
  "name" : "DisableIntercept",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Disable intercepting exceptions in debug scopes."
}, {
  "type" : "RUNTIME",
  "name" : "DisableIntrinsics",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Disable intrinsics matching the given method filter (see MethodFilter option for details). For example, 'DisableIntrinsicsString.equals' disables intrinsics for any method named 'equals' in a class whose simple name is 'String'. You can append ':verbose' at the end of the filter value to print out disabled intrinsics as they are encountered during compilation (e.g., 'String.equals:verbose')."
}, {
  "type" : "RUNTIME",
  "name" : "DominatorUsageTreeMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "Dump",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Filter pattern for specifying scopes in which dumping is enabled."
}, {
  "type" : "RUNTIME",
  "name" : "DumpAfterEveryBCI",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump the current graph after every bci to IGV."
}, {
  "type" : "RUNTIME",
  "name" : "DumpAfterEveryLowering",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump lowering after every node to igv."
}, {
  "type" : "RUNTIME",
  "name" : "DumpDetailedNodeTypeStats",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Gather statistics on local variables and their lifetimes relative to FrameStates."
}, {
  "type" : "RUNTIME",
  "name" : "DumpEndVersusExitLoopFrequencies",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Debug flag to dump loop frequency differences computed based on loop end or exit nodes.If the frequencies diverge a lot, this may indicate missing profiles on control flowinside the loop body."
}, {
  "type" : "RUNTIME",
  "name" : "DumpHeapAndExit",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Create a heap dump and exit."
}, {
  "type" : "RUNTIME",
  "name" : "DumpMethodsData",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump a JSON array containing all methods included in the image and exit."
}, {
  "type" : "RUNTIME",
  "name" : "DumpOnError",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Send compiler IR to dump handlers on error."
}, {
  "type" : "RUNTIME",
  "name" : "DumpOnPhaseChange",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Dump a before and after graph if the named phase changes the graph.%nThe argument is substring matched against the simple name of the phase class."
}, {
  "type" : "RUNTIME",
  "name" : "DumpPath",
  "dataType" : "STRING",
  "defaultValue" : "graal_dumps",
  "description" : "The directory where various Graal dump files are written."
}, {
  "type" : "RUNTIME",
  "name" : "DumpingErrorsAreFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Treat any exceptions during dumping as fatal."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicateALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform Duplications as long as there is any sane improvement."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicateMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable or Disable the Hot method duplication phase."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationBudgetFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.25,
  "description" : "Percentage in node cost graph size for the duplication budget. Computed relative to the methods code size."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationBudgetFactorHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See DuplicationBudgetFactor."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationBudgetFactorLate",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "Percentage in node cost graph size for the late duplication budget. Computed relative to the methods code size."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationCostReductionFactor",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Cost/Benefit heuristic for EE simulation-based code duplication: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationCostReductionFactorHotCode",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "See DuplicationCostReductionFactor."
}, {
  "type" : "RUNTIME",
  "name" : "DuplicationMinBranchFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.66,
  "description" : "Ignore low frequency branches during duplication."
}, {
  "type" : "RUNTIME",
  "name" : "DynamicCountersPrintGroupSeparator",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use grouping separators for number printing."
}, {
  "type" : "RUNTIME",
  "name" : "EEPeelAlot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "EagerSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Eagerly construct extra snippet info."
}, {
  "type" : "RUNTIME",
  "name" : "EarlyCodeEmissionOrder",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable early code emission order computation instead of late code emission order computation."
}, {
  "type" : "RUNTIME",
  "name" : "EarlyExpandCheckCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve code generation by making checkcast operations better optimizable early in the compilation pipeline."
}, {
  "type" : "RUNTIME",
  "name" : "EarlyGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform early global value numbering."
}, {
  "type" : "RUNTIME",
  "name" : "EarlyLICM",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform early loop invariant code motion."
}, {
  "type" : "RUNTIME",
  "name" : "EmitStringSubstitutions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Emit substitutions for String methods."
}, {
  "type" : "RUNTIME",
  "name" : "EnableSignalHandling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enables signal handling."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseCloneReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to eliminate array clone operations by handling clone operations in early read elimination."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseEAIterations",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : "Enterprise PEA Iterations."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseEarlyGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform an extended version of early global value numbering on a graph.Considers only graphs without floating guards."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseEarlyInversionGVN",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enterprise Loop Inversion for GVN."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseExactIVOpt",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve counted loop detection by specially handling math exact operations with code duplication."
}, {
  "type" : "RUNTIME",
  "name" : "EnterprisePartialUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE version of partial loop unrolling that considers more loop shapes for unrolling."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseRCELogRangeCheckValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Log all range check sub values to stdout."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseRangeCheckElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform range check elimination for java long type range checks."
}, {
  "type" : "RUNTIME",
  "name" : "EnterpriseReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run more read eliminations early in the compilation pipeline."
}, {
  "type" : "RUNTIME",
  "name" : "ErgoHeapSizeLimit",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Maximum ergonomically set heap size (in bytes); zero means use MaxRAM * MaxRAMPercentage / 100. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "EscapeAnalysisBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Run partial escape analysis on compiler graphs before static analysis."
}, {
  "type" : "RUNTIME",
  "name" : "EscapeAnalysisIterations",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "EscapeAnalysisLoopCutoff",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "EscapeAnalyzeOnly",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ExactFullUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 800,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ExactPartialUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 200,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ExcludeFunctionFromDuplication",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude compilations that MethodFilter.match this string from the duplication optimization."
}, {
  "type" : "RUNTIME",
  "name" : "ExitOnOutOfMemoryError",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Exit on the first occurrence of an out-of-memory error that is thrown because the Java heap is out of memory."
}, {
  "type" : "RUNTIME",
  "name" : "ExpandAllProximityBonus",
  "dataType" : "DOUBLE",
  "defaultValue" : 6.0,
  "description" : "The decrease in call graph expansion pressure when there are few call nodes left to explore."
}, {
  "type" : "RUNTIME",
  "name" : "ExpandAllProximityBonusInertia",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "The inertia at which the expand-all proximity bonus decreases with the number of yet unexpanded nodes."
}, {
  "type" : "RUNTIME",
  "name" : "ExpansionInertiaBaseValue",
  "dataType" : "LONG",
  "defaultValue" : 550,
  "description" : "The slowness at which the expansion pressure grows with code size; the higher it is, the slower the pressure growth."
}, {
  "type" : "RUNTIME",
  "name" : "ExpansionInertiaInvokeBonus",
  "dataType" : "LONG",
  "defaultValue" : 14,
  "description" : "The extra slowness at which the expansion pressure grows with the code size, for each extra invoke node."
}, {
  "type" : "RUNTIME",
  "name" : "ExpansionInertiaMax",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "The max slowness at which the expansion pressure grows with the code size."
}, {
  "type" : "RUNTIME",
  "name" : "ExpectedEdenSize",
  "dataType" : "LONG",
  "defaultValue" : 33554432,
  "description" : "Soft upper limit for used eden size. The hinted GC will be performed if the used eden size exceeds this value."
}, {
  "type" : "RUNTIME",
  "name" : "ExplicitGCInvokesConcurrent",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "A System.gc() request invokes a concurrent collection. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ExtendedAsserts",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable extended asserts which slow down analysis."
}, {
  "type" : "RUNTIME",
  "name" : "FailedLoopExplosionIsFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not bail out but throw an exception on failed loop explosion."
}, {
  "type" : "RUNTIME",
  "name" : "FallbackExecutorRuntimeJavaArg",
  "dataType" : "STRING",
  "defaultValue" : "<string>*",
  "description" : "Internal option used to specify runtime java arguments for FallbackExecutor."
}, {
  "type" : "RUNTIME",
  "name" : "FlightRecorder",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable Java Flight Recorder."
}, {
  "type" : "RUNTIME",
  "name" : "FlightRecorderLogging",
  "dataType" : "STRING",
  "defaultValue" : "allwarning",
  "description" : "Usage: -XX:FlightRecorderLogging[tag1[+tag2...][*][level][,...]]."
}, {
  "type" : "RUNTIME",
  "name" : "FloatingDivNodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to float non-constant division operations to expose global value numbering of divisions."
}, {
  "type" : "RUNTIME",
  "name" : "ForceAdversarialLayout",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Place N-byte constants in the data section such that they are misaligned with respect to N*2. For example, place 4 byte constants at offset 4, 12 or 20, etc. This layout is used to detect instructions that load constants with alignment smaller than the fetch size. For instance, an XORPS instruction that does a 16-byte fetch of a 4-byte float not aligned to 16 bytes will cause a segfault."
}, {
  "type" : "RUNTIME",
  "name" : "ForceDumpGraphsBeforeCompilation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force-dump graphs before compilation."
}, {
  "type" : "RUNTIME",
  "name" : "ForceExplicitReachabilityFence",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force an explicit compiler node for Reference.reachabilityFence, instead of relying on FrameState liveness."
}, {
  "type" : "RUNTIME",
  "name" : "ForceGuardHoistingLoopDuplicationWithoutPGO",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Consider methods for guard hoisting loop duplication even if not using PGO."
}, {
  "type" : "RUNTIME",
  "name" : "ForceUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force partial unrolling of loops if at all possible."
}, {
  "type" : "RUNTIME",
  "name" : "FrameStateLivenessStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Gather statistics on local variables and their lifetimes relative to FrameStates."
}, {
  "type" : "RUNTIME",
  "name" : "FullUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollAsPEACleanup",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform full unrolling as a Partial Escape Analysis Cleanup."
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollCodeSizeBudgetFactorForLargeGraphs",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Maximum factor by which full unrolling can increase code size for large graphs. The FullUnrollSmallGraphThreshold option determines which graphs are small."
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollCodeSizeBudgetFactorForSmallGraphs",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "Maximum factor by which full unrolling can increase code size for small graphs. The FullUnrollSmallGraphThreshold option determines which graphs are small."
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollConstantCompareBoost",
  "dataType" : "LONG",
  "defaultValue" : 15,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollMaxApplication",
  "dataType" : "LONG",
  "defaultValue" : 60,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 600,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollMaxNodes",
  "dataType" : "LONG",
  "defaultValue" : 700,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "FullUnrollSmallGraphThreshold",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "The threshold in terms of NodeSize for a graph to be considered small for the purpose of full unrolling. Applied in conjunction with the FullUnrollCodeSizeBudgetFactorForSmallGraphs and FullUnrollCodeSizeBudgetFactorForLargeGraphs options."
}, {
  "type" : "RUNTIME",
  "name" : "G1ConcMarkStepDurationMillis",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "Target duration of individual concurrent marking steps in milliseconds."
}, {
  "type" : "RUNTIME",
  "name" : "G1ConcRefinementThreads",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of parallel remembered set update threads. Will be set ergonomically by default."
}, {
  "type" : "RUNTIME",
  "name" : "G1ConfidencePercent",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Confidence level for MMU/pause predictions."
}, {
  "type" : "RUNTIME",
  "name" : "G1HeapWastePercent",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : "Amount of space, expressed as a percentage of the heap size, that G1 is willing not to collect to avoid expensive GCs."
}, {
  "type" : "RUNTIME",
  "name" : "G1MixedGCCountTarget",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "The target number of mixed GCs after a marking cycle."
}, {
  "type" : "RUNTIME",
  "name" : "G1PeriodicGCInterval",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of milliseconds after a previous GC to wait before triggering a periodic gc. A value of zero disables periodically enforced gc cycles."
}, {
  "type" : "RUNTIME",
  "name" : "G1PeriodicGCInvokesConcurrent",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines the kind of periodic GC. Set to true to have G1 perform a concurrent GC as periodic GC, otherwise use a STW Full GC."
}, {
  "type" : "RUNTIME",
  "name" : "G1PeriodicGCSystemLoadThreshold",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "Maximum recent system wide load as returned by the 1m value of getloadavg() at which G1 triggers a periodic GC. A load above this value cancels a given periodic GC. A value of zero disables this check."
}, {
  "type" : "RUNTIME",
  "name" : "G1RSetUpdatingPauseTimePercent",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "A target percentage of time that is allowed to be spend on processing remembered set update buffers during the collection pause."
}, {
  "type" : "RUNTIME",
  "name" : "G1RefProcDrainInterval",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "The number of discovered reference objects to process before draining concurrent marking work queues."
}, {
  "type" : "RUNTIME",
  "name" : "G1ReservePercent",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "It determines the minimum reserve we should have in the heap to minimize the probability of promotion failure."
}, {
  "type" : "RUNTIME",
  "name" : "G1SATBBufferEnqueueingThresholdPercent",
  "dataType" : "LONG",
  "defaultValue" : 60,
  "description" : "Before enqueueing them, each mutator thread tries to do some filtering on the SATB buffers it generates. If post-filtering the percentage of retained entries is over this threshold the buffer will be enqueued for processing. A value of 0 specifies that mutator threads should not do such filtering."
}, {
  "type" : "RUNTIME",
  "name" : "G1SATBBufferSize",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "Number of entries in an SATB log buffer."
}, {
  "type" : "RUNTIME",
  "name" : "G1UpdateBufferSize",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "Size of an update buffer."
}, {
  "type" : "RUNTIME",
  "name" : "G1UseAdaptiveIHOP",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Adaptively adjust the initiating heap occupancy from the initial value of InitiatingHeapOccupancyPercent. The policy attempts to start marking in time based on application behavior."
}, {
  "type" : "RUNTIME",
  "name" : "G1UseConcRefinement",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Control whether concurrent refinement is performed. Disabling effectively ignores G1RSetUpdatingPauseTimePercent."
}, {
  "type" : "RUNTIME",
  "name" : "G1VerifyHeapRegionCodeRoots",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify the code root lists attached to each heap region."
}, {
  "type" : "RUNTIME",
  "name" : "GCDebugStartCycle",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Start tracing compiled GC barriers after N garbage collections (disabled if N < 0)."
}, {
  "type" : "RUNTIME",
  "name" : "GCDrainStackTargetSize",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Number of entries we will try to leave on the stack during gc. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "GCPauseIntervalMillis",
  "dataType" : "LONG",
  "defaultValue" : 201,
  "description" : "Time slice for MMU specification. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "GCTimeRatio",
  "dataType" : "LONG",
  "defaultValue" : 12,
  "description" : "Adaptive size policy application time to GC time ratio. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "GenJavaCodeFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Generate Java code before high tier lowering for methods that MethodFilter.match this string."
}, {
  "type" : "RUNTIME",
  "name" : "GenJavaCodeSaveDirectory",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path for saving generated Java code. If the value is omitted the debug dump path will be used."
}, {
  "type" : "RUNTIME",
  "name" : "GenJavaCodeWithComments",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Generate comments alongside variable declarations."
}, {
  "type" : "RUNTIME",
  "name" : "GenLoopSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "GenericDynamicCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Turn on the benchmark counters, and displays the results on VM shutdown."
}, {
  "type" : "RUNTIME",
  "name" : "GraalArithmeticStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use Graal arithmetic stubs instead of HotSpot stubs where possible."
}, {
  "type" : "RUNTIME",
  "name" : "GraalCompileOnly",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "A filter applied to a method the VM has selected for compilation by Graal. A method not matching the filter is redirected to a lower tier compiler. The filter format is the same as for the MethodFilter option."
}, {
  "type" : "RUNTIME",
  "name" : "GraphCompressionThreshold",
  "dataType" : "LONG",
  "defaultValue" : 70,
  "description" : "Graal graph compression is performed when percent of live nodes falls below this value."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Duplicate certain loops and eliminate their guards."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationHoistFraction",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "Duplicate only loops where at least this fraction of guards can be hoisted."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationMaxSize",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Duplicate only loops up to this estimated size."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationMaxSizeHotCode",
  "dataType" : "LONG",
  "defaultValue" : 2048,
  "description" : "See GuardHoistingLoopDuplicationMaxSize."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationMinBodyIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Duplicate only loops with at least this many expected iterations of the loop body."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationMinBodyIterationsHotCode",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "See GuardHoistingLoopDuplicationMinBodyIterations."
}, {
  "type" : "RUNTIME",
  "name" : "GuardHoistingLoopDuplicationMinHotness",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Duplicate only loops in methods executed at least this number of times."
}, {
  "type" : "RUNTIME",
  "name" : "GuardPriorities",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "HeapDumpOnOutOfMemoryError",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump heap to file (see HeapDumpPath) the first time the image throws java.lang.OutOfMemoryError because it ran out of Java heap."
}, {
  "type" : "RUNTIME",
  "name" : "HeapDumpPath",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Path of the file or directory in which heap dumps are created. An empty value means a default file name will be used. An existing directory means the dump will be placed in the directory and have the default file name."
}, {
  "type" : "RUNTIME",
  "name" : "HeapSizePerGCThread",
  "dataType" : "LONG",
  "defaultValue" : 44040192,
  "description" : "Size of heap (bytes) per GC thread used in calculating the number of GC threads. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "HeapVerifierVerbosity",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Control heap verifier verbosity level: 0 - quiet, 1 - info, 2 - warning, 3 - all."
}, {
  "type" : "RUNTIME",
  "name" : "HighTierInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "HighTierPartialUnrolling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE partial unrolling in high tier."
}, {
  "type" : "RUNTIME",
  "name" : "HotCodeMinSelfTime",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "Minimal self time for a compilation unit to be considered hot globally."
}, {
  "type" : "RUNTIME",
  "name" : "HotSpotDeoptExplicitExceptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Testing only option that forces deopts for exception throws."
}, {
  "type" : "RUNTIME",
  "name" : "HotSpotPostOnExceptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Testing only option that forces deopts for exception throws."
}, {
  "type" : "RUNTIME",
  "name" : "HotSpotPrintInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print inlining optimizations."
}, {
  "type" : "RUNTIME",
  "name" : "HybridStaticContext",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable hybrid context for static methods, i.e. uses invocation site as context for static methods."
}, {
  "type" : "RUNTIME",
  "name" : "IgnoreBadDuplications",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore duplications with a bad benefit cost relation."
}, {
  "type" : "RUNTIME",
  "name" : "IgnoreDeoptUsages",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ImageObjectTreeExpandRoots",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Override the default suppression of specified roots. See: StaticAnalysisReports.md."
}, {
  "type" : "RUNTIME",
  "name" : "ImageObjectTreeExpandTypes",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Override the default suppression of specified types. See: StaticAnalysisReports.md."
}, {
  "type" : "RUNTIME",
  "name" : "ImageObjectTreeSuppressRoots",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Suppress the expansion of specified roots. See: StaticAnalysisReports.md."
}, {
  "type" : "RUNTIME",
  "name" : "ImageObjectTreeSuppressTypes",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Suppress the expansion of specified types. See: StaticAnalysisReports.md."
}, {
  "type" : "RUNTIME",
  "name" : "ImplicitExceptionWithoutStacktraceIsFatal",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Determines if implicit exceptions are fatal if they don't have a stack trace."
}, {
  "type" : "RUNTIME",
  "name" : "InfeasiblePathCorrelation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "InfeasiblePathCorrelationWindowSize",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Limit of the number of dominating if nodes to consider in infeasible path correlation to avoid compile time explosion."
}, {
  "type" : "RUNTIME",
  "name" : "InitialHeapSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Initial heap size (in bytes); zero means use ergonomics. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "InitialRAMPercentage",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.5625,
  "description" : "Percentage of real memory used for initial heap size. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "InitiatingHeapOccupancyPercent",
  "dataType" : "LONG",
  "defaultValue" : 45,
  "description" : "The percent occupancy (IHOP) of the current old generation capacity above which a concurrent mark cycle will be initiated. Its value may change over time if adaptive IHOP is enabled, otherwise the value remains constant. In the latter case a value of 0 will result as frequent as possible concurrent marking cycles. A value of 100 disables concurrent marking. Fragmentation waste in the old generation is not considered free space in this calculation. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "InjectedCompilationDelay",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of seconds by which to slow down each compilation. The compilations slowed down can be restricted with MethodFilter. This option exists to test the compilation watchdog."
}, {
  "type" : "RUNTIME",
  "name" : "Inline",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable inlining."
}, {
  "type" : "RUNTIME",
  "name" : "InlineAllBonus",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "The bonus applied to call nodes that can be fully inlined."
}, {
  "type" : "RUNTIME",
  "name" : "InlineBeforeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "RUNTIME",
  "name" : "InlineDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inlines trivial methods during bytecode parsing."
}, {
  "type" : "RUNTIME",
  "name" : "InlineDuringParsingMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Maximum depth when inlining during bytecode parsing."
}, {
  "type" : "RUNTIME",
  "name" : "InlineEverything",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "InlineGraalStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Embed all the emitted code for Graal-generated stubs."
}, {
  "type" : "RUNTIME",
  "name" : "InlineMegamorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with megamorphic type profile (i.e., not all types could be recorded)."
}, {
  "type" : "RUNTIME",
  "name" : "InlineMonomorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with monomorphic type profile."
}, {
  "type" : "RUNTIME",
  "name" : "InlinePartialIntrinsicExitDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inlines partial intrinsic exits during bytecode parsing when possible. A partial intrinsic exit is a call within an intrinsic to the method being intrinsified and denotes semantics of the original method that the intrinsic does not support."
}, {
  "type" : "RUNTIME",
  "name" : "InlinePolymorphicCalls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inline calls with polymorphic type profile."
}, {
  "type" : "RUNTIME",
  "name" : "InlineVTableStubs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "InlinedCompilerNodeLimit",
  "dataType" : "LONG",
  "defaultValue" : 20000,
  "description" : "Controls the maximum number of compiler nodes that can be inlined into the compiled method."
}, {
  "type" : "RUNTIME",
  "name" : "InliningCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.02,
  "description" : "The coefficient used to compute the inlining threshold; the higher, the more to inline."
}, {
  "type" : "RUNTIME",
  "name" : "InliningDepthError",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum inlining depth during partial evaluation before reporting an infinite recursion."
}, {
  "type" : "RUNTIME",
  "name" : "InsertPreMainPostOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Do not unroll the main loop, only create pre-main-post."
}, {
  "type" : "RUNTIME",
  "name" : "InspectGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Inspect analysis graphs."
}, {
  "type" : "RUNTIME",
  "name" : "InspectServerContentPath",
  "dataType" : "STRING",
  "defaultValue" : "inspect",
  "description" : "Path to the contents of the Inspect web server."
}, {
  "type" : "RUNTIME",
  "name" : "InstallSegfaultHandler",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Install segfault handler that prints register contents and full Java stacktrace."
}, {
  "type" : "RUNTIME",
  "name" : "InterceptBailout",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Intercept also bailout exceptions."
}, {
  "type" : "RUNTIME",
  "name" : "Intrinsify",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use compiler intrinsifications."
}, {
  "type" : "RUNTIME",
  "name" : "InversionMinLocalFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency for a loop to be considered for inversion."
}, {
  "type" : "RUNTIME",
  "name" : "InversionMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Minimal relative frequency for a loop to be considered for inversion."
}, {
  "type" : "RUNTIME",
  "name" : "InvertMultiEndLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "InvertNonLeafLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "InvertVectorizableLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "IsolatedLoopHeaderAlignment",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "Alignment in bytes for loop header blocks that have no fall through paths."
}, {
  "type" : "RUNTIME",
  "name" : "IterativePeelingLimit",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Allow iterative peeling of loops up to this many times (each time the peeling phase runs)."
}, {
  "type" : "RUNTIME",
  "name" : "IterativePeelingOuterFrequencyBonusThreshold",
  "dataType" : "DOUBLE",
  "defaultValue" : 4.0,
  "description" : "Allow iterative peeling of loops with an outer frequency bonus above this value."
}, {
  "type" : "RUNTIME",
  "name" : "JfrBasedExecutionSamplerStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print statistics collected during JFR-based execution sampler run."
}, {
  "type" : "RUNTIME",
  "name" : "LIRDynMoveProfileMethod",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dynamic move profiling per method."
}, {
  "type" : "RUNTIME",
  "name" : "LIRInstructionVerifierPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path to jar file containing LIR instruction verifier."
}, {
  "type" : "RUNTIME",
  "name" : "LIROptConstantLoadOptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable constant load optimization."
}, {
  "type" : "RUNTIME",
  "name" : "LIROptControlFlowOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LIROptEdgeMoveOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LIROptLSRAEliminateSpillMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable spill move elimination."
}, {
  "type" : "RUNTIME",
  "name" : "LIROptLSRAOptimizeSpillPosition",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable spill position optimization."
}, {
  "type" : "RUNTIME",
  "name" : "LIROptLSStackSlotAllocator",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use linear scan stack slot allocation."
}, {
  "type" : "RUNTIME",
  "name" : "LIROptNullCheckOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LIROptRedundantMoveElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LIROptStackMoveOptimizer",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LIROptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable LIR level optimizations."
}, {
  "type" : "RUNTIME",
  "name" : "LIRProfileMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables profiling of methods."
}, {
  "type" : "RUNTIME",
  "name" : "LIRProfileMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables profiling of move types on LIR level. Move types are for example stores (register to stack), constant loads (constant to register) or copies (register to register)."
}, {
  "type" : "RUNTIME",
  "name" : "LSRAOptSplitOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "LSRA optimization: Only split but do not reassign."
}, {
  "type" : "RUNTIME",
  "name" : "LSRAOptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable LSRA optimization."
}, {
  "type" : "RUNTIME",
  "name" : "LargeChildrenCountPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.005,
  "description" : "Reduces the likelihood of exploring call graphs that have a lot of children below the root."
}, {
  "type" : "RUNTIME",
  "name" : "LimitInlinedInvokes",
  "dataType" : "DOUBLE",
  "defaultValue" : 5.0,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LimitObjectArrayLength",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable a limit for the number of objects recorded for each type of a type state before disabling heap sensitivity for that type. The analysis must be heap sensitive."
}, {
  "type" : "RUNTIME",
  "name" : "ListMetrics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Lists on the console at VM shutdown the metric names available to the Timers, Counters and MemUseTrackers options. Note that this only lists the metrics that were initialized during the VM execution and so will not include metrics for compiler code that is not executed."
}, {
  "type" : "RUNTIME",
  "name" : "LoadExceptionObjectInVM",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use a VM runtime call to load and clear the exception object from the thread at the start of a compiled exception handler."
}, {
  "type" : "RUNTIME",
  "name" : "LoadProfiles",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Load per compilation profile information."
}, {
  "type" : "RUNTIME",
  "name" : "LocalsPerCounter",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Number of cpu locals per counter. It has to be a power of 2."
}, {
  "type" : "RUNTIME",
  "name" : "Log",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which logging is enabled. See the Dump option for the pattern syntax."
}, {
  "type" : "RUNTIME",
  "name" : "LogFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which logging is sent. A %p in the name will be replaced with a string identifying the process, usually the process id and %t will be replaced by System.currentTimeMillis(). If the current runtime is in an isolate, then %i will be replaced by '<isolate id>' otherwise %i is removed. An %I is the same as %i except that the replacement is '<isolate id>@<isolate address>'. Using %o as filename sends logging to System.out whereas %e sends logging to System.err."
}, {
  "type" : "RUNTIME",
  "name" : "LogVerbose",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable more verbose log output when available."
}, {
  "type" : "RUNTIME",
  "name" : "LoopBoundOptimizationPhase",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to improve counted loop detection by finding more precise loop bounds."
}, {
  "type" : "RUNTIME",
  "name" : "LoopExitVsLoopEndFrequencyDiff",
  "dataType" : "DOUBLE",
  "defaultValue" : 1000.0,
  "description" : "Scaling factor of frequency difference computed based on loop ends or exits."
}, {
  "type" : "RUNTIME",
  "name" : "LoopHeaderAlignment",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Alignment in bytes for loop header blocks."
}, {
  "type" : "RUNTIME",
  "name" : "LoopInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LoopMaxUnswitch",
  "dataType" : "LONG",
  "defaultValue" : 3,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LoopOnFatalError",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Execute an endless loop before printing diagnostics for a fatal error."
}, {
  "type" : "RUNTIME",
  "name" : "LoopPeeling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LoopPredication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Hoists array bounds checks out of simple loops. This is ignored if SpeculativeGuardMovement is enabled."
}, {
  "type" : "RUNTIME",
  "name" : "LoopPredicationMainPath",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Restricts LoopPredication to only focus on array bounds checks that dominate the back edge of a loop."
}, {
  "type" : "RUNTIME",
  "name" : "LoopRotation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable Loop Rotation to let the compiler detect more loops as counted."
}, {
  "type" : "RUNTIME",
  "name" : "LoopRotationAssertCountedAfter",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LoopRotationToxicNodeSetMaxNodecost",
  "dataType" : "LONG",
  "defaultValue" : 512,
  "description" : "Maximum size in NodeSize of the code to be duplicated during rotation."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchFrequencyBoost",
  "dataType" : "DOUBLE",
  "defaultValue" : 20.0,
  "description" : "Number of nodes allowed for a loop unswitching per loop frequency. The number of nodes allowed for the unswitching is proportional to the relative frequency of the loop by this constant."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchFrequencyMaxFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.95,
  "description" : "Maximun value for the frequency factor of an invariant."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchFrequencyMinFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.05,
  "description" : "Minimum value for the frequency factor of an invariant."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchMaxIncrease",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Maximum loop unswitching code size increase in nodes."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchMinSplitFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Lower bound for the minimun frequency of an invariant condition to be unswitched."
}, {
  "type" : "RUNTIME",
  "name" : "LoopUnswitchTrivial",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Number of nodes allowed for a loop unswitching regardless of the loop frequency."
}, {
  "type" : "RUNTIME",
  "name" : "LoopVectorizationKeepPostLoop",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Keep the original loop as the post-loop during loop vectorization."
}, {
  "type" : "RUNTIME",
  "name" : "LoopVectorizationMaxBodyNodes",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "The maximal number of fixed body nodes to consider in loop vectorization."
}, {
  "type" : "RUNTIME",
  "name" : "MarkStackSize",
  "dataType" : "LONG",
  "defaultValue" : 4194304,
  "description" : "Size of marking stack. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MarkStackSizeMax",
  "dataType" : "LONG",
  "defaultValue" : 536870912,
  "description" : "Maximum size of marking stack. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MatchExpressions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow backend to match complex expressions."
}, {
  "type" : "RUNTIME",
  "name" : "MaxCallingContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum length of the methods context chains."
}, {
  "type" : "RUNTIME",
  "name" : "MaxCallingContextWidth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of contexts to record for a method. It only affects the analysis when the max and min calling context depth are different."
}, {
  "type" : "RUNTIME",
  "name" : "MaxCompilationProblemsPerAction",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "The maximum number of compilation failures to handle with the action specified by CompilationFailureAction before changing to a less verbose action. This does not apply to the ExitVM action."
}, {
  "type" : "RUNTIME",
  "name" : "MaxConstantObjectsPerType",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of constant objects recorded for each type before merging the constants into one unique constant object per type. If the value is 0 there is no limit."
}, {
  "type" : "RUNTIME",
  "name" : "MaxDirectMemorySize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Maximum total size of NIO direct-buffer allocations."
}, {
  "type" : "RUNTIME",
  "name" : "MaxDuplicationAnchor",
  "dataType" : "LONG",
  "defaultValue" : 2147483647,
  "description" : "Maximum duplication anchor number."
}, {
  "type" : "RUNTIME",
  "name" : "MaxDuplicationFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Max amount of extra effort to expend handling irreducible loops. A value < 1 disables support for irreducible loops."
}, {
  "type" : "RUNTIME",
  "name" : "MaxGCPauseMillis",
  "dataType" : "LONG",
  "defaultValue" : 200,
  "description" : "Adaptive size policy maximum GC pause time goal in millisecond, or the maximum GC time per MMU time slice. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MaxGraphSizeNodeCost",
  "dataType" : "LONG",
  "defaultValue" : 100000,
  "description" : "Maximum node cost graph size for duplication. If a graph is bigger duplication will stop."
}, {
  "type" : "RUNTIME",
  "name" : "MaxHeapContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum length of the context used to model a heap object in addition to the allocation site; used only when ContextSensitiveHeap is enabled."
}, {
  "type" : "RUNTIME",
  "name" : "MaxHeapContextWidth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum number of contexts to record for a heap object. It only affects the analysis when the max and min calling context depth are different."
}, {
  "type" : "RUNTIME",
  "name" : "MaxHeapFree",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum free bytes reserved for allocations, in bytes (0 for automatic according to GC policy). Serial GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MaxHeapSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum heap size at run-time, in bytes."
}, {
  "type" : "RUNTIME",
  "name" : "MaxJavaStackTraceDepth",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "The maximum number of lines in the stack trace for Java exceptions (0 means all)."
}, {
  "type" : "RUNTIME",
  "name" : "MaxMispredictionCostIncreaseFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Abstract measure of the cost of branch misprediction. Higher values make generation of conditional moves more likely."
}, {
  "type" : "RUNTIME",
  "name" : "MaxNewSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The maximum size of the young generation at run-time, in bytes."
}, {
  "type" : "RUNTIME",
  "name" : "MaxObjectSetSize",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "The maximum number of objects recorded for each type of a type state before disabling heap sensitivity for that type. The analysis must be heap sensitive. It has a minimum value of 1."
}, {
  "type" : "RUNTIME",
  "name" : "MaxPolymorphicDispatches",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "The maximum number of dispatches in guarded polymorphic inlining."
}, {
  "type" : "RUNTIME",
  "name" : "MaxPriorityInliningPeelingIterations",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Max number of precise inlining peeling iterations."
}, {
  "type" : "RUNTIME",
  "name" : "MaxRAM",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Physical memory size (in bytes). By default, the value is queried from the OS/container during VM startup."
}, {
  "type" : "RUNTIME",
  "name" : "MaxRAMPercentage",
  "dataType" : "DOUBLE",
  "defaultValue" : 25.0,
  "description" : "Maximum percentage of real memory used for maximum heap size. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MaxRounds",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Maximum number of expand/inline rounds during a single run of the phase."
}, {
  "type" : "RUNTIME",
  "name" : "MaxSimulationIterations",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Maximum simulation-duplication iterations of the duplication optimization per invocation."
}, {
  "type" : "RUNTIME",
  "name" : "MaxSimulationIterationsHotCode",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "See MaxSimulationIterations."
}, {
  "type" : "RUNTIME",
  "name" : "MaxSplitsPerNode",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "MaxTemplatesPerSnippet",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "MaxTenuringThreshold",
  "dataType" : "LONG",
  "defaultValue" : 15,
  "description" : "Maximum value for tenuring threshold. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MaxUnswitchSuccessors",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Maximum number of split successors before aborting unswitching."
}, {
  "type" : "RUNTIME",
  "name" : "MaxValueNodesPartialEscapeSelectiveInlining",
  "dataType" : "LONG",
  "defaultValue" : 35000,
  "description" : "Controls the maximum number of value nodes that can appear in the final graph."
}, {
  "type" : "RUNTIME",
  "name" : "MaxVectorAlignmentUnroll",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Maximum number of unrolled alignment instructions."
}, {
  "type" : "RUNTIME",
  "name" : "MaxVectorUnroll",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Maximum length of linear-code vector operations."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumDesiredSize",
  "dataType" : "LONG",
  "defaultValue" : 20000,
  "description" : "Maximum desired size of the compiler graph in nodes."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumEscapeAnalysisArrayLength",
  "dataType" : "LONG",
  "defaultValue" : 128,
  "description" : "The maximum length of an array that will be escape analyzed."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumHeapSizePercent",
  "dataType" : "LONG",
  "defaultValue" : 80,
  "description" : "The maximum heap size as percent of physical memory. Serial and epsilon GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumInliningSize",
  "dataType" : "LONG",
  "defaultValue" : 300,
  "description" : "Inlining is explored up to this number of nodes in the graph for each call site."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumLoopExplosionCount",
  "dataType" : "LONG",
  "defaultValue" : 10000,
  "description" : "Max number of loop explosions per method."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumRecursiveInlining",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : "Maximum level of recursive inlining."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumTransitiveEnabledPullFactor",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "PullThroughPhiOptimization: Maximum number of algorithm iterations per optimization invocation."
}, {
  "type" : "RUNTIME",
  "name" : "MaximumYoungGenerationSizePercent",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "The maximum size of the young generation as a percentage of the maximum heap size. Serial and epsilon GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MegamorphicInliningMinMethodProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.33,
  "description" : "Minimum probability for methods to be inlined for megamorphic type profiles."
}, {
  "type" : "RUNTIME",
  "name" : "MemUseTrackers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of memory usage trackers that are enabled irrespective of the value for TrackMemUse option. An empty value enables all memory usage trackers unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "MethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for matching methods. The syntax for a pattern is:."
}, {
  "type" : "RUNTIME",
  "name" : "MethodFilterRootOnly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Only check MethodFilter against the root method in the context if true, otherwise check all methods."
}, {
  "type" : "RUNTIME",
  "name" : "MethodInlineBailoutLimit",
  "dataType" : "LONG",
  "defaultValue" : 5000,
  "description" : "Per-compilation method inlining exploration limit before giving up (use 0 to disable)."
}, {
  "type" : "RUNTIME",
  "name" : "MetricsFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "File to which metrics are dumped per compilation."
}, {
  "type" : "RUNTIME",
  "name" : "MidTierInversion",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "MidTierPartialUnrolling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable EE partial unrolling in mid tier."
}, {
  "type" : "RUNTIME",
  "name" : "MinBlockFrequencyPull",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.66,
  "description" : "PullThroughPhiOptimization: Ignore low frequency branches during duplication."
}, {
  "type" : "RUNTIME",
  "name" : "MinCallingContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The minimum length of the methods context chains."
}, {
  "type" : "RUNTIME",
  "name" : "MinDuplicationAnchor",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Skip n duplication anchors."
}, {
  "type" : "RUNTIME",
  "name" : "MinHeapContextDepth",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The minimum length of the context used to model a heap object in addition to the allocation site; used only when ContextSensitiveHeap is enabled."
}, {
  "type" : "RUNTIME",
  "name" : "MinHeapDeltaBytes",
  "dataType" : "LONG",
  "defaultValue" : 172032,
  "description" : "The minimum change in heap space due to GC (in bytes). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MinHeapFreeRatio",
  "dataType" : "LONG",
  "defaultValue" : 40,
  "description" : "The minimum percentage of heap free after GC to avoid expansion. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MinHeapSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The minimum heap size at run-time, in bytes."
}, {
  "type" : "RUNTIME",
  "name" : "MinPolymorphicDispatchProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "The minimum probability for using a dispatch in guarded polymorphic inlining."
}, {
  "type" : "RUNTIME",
  "name" : "MinRAMPercentage",
  "dataType" : "DOUBLE",
  "defaultValue" : 50.0,
  "description" : "Minimum percentage of real memory used for maximum heap size on systems with small physical memory size. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MinTLABSize",
  "dataType" : "LONG",
  "defaultValue" : 2048,
  "description" : "Minimum allowed TLAB size (in bytes). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "MinifyInvertedPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Break chained phis."
}, {
  "type" : "RUNTIME",
  "name" : "MinimalBulkZeroingSize",
  "dataType" : "LONG",
  "defaultValue" : 2048,
  "description" : "If applicable, use bulk zeroing instructions when the zeroing size in bytes exceeds this threshold."
}, {
  "type" : "RUNTIME",
  "name" : "MinimalGraphNodeSizeCheckSize",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Minimal size in NodeSize to check the graph size increases of phases."
}, {
  "type" : "RUNTIME",
  "name" : "MinimalRegions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to reduce duplication code size to the minimal amount of code."
}, {
  "type" : "RUNTIME",
  "name" : "MinimumBlindedConstantSize",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimum size (in bytes) of constants to blind."
}, {
  "type" : "RUNTIME",
  "name" : "MinimumPeelFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.35,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "MoveGuardsUpwards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Move guard nodes to earlier places in the dominator tree if all successors of basic block share a common guard condition."
}, {
  "type" : "RUNTIME",
  "name" : "MultiExitCostFactor",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "Cost/Benefit heuristic for EE unrolling: If a loop has multiple exits, cost is increased by this value for every none-sinking loop exit."
}, {
  "type" : "RUNTIME",
  "name" : "MultiExitCostFactorSink",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Cost/Benefit heuristic for EE unrolling: If a loop has multiple exits, cost is increased by this value for every sinking loop exit."
}, {
  "type" : "RUNTIME",
  "name" : "NDCV",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Run level for NoDeadCodeVerifyHandler (0 off, 1 info, 2 verbose, 3 fatal)."
}, {
  "type" : "RUNTIME",
  "name" : "NewRatio",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Ratio of old/new generation sizes. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "NewSize",
  "dataType" : "LONG",
  "defaultValue" : 1048576,
  "description" : "Initial new generation size (in bytes). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMinedBenefitBoost",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Benefit boost for strip mined non counted loops."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningBudget",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Code size budget of the non-counted strip mining transformation in terms of NodeCostSize."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningBudgetHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See NonCountedStripMiningBudget."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningForceStripAll",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force non-counted strip mining for all loops (also counted ones), test flag only."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningIgnoreSmallLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore small loops from strip mining, the iv overhead can cause slowdowns."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "The max number of iterations the counted inner loop takes. If -1, the frequency of the loop will be used to derive an inner frequency."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningMaximumInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 8192,
  "description" : "If NonCountedStripMiningInnerLoopTrips -1: Maximum loop trips for strip mined non-counted loops."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningMinFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 16.0,
  "description" : "Minimal loop frequency to consider a non-counted loop for strip mining."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningMinimumInnerLoopTrips",
  "dataType" : "LONG",
  "defaultValue" : 512,
  "description" : "If NonCountedStripMiningInnerLoopTrips -1: Minimum loop trips for strip mined non-counted loops."
}, {
  "type" : "RUNTIME",
  "name" : "NonCountedStripMiningReuseIVs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try to reuse pre-existing induction variables inside non-counted loops for the strip-mined loop's exit check."
}, {
  "type" : "RUNTIME",
  "name" : "ObjdumpExecutables",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated list of candidate GNU objdump executables. If not specified, disassembling via GNU objdump is disabled. Otherwise, the first existing executable in the list is used."
}, {
  "type" : "RUNTIME",
  "name" : "OldPLABSize",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "Size of old gen promotion LAB's (in HeapWords). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "OldSize",
  "dataType" : "LONG",
  "defaultValue" : 5242880,
  "description" : "Initial tenured generation size (in bytes). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "OmitHotExceptionStacktrace",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptAssumptions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptBulkAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptCompressedFrameStateValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptConditionalMoves",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize simple if branches with conditional moves."
}, {
  "type" : "RUNTIME",
  "name" : "OptConvertDeoptsToGuards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptDeDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptDeoptimizationGrouping",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptDevirtualizeInvokesOptimistically",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptEarlyReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptEliminateGuards",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptExactArithmetic",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptFloatingReads",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptGuardRangeGrouping",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptImplicitNullChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptLockElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptLoopPhiStamps",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Inject stamps on induction variables."
}, {
  "type" : "RUNTIME",
  "name" : "OptMethodDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Duplicate methods to form hot part and cold part areas."
}, {
  "type" : "RUNTIME",
  "name" : "OptPropagateEquality",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Propagate equality into dominated nodes."
}, {
  "type" : "RUNTIME",
  "name" : "OptPullThroughPhi",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptReadElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptScheduleOutOfLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptStringConcat",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Optimize StringBuilder construction."
}, {
  "type" : "RUNTIME",
  "name" : "OptStringConcatDump",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump graphs to help debug operation."
}, {
  "type" : "RUNTIME",
  "name" : "OptStringConcatDumpUnhandled",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Dump graphs to help debug operation."
}, {
  "type" : "RUNTIME",
  "name" : "OptWriteBarrierElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Eliminate redundant write barriers."
}, {
  "type" : "RUNTIME",
  "name" : "OptWriteMotion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform write sinking, which moves writes inside loops after them, effectively reducing their frequency."
}, {
  "type" : "RUNTIME",
  "name" : "OptimisticAliasingAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "OptimisticAliasingUseSpeculation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use speculation and deoptimization in optimistic aliasing analysis."
}, {
  "type" : "RUNTIME",
  "name" : "OptimizationLog",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable the structured optimization log and specify where it is printed."
}, {
  "type" : "RUNTIME",
  "name" : "OptimizationLogPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path to the directory where the optimization log is saved if OptimizationLog is set to Directory. Directories are created if they do no exist."
}, {
  "type" : "RUNTIME",
  "name" : "OptimizeLoopAccesses",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable access node optimizations for loops."
}, {
  "type" : "RUNTIME",
  "name" : "OptimizeReturnedParameter",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Analysis: Detect methods that return one of their parameters and hardwire the parameter straight to the return."
}, {
  "type" : "RUNTIME",
  "name" : "OptimizeVectorAPI",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Expand Vector API operations to optimized machine instructions."
}, {
  "type" : "RUNTIME",
  "name" : "OverrideProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow multiple compilations of the same method by overriding existing profiles."
}, {
  "type" : "RUNTIME",
  "name" : "PLABWeight",
  "dataType" : "LONG",
  "defaultValue" : 75,
  "description" : "Percentage (0-100) used to weight the current sample when computing exponentially decaying average for ResizePLAB. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ParGCArrayScanChunk",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Scan a subset of object array and push remainder, if array is bigger than this. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ParallelGCBufferWastePct",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Wasted fraction of parallel allocation buffer. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ParallelGCThreads",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of parallel threads G1 will use."
}, {
  "type" : "RUNTIME",
  "name" : "ParallelRefProcBalancingEnabled",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable balancing of reference processing queues. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ParallelRefProcEnabled",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable parallel reference processing whenever possible. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ParsingContextMaxDepth",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "Limit the parsing context depth. Default value is arbitrary set at 100."
}, {
  "type" : "RUNTIME",
  "name" : "PartialEscapeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "PartialRedundancyElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable partial redundancy elimination."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnroll",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollCostReductionFactorHighTier",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "Cost/Benefit heuristic for EE unrolling in high tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollCostReductionFactorHotCodeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 32,
  "description" : "See PartialUnrollCostReductionFactorMidTier."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollCostReductionFactorMidTier",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "Cost/Benefit heuristic for EE unrolling in mid tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMaxIterationsHighTier",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Maximum number of iterations to unroll for a high tier main loop."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMaxIterationsMidTier",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Maximum number of iterations to unroll for a mid tier main loop."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMaxSizeHighTier",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "Maximum node cost size of a loop to be considered for high tier unrolling."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMaxSizeHotCodeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "See PartialUnrollMaxSizeMidTier."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMaxSizeMidTier",
  "dataType" : "LONG",
  "defaultValue" : 256,
  "description" : "Maximum node cost size of a loop to be considered for mid tier tier unrolling."
}, {
  "type" : "RUNTIME",
  "name" : "PartialUnrollMinFrequency",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Minimal loop frequency to consider a loop for partial unrolling."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileCutThreshold",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "The limit on the number of paths at control-flow merges. Decreasing this value reduces the number of paths, but also shortens them."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileDumpFile",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Dump information for path profile (null or file name). If set to null, then dumping is disabled."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileFrequentThreshold",
  "dataType" : "LONG",
  "defaultValue" : 500,
  "description" : "Maximum acceptable number of paths coming from the inbound of a merge if both of them are frequent."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileGlobalLowFrequencyRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "If some block's relative frequency drops below this number times the maximum relative frequency in the graph, then the block is considered infrequent."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileLocalLowFrequencyRatio",
  "dataType" : "DOUBLE",
  "defaultValue" : 10.0,
  "description" : "If the ratio of the merge's frequency with its inbound's frequency is greater than this threshold, then the inbound is considered infrequent."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileMaxTotalCounters",
  "dataType" : "LONG",
  "defaultValue" : 4000000,
  "description" : "Maximum number of counters to use in path profiling for all instrumented methods."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfilePolicy",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Enable or disable the path-profiling algorithm. If it enables it, it also allows to select which mode to execute."
}, {
  "type" : "RUNTIME",
  "name" : "PathProfileRegenerate",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Controls whether the path-regeneration algorithm is executed."
}, {
  "type" : "RUNTIME",
  "name" : "PeelALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress test for the loop peeling optimization by applying it aggressively."
}, {
  "type" : "RUNTIME",
  "name" : "PeelOnlyLoopWithNodeID",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Peel only the loop with the specific loop begin node ID for debugging purposes."
}, {
  "type" : "RUNTIME",
  "name" : "PeelingConsideredMinLoopIterations",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.5,
  "description" : "Minimal loop body iterations necessary to consider peeling."
}, {
  "type" : "RUNTIME",
  "name" : "PeelingConsideredMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 4.0,
  "description" : "Minimal relative frequency of loop begin necessary to consider peeling."
}, {
  "type" : "RUNTIME",
  "name" : "PeelingHighTierCostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 64.0,
  "description" : "Cost/Benefit heuristic for EE simulation-based loop peeling in high tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "PeelingMidTierCostReductionFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 8.0,
  "description" : "Cost/Benefit heuristic for EE simulation-based loop peeling in mid tier: reduce cost by a constant factor when comparing with relative benefit."
}, {
  "type" : "RUNTIME",
  "name" : "PenalizeComplexLoopControlFlow",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Increase the cost of duplicating control flow splits inside loops if they are not foldable.The generally tend to complicate control flow and generate worse code in the backend."
}, {
  "type" : "RUNTIME",
  "name" : "PercentTimeInIncrementalCollection",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Percentage of total collection time that should be spent on young generation collections. Serial GC with collection policy 'BySpaceAndTime' only."
}, {
  "type" : "RUNTIME",
  "name" : "PerfDataMemorySize",
  "dataType" : "LONG",
  "defaultValue" : 32768,
  "description" : "Size of performance data memory region. Will be rounded up to a multiple of the native os page size."
}, {
  "type" : "RUNTIME",
  "name" : "PerfDataSamplingInterval",
  "dataType" : "LONG",
  "defaultValue" : 200,
  "description" : "Jvmstat instrumentation sampling interval (in milliseconds)."
}, {
  "type" : "RUNTIME",
  "name" : "PerfMaxStringConstLength",
  "dataType" : "LONG",
  "defaultValue" : 1024,
  "description" : "Maximum PerfStringConstant string length before truncation."
}, {
  "type" : "RUNTIME",
  "name" : "PhiMinificationMinimalLoopFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency to consider a loop for inverted phi minifaction."
}, {
  "type" : "RUNTIME",
  "name" : "PreTouchParallelChunkSize",
  "dataType" : "LONG",
  "defaultValue" : 1073741824,
  "description" : "Per-thread chunk size for parallel memory pre-touch. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "PreferUnsignedComparison",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Rewrite signed comparisons to unsigned ones if the result is equal."
}, {
  "type" : "RUNTIME",
  "name" : "PrefetchCopyIntervalInBytes",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "How far ahead to prefetch destination area (< 0 means off). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "PrefetchScanIntervalInBytes",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "How far ahead to prefetch scan area (< 0 means off). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "PrintAnalysisCallTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print analysis call tree, a breadth-first tree reduction of the call graph."
}, {
  "type" : "RUNTIME",
  "name" : "PrintAnalysisCallTreeType",
  "dataType" : "STRING",
  "defaultValue" : "TXT",
  "description" : "Change the output format of the analysis call tree, available options are TXT and CSV. See: Reports.md."
}, {
  "type" : "RUNTIME",
  "name" : "PrintAnalysisStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print analysis results statistics."
}, {
  "type" : "RUNTIME",
  "name" : "PrintBBInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables dumping of basic blocks relative PC and frequencies in the dump directory."
}, {
  "type" : "RUNTIME",
  "name" : "PrintBackendCFG",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping scheduled HIR, LIR, register allocation and code generation info to the C1Visualizer."
}, {
  "type" : "RUNTIME",
  "name" : "PrintBlockMapping",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping CFG built during initial BciBlockMapping."
}, {
  "type" : "RUNTIME",
  "name" : "PrintCallEdges",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print call edges with other analysis results statistics."
}, {
  "type" : "RUNTIME",
  "name" : "PrintCanonicalGraphStringFlavor",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Choose format used when dumping canonical text for graphs: 0 gives a scheduled graph (better for spotting changes involving the schedule) while 1 gives a CFG containing expressions rooted at fixed nodes (better for spotting small structure differences)."
}, {
  "type" : "RUNTIME",
  "name" : "PrintCanonicalGraphStrings",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable dumping canonical text from for graphs."
}, {
  "type" : "RUNTIME",
  "name" : "PrintCompilation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print an informational line to the console for each completed compilation."
}, {
  "type" : "RUNTIME",
  "name" : "PrintDetailedAllocationProfiling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print detailed information for each allocation site."
}, {
  "type" : "RUNTIME",
  "name" : "PrintFlags",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Show available options based on comma-separated option-types (allowed categories: User, Expert, Debug)."
}, {
  "type" : "RUNTIME",
  "name" : "PrintFlagsWithExtraHelp",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Print extra help, if available, based on comma-separated option names. Pass * to show all options that contain extra help."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print summary GC information after each collection."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGCSummary",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print summary GC information after application main method returns. Serial GC only."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGCTimes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the time for each of the phases of each collection, if +VerboseGC. Serial GC only."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraph",
  "dataType" : "STRING",
  "defaultValue" : "File",
  "description" : "Where IdealGraphVisualizer graph dumps triggered by Dump or DumpOnError should be written."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraphFile",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Setting to true sets PrintGraphfile, setting to false sets PrintGraphnetwork."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraphHost",
  "dataType" : "STRING",
  "defaultValue" : "127.0.0.1",
  "description" : "Host part of the address to which graphs are dumped."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraphPort",
  "dataType" : "LONG",
  "defaultValue" : 4445,
  "description" : "Port part of the address to which graphs are dumped in binary format."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraphStateDiff",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Prints the difference in the graph state caused by each phase of the suite."
}, {
  "type" : "RUNTIME",
  "name" : "PrintGraphWithSchedule",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Schedule graphs as they are dumped."
}, {
  "type" : "RUNTIME",
  "name" : "PrintIRWithLIR",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print HIR along side LIR as the latter is generated."
}, {
  "type" : "RUNTIME",
  "name" : "PrintImageObjectTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print image object hierarchy."
}, {
  "type" : "RUNTIME",
  "name" : "PrintIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the registered intrinsics in a format compatible with DisableIntrinsics."
}, {
  "type" : "RUNTIME",
  "name" : "PrintLIRWithAssembly",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Include the LIR as comments with the final assembly."
}, {
  "type" : "RUNTIME",
  "name" : "PrintLoweringScheduleToTTY",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print schedule result pre lowering to TTY."
}, {
  "type" : "RUNTIME",
  "name" : "PrintPointsToStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Report analysis statistics."
}, {
  "type" : "RUNTIME",
  "name" : "PrintProfileLoading",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print to stdout when a profile is loaded."
}, {
  "type" : "RUNTIME",
  "name" : "PrintProfilingInformation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print profiling information when parsing a method's bytecode."
}, {
  "type" : "RUNTIME",
  "name" : "PrintSynchronizedAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print types used for Java synchronization."
}, {
  "type" : "RUNTIME",
  "name" : "PrintUnmodifiedGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dump a graph even if it has not changed since it was last dumped. Change detection is based on adding and deleting nodes or changing inputs."
}, {
  "type" : "RUNTIME",
  "name" : "PriorityForceInline",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Unconditionally inline all methods matching the pattern using the priority-based inliner. See the MethodFilter option for a description of the pattern syntax."
}, {
  "type" : "RUNTIME",
  "name" : "PriorityInliningPolicy",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "The policy to use, must be empty for automatic resolution."
}, {
  "type" : "RUNTIME",
  "name" : "PriorityInliningTuningPolicy",
  "dataType" : "STRING",
  "defaultValue" : "DomainSpecific",
  "description" : "Comma-separated list of analysis policies for exploring the methods in the call graph and for inlining, empty for no policy."
}, {
  "type" : "RUNTIME",
  "name" : "PriorityNeverInline",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Never inline methods matching the pattern using the priority-based inliner. See the MethodFilter option for a description of the pattern syntax."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileAllocations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable profiling of allocation sites."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileAllocationsContext",
  "dataType" : "STRING",
  "defaultValue" : "AllocatingMethod",
  "description" : "Control the naming and granularity of the counters when using ProfileAllocations."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileAnalysisOperations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the progress of the static analysis."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileCompiledMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ProfileConstantObjects",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the creation of constant objects."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileLockElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ProfileMethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Restrict saving or loading of profiles based on this filter. See the MethodFilter option for the pattern syntax."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileMonitors",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable profiling of monitor operations."
}, {
  "type" : "RUNTIME",
  "name" : "ProfileOptBulkAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ProfileSelfTime",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Excludes time spent in invoked methods; measures total time including subcalls when turned off."
}, {
  "type" : "RUNTIME",
  "name" : "ProfilesDumpFile",
  "dataType" : "STRING",
  "defaultValue" : "default.iprof",
  "description" : "Value should point to a profile dump file."
}, {
  "type" : "RUNTIME",
  "name" : "ProfilingDumpPeriod",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Integer greater than zero representing the duration in seconds that will be used to trigger a profile dump. Any integer less than one disables periodic dumps."
}, {
  "type" : "RUNTIME",
  "name" : "ProfilingDumpVerbose",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Emit a message to stderr after dumping a profile."
}, {
  "type" : "RUNTIME",
  "name" : "PropagateEqualityDepth",
  "dataType" : "LONG",
  "defaultValue" : 6,
  "description" : "Maximum depth of dependency when propagating equals property."
}, {
  "type" : "RUNTIME",
  "name" : "PruneLargeDominatorUsageTrees",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "PullThroughPhiCodeSizeIncrease",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "PullThroughPhiOptimization: Percentage in node cost graph size for the floating node duplication budget. Computed relative to the method's graph size."
}, {
  "type" : "RUNTIME",
  "name" : "PullThroughPhiCodeSizeIncreaseHotCode",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.5,
  "description" : "See PullThroughPhiCodeSizeIncrease."
}, {
  "type" : "RUNTIME",
  "name" : "QueuedAllocationWarningCount",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Number of times an allocation that queues behind a GC will retry before printing a warning. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "RawConditionalElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ReadEliminationMaxLoopVisits",
  "dataType" : "LONG",
  "defaultValue" : 5,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ReadProxySchedulingStrategy",
  "dataType" : "STRING",
  "defaultValue" : "LATEST_OUT_OF_LOOPS",
  "description" : "Chose the scheduling strategy for inserting the read proxies."
}, {
  "type" : "RUNTIME",
  "name" : "ReassociateExpressions",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Re-associate loop invariants and constants."
}, {
  "type" : "RUNTIME",
  "name" : "ReduceDCE",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Disable optional dead code eliminations."
}, {
  "type" : "RUNTIME",
  "name" : "RegisterPressure",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated list of registers that register allocation is limited to."
}, {
  "type" : "RUNTIME",
  "name" : "RelativeBenefitInliningCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "The coefficient used to compute the inlining threshold; the higher, the hard to inline."
}, {
  "type" : "RUNTIME",
  "name" : "RelaxTypeFlowStateConstraints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Allow a type flow state to contain types not compatible with its declared type."
}, {
  "type" : "RUNTIME",
  "name" : "RemoveLoopSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Remove safepoints on counted loop ends."
}, {
  "type" : "RUNTIME",
  "name" : "RemoveNeverExecutedCode",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "RemoveSaturatedTypeFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable the type flow saturation analysis performance optimization."
}, {
  "type" : "RUNTIME",
  "name" : "ReplaceInputsWithConstantsBasedOnStamps",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ReservedAddressSpaceSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of bytes that should be reserved for the heap address space."
}, {
  "type" : "RUNTIME",
  "name" : "ResizePLAB",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dynamically resize (survivor space) promotion LAB's. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ResizeTLAB",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dynamically resize TLAB size for threads. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "RespectVectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Try avoid unrolling vectorizable loops."
}, {
  "type" : "RUNTIME",
  "name" : "ReuseRecursiveDuplicatedMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Do not duplicate recursive methods but rather reuse a previous duplicate."
}, {
  "type" : "RUNTIME",
  "name" : "RewriteStripMinedCounterTo32Bit",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Rewrite the counter of a strip mined loop to have a 32bit type."
}, {
  "type" : "RUNTIME",
  "name" : "RootSizePenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.1,
  "description" : "Reduces likelihood of spending a lot of time inlining when the IR is already large."
}, {
  "type" : "RUNTIME",
  "name" : "RootSizePenaltyTypicalGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 3250,
  "description" : "At what size of the root IR graph do we start to consider applying a exploration penalty."
}, {
  "type" : "RUNTIME",
  "name" : "RotateNonLeafLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "RotationMinLocalFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 2.0,
  "description" : "Minimal loop frequency for a loop to be considered for rotation."
}, {
  "type" : "RUNTIME",
  "name" : "RotationMinRelativeFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "Minimal relative frequency for a loop to be considered for rotation."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDArithmeticReduceMinLength",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : "Minimum vector length for matching SIMD arithmetic reduce patterns."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationCheckLoadGroupProfitability",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Check for profitability when grouping memory loads to SIMD loads."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationDirectLoadStore",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow SIMDVectorization to vectorize load to store opportunities when there are no matching SIMD operations between load and store."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationSingletons",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable matching of singleton groups to increase corner-case matching."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationVolatileLoads",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow load grouping to include grouping of volatile loads. Note currently this may generate incorrect results."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationVolatileWrites",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allow store grouping to include grouping of volatile writes. Note currently this may generate incorrect results."
}, {
  "type" : "RUNTIME",
  "name" : "SIMDVectorizationWindowSize",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Set the number of dominating and dominated blocks scanned per block."
}, {
  "type" : "RUNTIME",
  "name" : "SafepointPromptnessFailureNanos",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Exit the VM if I can not come to a safepoint in this many nanoseconds. 0 implies forever."
}, {
  "type" : "RUNTIME",
  "name" : "SafepointPromptnessWarningNanos",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Print a warning if I can not come to a safepoint in this many nanoseconds. 0 implies forever."
}, {
  "type" : "RUNTIME",
  "name" : "SaveProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Save per compilation profile information."
}, {
  "type" : "RUNTIME",
  "name" : "SaveProfilesPath",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Path for saving compilation profiles. If the value is omitted the debug dump path will be used."
}, {
  "type" : "RUNTIME",
  "name" : "ScanObjectsParallel",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Object scanning in parallel."
}, {
  "type" : "RUNTIME",
  "name" : "ScheduledDuplicationSimulation",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Simulation can either only process fixed nodes or schedule the graph and also process floating nodes."
}, {
  "type" : "RUNTIME",
  "name" : "ShowConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Writes to the VM log information about the compiler configuration selected."
}, {
  "type" : "RUNTIME",
  "name" : "ShowDumpFiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print the name of each dump file path as it's created."
}, {
  "type" : "RUNTIME",
  "name" : "ShowSubstitutionSourceInfo",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Controls whether the source position information of snippets and method substitutions are exposed to HotSpot. Can be useful when profiling to get more precise position information."
}, {
  "type" : "RUNTIME",
  "name" : "SimulationBasedLoopPeeling",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use DBDS algorithm to simulate the impact of peeling on a loop."
}, {
  "type" : "RUNTIME",
  "name" : "SimulationPruneUnlikelyBranches",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Ignore low frequency branches during simulation."
}, {
  "type" : "RUNTIME",
  "name" : "SmallCompiledLowLevelGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 330,
  "description" : "If the previous low-level graph size of the method exceeds the threshold, it is not inlined."
}, {
  "type" : "RUNTIME",
  "name" : "SmallGraphDuplicationBudgetFactor",
  "dataType" : "DOUBLE",
  "defaultValue" : 1.0,
  "description" : "See 'DuplicationBudgetFactor': for small graphs."
}, {
  "type" : "RUNTIME",
  "name" : "SmallGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 2000,
  "description" : "Node cost graph size for a graph to be considered 'small'."
}, {
  "type" : "RUNTIME",
  "name" : "SmallRootIrPenaltyCoefficient",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.02,
  "description" : "Reduces the likelihood of exploring call graphs with IR size much larger than the root."
}, {
  "type" : "RUNTIME",
  "name" : "SnippetCounters",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable counters for various paths in snippets."
}, {
  "type" : "RUNTIME",
  "name" : "SoftRefLRUPolicyMSPerMB",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Number of milliseconds per MB of free space in the heap. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "SpectrePHTBarriers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Select a strategy to mitigate speculative bounds check bypass (aka Spectre-PHT or Spectre V1)."
}, {
  "type" : "RUNTIME",
  "name" : "SpectrePHTIndexMasking",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Mask indices to scope access to allocation size after bounds check."
}, {
  "type" : "RUNTIME",
  "name" : "SpeculativeExecutionBarriers",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stop speculative execution on all branch targets with execution barrier instructions."
}, {
  "type" : "RUNTIME",
  "name" : "SpeculativeGuardMovement",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Move loop invariant guards (e.g., array bounds checks) out of loops."
}, {
  "type" : "RUNTIME",
  "name" : "SpeculativeStoreCheck",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Speculates that arrays have exact type to optimize store checks."
}, {
  "type" : "RUNTIME",
  "name" : "StackSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The size of each thread stack at run-time, in bytes."
}, {
  "type" : "RUNTIME",
  "name" : "StartFlightRecording",
  "dataType" : "STRING",
  "defaultValue" : "",
  "description" : "Start flight recording with options."
}, {
  "type" : "RUNTIME",
  "name" : "StrengthenGraphWithConstants",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Perform constant folding in StrengthenGraphs."
}, {
  "type" : "RUNTIME",
  "name" : "StressExplicitExceptionCode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code emitting explicit exception throwing code."
}, {
  "type" : "RUNTIME",
  "name" : "StressInvokeWithExceptionNode",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code emitting invokes with explicit exception edges."
}, {
  "type" : "RUNTIME",
  "name" : "StressTestEarlyReads",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Stress the code by emitting reads at earliest instead of latest point."
}, {
  "type" : "RUNTIME",
  "name" : "StrictDeoptInsertionChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform checks that guards and deopts aren't introduced in graphs that should handle exceptions explicitly."
}, {
  "type" : "RUNTIME",
  "name" : "StrictProfiles",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Throw an error if an attempt is made to overwrite/update a profile loaded from disk."
}, {
  "type" : "RUNTIME",
  "name" : "StringIndexOfConstantLimit",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "String.indexOf invocations will be evaluated at compile time if the receiver is a constant and its length is smaller than this value."
}, {
  "type" : "RUNTIME",
  "name" : "StripMineALot",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force strip mining of all loops that can be strip mined."
}, {
  "type" : "RUNTIME",
  "name" : "StripMineCountedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "StripMineInvertedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Strip mine inverted loops."
}, {
  "type" : "RUNTIME",
  "name" : "StripMineNonCountedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "SupportJsrBytecodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "SupportOSRWithLocks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Support OSR compilations with locks. If DeoptAfterOSR is true we can per definition not have unbalanced enter/exits mappings. If DeoptAfterOSR is false insert artificial monitor enters after the OSRStart to have balanced enter/exits in the graph."
}, {
  "type" : "RUNTIME",
  "name" : "SurvivorRatio",
  "dataType" : "LONG",
  "defaultValue" : 8,
  "description" : "Ratio of eden/survivor space size. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "SystemicCompilationFailureRate",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Compilation failure rate indicating a systemic compilation problem that will issue a warning. The value is made absolute and clamped to produce P, a value between 0 and 100. Systemic failure is detected if the percent of failing compilations in a sliding time window > P. A negative value will cause the VM to exit after issuing the warning. Set to 0 to disable systemic compilation problem detection."
}, {
  "type" : "RUNTIME",
  "name" : "TLABAllocationWeight",
  "dataType" : "LONG",
  "defaultValue" : 35,
  "description" : "Allocation averaging weight. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TLABRefillWasteFraction",
  "dataType" : "LONG",
  "defaultValue" : 64,
  "description" : "Maximum TLAB waste at a refill (internal fragmentation). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TLABSize",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "Starting TLAB size (in bytes); zero means set ergonomically. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TLABWasteIncrement",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Increment allowed waste at slow allocation. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TLABWasteTargetPercent",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Percentage of Eden that can be wasted. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TargetPLABWastePct",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Target wasted space in last buffer as percent of overall allocation. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TargetSurvivorRatio",
  "dataType" : "LONG",
  "defaultValue" : 50,
  "description" : "Desired percentage of survivor space used after scavenge. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TearDownFailureNanos",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of nanoseconds before tearing down an isolate gives a failure message. 0 implies no message."
}, {
  "type" : "RUNTIME",
  "name" : "TearDownWarningNanos",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The number of nanoseconds before and between which tearing down an isolate gives a warning message. 0 implies no warning."
}, {
  "type" : "RUNTIME",
  "name" : "Time",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which timing is enabled. See the Dump option for the pattern syntax. An empty value enables all timers unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "TimeStampProfiling",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Profile method execution time."
}, {
  "type" : "RUNTIME",
  "name" : "TimedDynamicCounters",
  "dataType" : "LONG",
  "defaultValue" : -1,
  "description" : "Turn on the benchmark counters, and displays the results every n milliseconds."
}, {
  "type" : "RUNTIME",
  "name" : "Timers",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Comma separated names of timers that are enabled irrespective of the value for Time option. An empty value enables all timers unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "TraceAuxiliaryImageClassHistogram",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables detailed tracing of auxiliary image events."
}, {
  "type" : "RUNTIME",
  "name" : "TraceAuxiliaryImageReferenceTree",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables detailed tracing of auxiliary image events."
}, {
  "type" : "RUNTIME",
  "name" : "TraceBytecodeParserLevel",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The trace level for the bytecode parser. A value of 1 enables instruction tracing and any greater value emits a frame state trace just prior to each instruction trace.Instruction tracing output from multiple compiler threads will be interleaved so use of this option make most sense for single threaded compilation. The MethodFilter option can be used to refine tracing to selected methods."
}, {
  "type" : "RUNTIME",
  "name" : "TraceCodeCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print logging information for runtime code cache modifications."
}, {
  "type" : "RUNTIME",
  "name" : "TraceDeoptimization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print logging information for every deoptimization."
}, {
  "type" : "RUNTIME",
  "name" : "TraceDeoptimizationDetails",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print verbose logging information for every deoptimization."
}, {
  "type" : "RUNTIME",
  "name" : "TraceDuplicatedMethods",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace duplicated methods."
}, {
  "type" : "RUNTIME",
  "name" : "TraceEscapeAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "TraceExceptionHandlerStub",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace execution of stub used to handle an exception thrown by a callee."
}, {
  "type" : "RUNTIME",
  "name" : "TraceHeapChunks",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace heap chunks during collections, if +VerboseGC. Serial GC only."
}, {
  "type" : "RUNTIME",
  "name" : "TraceInlineDuringParsing",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Traces inlining performed during bytecode parsing."
}, {
  "type" : "RUNTIME",
  "name" : "TraceInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable tracing of inlining decisions."
}, {
  "type" : "RUNTIME",
  "name" : "TraceInliningForStubsAndSnippets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable inlining decision tracing in stubs and snippets."
}, {
  "type" : "RUNTIME",
  "name" : "TraceLIRGeneratorLevel",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "The trace level for the LIR generator."
}, {
  "type" : "RUNTIME",
  "name" : "TraceMonitorsMethodFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Trace monitor operations in methods whose fully qualified name contains this substring."
}, {
  "type" : "RUNTIME",
  "name" : "TraceMonitorsTypeFilter",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Trace monitor operations on objects whose type contains this substring."
}, {
  "type" : "RUNTIME",
  "name" : "TraceParserPlugins",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Traces use of plugins during bytecode parsing."
}, {
  "type" : "RUNTIME",
  "name" : "TraceUnwindStub",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Trace execution of the stub that routes an exception to a handler in the calling frame."
}, {
  "type" : "RUNTIME",
  "name" : "TrackAccessChain",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the callers for methods and accessing methods for fields."
}, {
  "type" : "RUNTIME",
  "name" : "TrackGraphSizesInDuplication",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable (if Count is enabled) graph size tracking during every duplication iteration."
}, {
  "type" : "RUNTIME",
  "name" : "TrackIPEAStatistics",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Track IPEA statistics in substratePriorityInliner."
}, {
  "type" : "RUNTIME",
  "name" : "TrackInliningStatistics",
  "dataType" : "STRING",
  "defaultValue" : "none",
  "description" : "Track inlining statistics (inlining duration, call tree size, compiler node counts, and the number of callsites). One of: none, interactive."
}, {
  "type" : "RUNTIME",
  "name" : "TrackInputFlows",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the input for type flows."
}, {
  "type" : "RUNTIME",
  "name" : "TrackMemUse",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which memory use tracking is enabled. See the Dump option for the pattern syntax. An empty value enables all memory use trackers unconditionally."
}, {
  "type" : "RUNTIME",
  "name" : "TrackNodeInsertion",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track source stack trace where a node was inserted into the graph."
}, {
  "type" : "RUNTIME",
  "name" : "TrackNodeSourcePosition",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track the NodeSourcePosition."
}, {
  "type" : "RUNTIME",
  "name" : "TrackPrimitiveValues",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Track primitive values using the infrastructure of points-to analysis."
}, {
  "type" : "RUNTIME",
  "name" : "TrivialInliningSize",
  "dataType" : "LONG",
  "defaultValue" : 10,
  "description" : "Graphs with less than this number of nodes are trivial and therefore always inlined."
}, {
  "type" : "RUNTIME",
  "name" : "TrivialLoopSizeLimitForPeeling",
  "dataType" : "DOUBLE",
  "defaultValue" : 512.0,
  "description" : "Loop peeling will consider any loop with a size (in terms of estimated machine instructions) below this value to be a prime candidate for peeling. Larger loops will only be considered for peeling if the simulated benefit of peeling is relatively high. The larger the loop, the greater the expected benefit has to be."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleCompilerConfiguration",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Select a compiler configuration for Truffle compilation (default: use Graal system compiler configuration)."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle host inlining is enabled."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningBaseBudget",
  "dataType" : "LONG",
  "defaultValue" : 5000,
  "description" : "Maximum budget for Truffle host inlining for runtime compiled methods."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningByteCodeInterpreterBudget",
  "dataType" : "LONG",
  "defaultValue" : 100000,
  "description" : "Maximum budget for Truffle host inlining for runtime compiled methods with a BytecodeInterpreterSwitch annotation."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningMaxExplorationDepth",
  "dataType" : "LONG",
  "defaultValue" : 1000,
  "description" : "Determines the maximum call depth for exploration during host inlining."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningMaxSubtreeInvokes",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "Maximum number of subtree invokes for a subtree to get inlined until it is considered too complex."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningMinFrequency",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.001,
  "description" : "Minimum relative frequency for calls to get inlined. Default 0.001 on HotSpot and no minimum frequency on SVM."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleHostInliningPrintExplored",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "When logging is activated for this phase enables printing of only explored, but ultimately not inlined call trees."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleImmutableFrameFields",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle should mark final frame fields as immutable."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleTrustedNonNullCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle trusted non-null casts are enabled."
}, {
  "type" : "RUNTIME",
  "name" : "TruffleTrustedTypeCast",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Whether Truffle trusted type casts are enabled."
}, {
  "type" : "RUNTIME",
  "name" : "TrustFinalDefaultFields",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Determines whether to treat final fields with default values as constant."
}, {
  "type" : "RUNTIME",
  "name" : "TryExplodeOverPhis",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "PullThroughPhiOptimization: Enable floating node duplication over multiple phi nodes at once."
}, {
  "type" : "RUNTIME",
  "name" : "TryPhiPhiPulls",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "PullThroughPhiOptimization: Enable floating node duplication over phis where the target node has different phis as input."
}, {
  "type" : "RUNTIME",
  "name" : "TuneInlinerExploration",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.0,
  "description" : "Increases or decreases the time spent exploring inlining opportunities under the assumption that more time results in better peak performance and less time reduces time to reach (a lower) peak performance. The value of the option is clamped between -1 and 1 inclusive. Anything below 0, reduces the exploration time and anything above 0 increases exploration time. Note that this option is only a heuristic and should be tuned for any specific application."
}, {
  "type" : "RUNTIME",
  "name" : "TypeCheckMaxHints",
  "dataType" : "LONG",
  "defaultValue" : 2,
  "description" : "The maximum number of profiled types that will be used when compiling a profiled type check. Note that TypeCheckMinProfileHitProbability also influences whether profiling info is used in compiled type checks."
}, {
  "type" : "RUNTIME",
  "name" : "TypeCheckMinProfileHitProbability",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.5,
  "description" : "If the probability that a type check will hit one the profiled types (up to TypeCheckMaxHints) is below this value, the type check will be compiled without profiling info."
}, {
  "type" : "RUNTIME",
  "name" : "TypeFlowPrinterInRadius",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "How many levels of inputs to print. A value of 0 prints only the target flow."
}, {
  "type" : "RUNTIME",
  "name" : "TypeFlowPrinterOutRadius",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "How many levels of outputs to print. A value of 0 prints only the target flow."
}, {
  "type" : "RUNTIME",
  "name" : "TypeFlowSaturationCutoff",
  "dataType" : "LONG",
  "defaultValue" : 20,
  "description" : "The maximum number of types recorded in a type flow. -1 indicates no limitation."
}, {
  "type" : "RUNTIME",
  "name" : "TypicalCallGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 100,
  "description" : "Denotes the call graph size that is considered medium size."
}, {
  "type" : "RUNTIME",
  "name" : "TypicalGraphSize",
  "dataType" : "LONG",
  "defaultValue" : 3250,
  "description" : "The typical graph size at which inlining pressure must start growing."
}, {
  "type" : "RUNTIME",
  "name" : "TypicalGraphSizeInvokeBonus",
  "dataType" : "LONG",
  "defaultValue" : 70,
  "description" : "The increase in estimated typical graph size after inlining, per each extra invoke."
}, {
  "type" : "RUNTIME",
  "name" : "TypicalGraphSizeMax",
  "dataType" : "LONG",
  "defaultValue" : 15000,
  "description" : "The maximum in estimated inlined typical graph size."
}, {
  "type" : "RUNTIME",
  "name" : "UnresolvedIsError",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Deprecated, option no longer has any effect."
}, {
  "type" : "RUNTIME",
  "name" : "UnrollEmptyLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Unroll empty loops."
}, {
  "type" : "RUNTIME",
  "name" : "UnrollInvertedLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll inverted (tail counted) loops."
}, {
  "type" : "RUNTIME",
  "name" : "UnrollMaxIterations",
  "dataType" : "LONG",
  "defaultValue" : 16,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "UnrollMultiEndLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll loops with multiple loop ends."
}, {
  "type" : "RUNTIME",
  "name" : "UnrollMultiExitLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Unroll loops with multiple loop exits."
}, {
  "type" : "RUNTIME",
  "name" : "UseBranchesWithin32ByteBoundary",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Force branch instructions to align with 32-bytes boundary, to mitigate the jcc erratum. See https://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf for more details. If not set explicitly, the default value will be determined according to the CPU model."
}, {
  "type" : "RUNTIME",
  "name" : "UseCompilationStatistics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enables CompilationStatistics."
}, {
  "type" : "RUNTIME",
  "name" : "UseDynamicNumberOfGCThreads",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Dynamically choose the number of threads up to a maximum of ParallelGCThreads that G1 will use for garbage collection work."
}, {
  "type" : "RUNTIME",
  "name" : "UseExceptionProbability",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "UseExperimentalReachabilityAnalysis",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use experimental Reachability Analysis instead of points-to."
}, {
  "type" : "RUNTIME",
  "name" : "UseGraphCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Turn on graph caching."
}, {
  "type" : "RUNTIME",
  "name" : "UseLoopEndFrequencies",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Derive loop frequencies only from backedge frequencies instead of from loop exit frequencies."
}, {
  "type" : "RUNTIME",
  "name" : "UseLoopLimitChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "UsePerfData",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Flag to disable jvmstat instrumentation for performance testing."
}, {
  "type" : "RUNTIME",
  "name" : "UsePriorityInlining",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use priority-based inlining."
}, {
  "type" : "RUNTIME",
  "name" : "UsePriorityInliningPEA",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Turn on partial escape analysis during inlining."
}, {
  "type" : "RUNTIME",
  "name" : "UseReachabilityMethodSummaries",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Use method summaries for Reachability Analysis."
}, {
  "type" : "RUNTIME",
  "name" : "UseSnippetGraphCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a cache for snippet graphs."
}, {
  "type" : "RUNTIME",
  "name" : "UseSnippetTemplateCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use a LRU cache for snippet templates."
}, {
  "type" : "RUNTIME",
  "name" : "UseTrappingNullChecks",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use traps for null checks instead of explicit null-checks."
}, {
  "type" : "RUNTIME",
  "name" : "UseTypeCheckHints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "UsedEdenProportionThreshold",
  "dataType" : "DOUBLE",
  "defaultValue" : 0.75,
  "description" : "Ratio of used bytes to total allocated bytes for eden space. Setting it to a smaller value will trade more triggered hinted GCs for less resident set size."
}, {
  "type" : "RUNTIME",
  "name" : "VTuneAbsoluteFilenames",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Use absolute path for source-filenames in VTune events."
}, {
  "type" : "RUNTIME",
  "name" : "VTuneRuntimeSourceDestDir",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Directory where Java source-files will be placed for the debugger."
}, {
  "type" : "RUNTIME",
  "name" : "VectorFoldMinIterations",
  "dataType" : "LONG",
  "defaultValue" : 4,
  "description" : "Only generate SIMD loops for vector folds expected to iterate at least this many times."
}, {
  "type" : "RUNTIME",
  "name" : "VectorIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorized array copy intrinsics."
}, {
  "type" : "RUNTIME",
  "name" : "VectorPolynomialIntrinsics",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable vectorized polynomial intrinsics."
}, {
  "type" : "RUNTIME",
  "name" : "VectorUnroll",
  "dataType" : "LONG",
  "defaultValue" : 1,
  "description" : "Unroll vectorized loops."
}, {
  "type" : "RUNTIME",
  "name" : "Vectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeAllocation",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorized array initialization."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeConditional",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of conditional code."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeDeopts",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with conditional deopts before writes."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeFoldShaped",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops implementing a higher-order 'fold' function."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeGather",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of vector gather operations."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeHashes",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of hashCode patterns."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeIntegerMinMax",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of integer min/max operations."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeLoops",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeMapShaped",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops implementing a higher-order 'map' function."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeNegativeStride",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with negative strides."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeReachabilityFences",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with reachability fences."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeSIMD",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Enable detection of SIMD patterns."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeSafepoints",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of loops with safepoints."
}, {
  "type" : "RUNTIME",
  "name" : "VectorizeSequence",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Enable vectorization of sequence values."
}, {
  "type" : "RUNTIME",
  "name" : "VerboseGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print more information about the heap before and after each collection."
}, {
  "type" : "RUNTIME",
  "name" : "Verify",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Pattern for specifying scopes in which logging is enabled. See the Dump option for the pattern syntax."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyAfterGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify memory system after GC. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyBalancedMonitors",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Emit extra code to dynamically check monitor operations are balanced."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyBeforeGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify memory system before GC. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyDuplicationOperations",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "VerifyDuringGC",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify memory system during GC (between phases). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyGCStartAt",
  "dataType" : "LONG",
  "defaultValue" : 0,
  "description" : "GC invoke count where +VerifyHeap kicks in. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyGraalGraphEdges",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform expensive verification of graph inputs, usages, successors and predecessors."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyGraalGraphs",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Verify graphs often during compilation when assertions are turned on."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyGraalPhasesSize",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify before - after relation of the relative, computed, code size of a graph."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyHeapAtReturn",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Perform platform dependent validation of the Java heap at returns."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyKillCFGUnusedNodes",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify that there are no new unused nodes when performing killCFG."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyLoopVectorization",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Run expensive checks to verify the graph after loop vectorization."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyPhases",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "VerifyRememberedSets",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Verify GC remembered sets. G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "VerifyWriteBarrierElimination",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Add code to verify that eliminated barriers weren't needed."
}, {
  "type" : "RUNTIME",
  "name" : "WarnAboutCodeSignatureMismatch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when a compilation performed with different profiles generates different backend code."
}, {
  "type" : "RUNTIME",
  "name" : "WarnAboutGraphSignatureMismatch",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when a compilation performed with different profiles generates different frontend IR."
}, {
  "type" : "RUNTIME",
  "name" : "WarnAboutNotCachedLoadedAccess",
  "dataType" : "BOOLEAN",
  "defaultValue" : true,
  "description" : "Print to stdout when requesting profiling info not present in a loaded profile."
}, {
  "type" : "RUNTIME",
  "name" : "WarnMissingIntrinsic",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Print a warning when a missing intrinsic is seen."
}, {
  "type" : "RUNTIME",
  "name" : "WriteSinkingExcludeFields",
  "dataType" : "STRING",
  "defaultValue" : "None",
  "description" : "Exclude certain fields from write sinking. Fields are specified with the same syntax as method filters, minus the signature part."
}, {
  "type" : "RUNTIME",
  "name" : "WriteableCodeCache",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Allocate code cache with write access, allowing inlining of objects."
}, {
  "type" : "RUNTIME",
  "name" : "YoungPLABSize",
  "dataType" : "LONG",
  "defaultValue" : 4096,
  "description" : "Size of young gen promotion LAB's (in HeapWords). G1 GC only."
}, {
  "type" : "RUNTIME",
  "name" : "ZapStackOnMethodEntry",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : ""
}, {
  "type" : "RUNTIME",
  "name" : "ZeroTLAB",
  "dataType" : "BOOLEAN",
  "defaultValue" : false,
  "description" : "Zero out the newly created TLAB. G1 GC only."
} ]